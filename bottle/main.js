/**
 * React v0.12.1
 *
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.React=e()}}(function(){return function e(t,n,r){function o(i,s){if(!n[i]){if(!t[i]){var u="function"==typeof require&&require;if(!s&&u)return u(i,!0);if(a)return a(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=n[i]={exports:{}};t[i][0].call(l.exports,function(e){var n=t[i][1][e];return o(n?n:e)},l,l.exports,e,t,n,r)}return n[i].exports}for(var a="function"==typeof require&&require,i=0;i<r.length;i++)o(r[i]);return o}({1:[function(e,t){"use strict";var n=e("./DOMPropertyOperations"),r=e("./EventPluginUtils"),o=e("./ReactChildren"),a=e("./ReactComponent"),i=e("./ReactCompositeComponent"),s=e("./ReactContext"),u=e("./ReactCurrentOwner"),c=e("./ReactElement"),l=(e("./ReactElementValidator"),e("./ReactDOM")),p=e("./ReactDOMComponent"),d=e("./ReactDefaultInjection"),f=e("./ReactInstanceHandles"),h=e("./ReactLegacyElement"),m=e("./ReactMount"),v=e("./ReactMultiChild"),g=e("./ReactPerf"),y=e("./ReactPropTypes"),E=e("./ReactServerRendering"),C=e("./ReactTextComponent"),R=e("./Object.assign"),M=e("./deprecated"),b=e("./onlyChild");d.inject();var O=c.createElement,D=c.createFactory;O=h.wrapCreateElement(O),D=h.wrapCreateFactory(D);var x=g.measure("React","render",m.render),P={Children:{map:o.map,forEach:o.forEach,count:o.count,only:b},DOM:l,PropTypes:y,initializeTouchEvents:function(e){r.useTouchEvents=e},createClass:i.createClass,createElement:O,createFactory:D,constructAndRenderComponent:m.constructAndRenderComponent,constructAndRenderComponentByID:m.constructAndRenderComponentByID,render:x,renderToString:E.renderToString,renderToStaticMarkup:E.renderToStaticMarkup,unmountComponentAtNode:m.unmountComponentAtNode,isValidClass:h.isValidClass,isValidElement:c.isValidElement,withContext:s.withContext,__spread:R,renderComponent:M("React","renderComponent","render",this,x),renderComponentToString:M("React","renderComponentToString","renderToString",this,E.renderToString),renderComponentToStaticMarkup:M("React","renderComponentToStaticMarkup","renderToStaticMarkup",this,E.renderToStaticMarkup),isValidComponent:M("React","isValidComponent","isValidElement",this,c.isValidElement)};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({Component:a,CurrentOwner:u,DOMComponent:p,DOMPropertyOperations:n,InstanceHandles:f,Mount:m,MultiChild:v,TextComponent:C});P.version="0.12.1",t.exports=P},{"./DOMPropertyOperations":12,"./EventPluginUtils":20,"./Object.assign":27,"./ReactChildren":31,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactDOM":37,"./ReactDOMComponent":39,"./ReactDefaultInjection":49,"./ReactElement":50,"./ReactElementValidator":51,"./ReactInstanceHandles":58,"./ReactLegacyElement":59,"./ReactMount":61,"./ReactMultiChild":62,"./ReactPerf":66,"./ReactPropTypes":70,"./ReactServerRendering":74,"./ReactTextComponent":76,"./deprecated":104,"./onlyChild":135}],2:[function(e,t){"use strict";var n=e("./focusNode"),r={componentDidMount:function(){this.props.autoFocus&&n(this.getDOMNode())}};t.exports=r},{"./focusNode":109}],3:[function(e,t){"use strict";function n(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function r(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}var o=e("./EventConstants"),a=e("./EventPropagators"),i=e("./ExecutionEnvironment"),s=e("./SyntheticInputEvent"),u=e("./keyOf"),c=i.canUseDOM&&"TextEvent"in window&&!("documentMode"in document||n()),l=32,p=String.fromCharCode(l),d=o.topLevelTypes,f={beforeInput:{phasedRegistrationNames:{bubbled:u({onBeforeInput:null}),captured:u({onBeforeInputCapture:null})},dependencies:[d.topCompositionEnd,d.topKeyPress,d.topTextInput,d.topPaste]}},h=null,m=!1,v={eventTypes:f,extractEvents:function(e,t,n,o){var i;if(c)switch(e){case d.topKeyPress:var u=o.which;if(u!==l)return;m=!0,i=p;break;case d.topTextInput:if(i=o.data,i===p&&m)return;break;default:return}else{switch(e){case d.topPaste:h=null;break;case d.topKeyPress:o.which&&!r(o)&&(h=String.fromCharCode(o.which));break;case d.topCompositionEnd:h=o.data}if(null===h)return;i=h}if(i){var v=s.getPooled(f.beforeInput,n,o);return v.data=i,h=null,a.accumulateTwoPhaseDispatches(v),v}}};t.exports=v},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./SyntheticInputEvent":87,"./keyOf":131}],4:[function(e,t){"use strict";function n(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var r={columnCount:!0,fillOpacity:!0,flex:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},o=["Webkit","ms","Moz","O"];Object.keys(r).forEach(function(e){o.forEach(function(t){r[n(t,e)]=r[e]})});var a={background:{backgroundImage:!0,backgroundPosition:!0,backgroundRepeat:!0,backgroundColor:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0}},i={isUnitlessNumber:r,shorthandPropertyExpansions:a};t.exports=i},{}],5:[function(e,t){"use strict";var n=e("./CSSProperty"),r=e("./ExecutionEnvironment"),o=(e("./camelizeStyleName"),e("./dangerousStyleValue")),a=e("./hyphenateStyleName"),i=e("./memoizeStringOnly"),s=(e("./warning"),i(function(e){return a(e)})),u="cssFloat";r.canUseDOM&&void 0===document.documentElement.style.cssFloat&&(u="styleFloat");var c={createMarkupForStyles:function(e){var t="";for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];null!=r&&(t+=s(n)+":",t+=o(n,r)+";")}return t||null},setValueForStyles:function(e,t){var r=e.style;for(var a in t)if(t.hasOwnProperty(a)){var i=o(a,t[a]);if("float"===a&&(a=u),i)r[a]=i;else{var s=n.shorthandPropertyExpansions[a];if(s)for(var c in s)r[c]="";else r[a]=""}}}};t.exports=c},{"./CSSProperty":4,"./ExecutionEnvironment":22,"./camelizeStyleName":98,"./dangerousStyleValue":103,"./hyphenateStyleName":122,"./memoizeStringOnly":133,"./warning":141}],6:[function(e,t){"use strict";function n(){this._callbacks=null,this._contexts=null}var r=e("./PooledClass"),o=e("./Object.assign"),a=e("./invariant");o(n.prototype,{enqueue:function(e,t){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(e),this._contexts.push(t)},notifyAll:function(){var e=this._callbacks,t=this._contexts;if(e){a(e.length===t.length),this._callbacks=null,this._contexts=null;for(var n=0,r=e.length;r>n;n++)e[n].call(t[n]);e.length=0,t.length=0}},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),r.addPoolingTo(n),t.exports=n},{"./Object.assign":27,"./PooledClass":28,"./invariant":124}],7:[function(e,t){"use strict";function n(e){return"SELECT"===e.nodeName||"INPUT"===e.nodeName&&"file"===e.type}function r(e){var t=M.getPooled(P.change,w,e);E.accumulateTwoPhaseDispatches(t),R.batchedUpdates(o,t)}function o(e){y.enqueueEvents(e),y.processEventQueue()}function a(e,t){_=e,w=t,_.attachEvent("onchange",r)}function i(){_&&(_.detachEvent("onchange",r),_=null,w=null)}function s(e,t,n){return e===x.topChange?n:void 0}function u(e,t,n){e===x.topFocus?(i(),a(t,n)):e===x.topBlur&&i()}function c(e,t){_=e,w=t,T=e.value,N=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(_,"value",k),_.attachEvent("onpropertychange",p)}function l(){_&&(delete _.value,_.detachEvent("onpropertychange",p),_=null,w=null,T=null,N=null)}function p(e){if("value"===e.propertyName){var t=e.srcElement.value;t!==T&&(T=t,r(e))}}function d(e,t,n){return e===x.topInput?n:void 0}function f(e,t,n){e===x.topFocus?(l(),c(t,n)):e===x.topBlur&&l()}function h(e){return e!==x.topSelectionChange&&e!==x.topKeyUp&&e!==x.topKeyDown||!_||_.value===T?void 0:(T=_.value,w)}function m(e){return"INPUT"===e.nodeName&&("checkbox"===e.type||"radio"===e.type)}function v(e,t,n){return e===x.topClick?n:void 0}var g=e("./EventConstants"),y=e("./EventPluginHub"),E=e("./EventPropagators"),C=e("./ExecutionEnvironment"),R=e("./ReactUpdates"),M=e("./SyntheticEvent"),b=e("./isEventSupported"),O=e("./isTextInputElement"),D=e("./keyOf"),x=g.topLevelTypes,P={change:{phasedRegistrationNames:{bubbled:D({onChange:null}),captured:D({onChangeCapture:null})},dependencies:[x.topBlur,x.topChange,x.topClick,x.topFocus,x.topInput,x.topKeyDown,x.topKeyUp,x.topSelectionChange]}},_=null,w=null,T=null,N=null,I=!1;C.canUseDOM&&(I=b("change")&&(!("documentMode"in document)||document.documentMode>8));var S=!1;C.canUseDOM&&(S=b("input")&&(!("documentMode"in document)||document.documentMode>9));var k={get:function(){return N.get.call(this)},set:function(e){T=""+e,N.set.call(this,e)}},A={eventTypes:P,extractEvents:function(e,t,r,o){var a,i;if(n(t)?I?a=s:i=u:O(t)?S?a=d:(a=h,i=f):m(t)&&(a=v),a){var c=a(e,t,r);if(c){var l=M.getPooled(P.change,c,o);return E.accumulateTwoPhaseDispatches(l),l}}i&&i(e,t,r)}};t.exports=A},{"./EventConstants":16,"./EventPluginHub":18,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactUpdates":77,"./SyntheticEvent":85,"./isEventSupported":125,"./isTextInputElement":127,"./keyOf":131}],8:[function(e,t){"use strict";var n=0,r={createReactRootIndex:function(){return n++}};t.exports=r},{}],9:[function(e,t){"use strict";function n(e){switch(e){case g.topCompositionStart:return E.compositionStart;case g.topCompositionEnd:return E.compositionEnd;case g.topCompositionUpdate:return E.compositionUpdate}}function r(e,t){return e===g.topKeyDown&&t.keyCode===h}function o(e,t){switch(e){case g.topKeyUp:return-1!==f.indexOf(t.keyCode);case g.topKeyDown:return t.keyCode!==h;case g.topKeyPress:case g.topMouseDown:case g.topBlur:return!0;default:return!1}}function a(e){this.root=e,this.startSelection=c.getSelection(e),this.startValue=this.getText()}var i=e("./EventConstants"),s=e("./EventPropagators"),u=e("./ExecutionEnvironment"),c=e("./ReactInputSelection"),l=e("./SyntheticCompositionEvent"),p=e("./getTextContentAccessor"),d=e("./keyOf"),f=[9,13,27,32],h=229,m=u.canUseDOM&&"CompositionEvent"in window,v=!m||"documentMode"in document&&document.documentMode>8&&document.documentMode<=11,g=i.topLevelTypes,y=null,E={compositionEnd:{phasedRegistrationNames:{bubbled:d({onCompositionEnd:null}),captured:d({onCompositionEndCapture:null})},dependencies:[g.topBlur,g.topCompositionEnd,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:d({onCompositionStart:null}),captured:d({onCompositionStartCapture:null})},dependencies:[g.topBlur,g.topCompositionStart,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:d({onCompositionUpdate:null}),captured:d({onCompositionUpdateCapture:null})},dependencies:[g.topBlur,g.topCompositionUpdate,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]}};a.prototype.getText=function(){return this.root.value||this.root[p()]},a.prototype.getData=function(){var e=this.getText(),t=this.startSelection.start,n=this.startValue.length-this.startSelection.end;return e.substr(t,e.length-n-t)};var C={eventTypes:E,extractEvents:function(e,t,i,u){var c,p;if(m?c=n(e):y?o(e,u)&&(c=E.compositionEnd):r(e,u)&&(c=E.compositionStart),v&&(y||c!==E.compositionStart?c===E.compositionEnd&&y&&(p=y.getData(),y=null):y=new a(t)),c){var d=l.getPooled(c,i,u);return p&&(d.data=p),s.accumulateTwoPhaseDispatches(d),d}}};t.exports=C},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactInputSelection":57,"./SyntheticCompositionEvent":83,"./getTextContentAccessor":119,"./keyOf":131}],10:[function(e,t){"use strict";function n(e,t,n){e.insertBefore(t,e.childNodes[n]||null)}var r,o=e("./Danger"),a=e("./ReactMultiChildUpdateTypes"),i=e("./getTextContentAccessor"),s=e("./invariant"),u=i();r="textContent"===u?function(e,t){e.textContent=t}:function(e,t){for(;e.firstChild;)e.removeChild(e.firstChild);if(t){var n=e.ownerDocument||document;e.appendChild(n.createTextNode(t))}};var c={dangerouslyReplaceNodeWithMarkup:o.dangerouslyReplaceNodeWithMarkup,updateTextContent:r,processUpdates:function(e,t){for(var i,u=null,c=null,l=0;i=e[l];l++)if(i.type===a.MOVE_EXISTING||i.type===a.REMOVE_NODE){var p=i.fromIndex,d=i.parentNode.childNodes[p],f=i.parentID;s(d),u=u||{},u[f]=u[f]||[],u[f][p]=d,c=c||[],c.push(d)}var h=o.dangerouslyRenderMarkup(t);if(c)for(var m=0;m<c.length;m++)c[m].parentNode.removeChild(c[m]);for(var v=0;i=e[v];v++)switch(i.type){case a.INSERT_MARKUP:n(i.parentNode,h[i.markupIndex],i.toIndex);break;case a.MOVE_EXISTING:n(i.parentNode,u[i.parentID][i.fromIndex],i.toIndex);break;case a.TEXT_CONTENT:r(i.parentNode,i.textContent);break;case a.REMOVE_NODE:}}};t.exports=c},{"./Danger":13,"./ReactMultiChildUpdateTypes":63,"./getTextContentAccessor":119,"./invariant":124}],11:[function(e,t){"use strict";function n(e,t){return(e&t)===t}var r=e("./invariant"),o={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_NUMERIC_VALUE:16,HAS_POSITIVE_NUMERIC_VALUE:48,HAS_OVERLOADED_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=e.Properties||{},a=e.DOMAttributeNames||{},s=e.DOMPropertyNames||{},u=e.DOMMutationMethods||{};e.isCustomAttribute&&i._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var c in t){r(!i.isStandardName.hasOwnProperty(c)),i.isStandardName[c]=!0;var l=c.toLowerCase();if(i.getPossibleStandardName[l]=c,a.hasOwnProperty(c)){var p=a[c];i.getPossibleStandardName[p]=c,i.getAttributeName[c]=p}else i.getAttributeName[c]=l;i.getPropertyName[c]=s.hasOwnProperty(c)?s[c]:c,i.getMutationMethod[c]=u.hasOwnProperty(c)?u[c]:null;var d=t[c];i.mustUseAttribute[c]=n(d,o.MUST_USE_ATTRIBUTE),i.mustUseProperty[c]=n(d,o.MUST_USE_PROPERTY),i.hasSideEffects[c]=n(d,o.HAS_SIDE_EFFECTS),i.hasBooleanValue[c]=n(d,o.HAS_BOOLEAN_VALUE),i.hasNumericValue[c]=n(d,o.HAS_NUMERIC_VALUE),i.hasPositiveNumericValue[c]=n(d,o.HAS_POSITIVE_NUMERIC_VALUE),i.hasOverloadedBooleanValue[c]=n(d,o.HAS_OVERLOADED_BOOLEAN_VALUE),r(!i.mustUseAttribute[c]||!i.mustUseProperty[c]),r(i.mustUseProperty[c]||!i.hasSideEffects[c]),r(!!i.hasBooleanValue[c]+!!i.hasNumericValue[c]+!!i.hasOverloadedBooleanValue[c]<=1)}}},a={},i={ID_ATTRIBUTE_NAME:"data-reactid",isStandardName:{},getPossibleStandardName:{},getAttributeName:{},getPropertyName:{},getMutationMethod:{},mustUseAttribute:{},mustUseProperty:{},hasSideEffects:{},hasBooleanValue:{},hasNumericValue:{},hasPositiveNumericValue:{},hasOverloadedBooleanValue:{},_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<i._isCustomAttributeFunctions.length;t++){var n=i._isCustomAttributeFunctions[t];if(n(e))return!0}return!1},getDefaultValueForProperty:function(e,t){var n,r=a[e];return r||(a[e]=r={}),t in r||(n=document.createElement(e),r[t]=n[t]),r[t]},injection:o};t.exports=i},{"./invariant":124}],12:[function(e,t){"use strict";function n(e,t){return null==t||r.hasBooleanValue[e]&&!t||r.hasNumericValue[e]&&isNaN(t)||r.hasPositiveNumericValue[e]&&1>t||r.hasOverloadedBooleanValue[e]&&t===!1}var r=e("./DOMProperty"),o=e("./escapeTextForBrowser"),a=e("./memoizeStringOnly"),i=(e("./warning"),a(function(e){return o(e)+'="'})),s={createMarkupForID:function(e){return i(r.ID_ATTRIBUTE_NAME)+o(e)+'"'},createMarkupForProperty:function(e,t){if(r.isStandardName.hasOwnProperty(e)&&r.isStandardName[e]){if(n(e,t))return"";var a=r.getAttributeName[e];return r.hasBooleanValue[e]||r.hasOverloadedBooleanValue[e]&&t===!0?o(a):i(a)+o(t)+'"'}return r.isCustomAttribute(e)?null==t?"":i(e)+o(t)+'"':null},setValueForProperty:function(e,t,o){if(r.isStandardName.hasOwnProperty(t)&&r.isStandardName[t]){var a=r.getMutationMethod[t];if(a)a(e,o);else if(n(t,o))this.deleteValueForProperty(e,t);else if(r.mustUseAttribute[t])e.setAttribute(r.getAttributeName[t],""+o);else{var i=r.getPropertyName[t];r.hasSideEffects[t]&&""+e[i]==""+o||(e[i]=o)}}else r.isCustomAttribute(t)&&(null==o?e.removeAttribute(t):e.setAttribute(t,""+o))},deleteValueForProperty:function(e,t){if(r.isStandardName.hasOwnProperty(t)&&r.isStandardName[t]){var n=r.getMutationMethod[t];if(n)n(e,void 0);else if(r.mustUseAttribute[t])e.removeAttribute(r.getAttributeName[t]);else{var o=r.getPropertyName[t],a=r.getDefaultValueForProperty(e.nodeName,o);r.hasSideEffects[t]&&""+e[o]===a||(e[o]=a)}}else r.isCustomAttribute(t)&&e.removeAttribute(t)}};t.exports=s},{"./DOMProperty":11,"./escapeTextForBrowser":107,"./memoizeStringOnly":133,"./warning":141}],13:[function(e,t){"use strict";function n(e){return e.substring(1,e.indexOf(" "))}var r=e("./ExecutionEnvironment"),o=e("./createNodesFromMarkup"),a=e("./emptyFunction"),i=e("./getMarkupWrap"),s=e("./invariant"),u=/^(<[^ \/>]+)/,c="data-danger-index",l={dangerouslyRenderMarkup:function(e){s(r.canUseDOM);for(var t,l={},p=0;p<e.length;p++)s(e[p]),t=n(e[p]),t=i(t)?t:"*",l[t]=l[t]||[],l[t][p]=e[p];var d=[],f=0;for(t in l)if(l.hasOwnProperty(t)){var h=l[t];for(var m in h)if(h.hasOwnProperty(m)){var v=h[m];h[m]=v.replace(u,"$1 "+c+'="'+m+'" ')}var g=o(h.join(""),a);for(p=0;p<g.length;++p){var y=g[p];y.hasAttribute&&y.hasAttribute(c)&&(m=+y.getAttribute(c),y.removeAttribute(c),s(!d.hasOwnProperty(m)),d[m]=y,f+=1)}}return s(f===d.length),s(d.length===e.length),d},dangerouslyReplaceNodeWithMarkup:function(e,t){s(r.canUseDOM),s(t),s("html"!==e.tagName.toLowerCase());var n=o(t,a)[0];e.parentNode.replaceChild(n,e)}};t.exports=l},{"./ExecutionEnvironment":22,"./createNodesFromMarkup":102,"./emptyFunction":105,"./getMarkupWrap":116,"./invariant":124}],14:[function(e,t){"use strict";var n=e("./keyOf"),r=[n({ResponderEventPlugin:null}),n({SimpleEventPlugin:null}),n({TapEventPlugin:null}),n({EnterLeaveEventPlugin:null}),n({ChangeEventPlugin:null}),n({SelectEventPlugin:null}),n({CompositionEventPlugin:null}),n({BeforeInputEventPlugin:null}),n({AnalyticsEventPlugin:null}),n({MobileSafariClickEventPlugin:null})];t.exports=r},{"./keyOf":131}],15:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./EventPropagators"),o=e("./SyntheticMouseEvent"),a=e("./ReactMount"),i=e("./keyOf"),s=n.topLevelTypes,u=a.getFirstReactDOM,c={mouseEnter:{registrationName:i({onMouseEnter:null}),dependencies:[s.topMouseOut,s.topMouseOver]},mouseLeave:{registrationName:i({onMouseLeave:null}),dependencies:[s.topMouseOut,s.topMouseOver]}},l=[null,null],p={eventTypes:c,extractEvents:function(e,t,n,i){if(e===s.topMouseOver&&(i.relatedTarget||i.fromElement))return null;if(e!==s.topMouseOut&&e!==s.topMouseOver)return null;var p;if(t.window===t)p=t;else{var d=t.ownerDocument;p=d?d.defaultView||d.parentWindow:window}var f,h;if(e===s.topMouseOut?(f=t,h=u(i.relatedTarget||i.toElement)||p):(f=p,h=t),f===h)return null;var m=f?a.getID(f):"",v=h?a.getID(h):"",g=o.getPooled(c.mouseLeave,m,i);g.type="mouseleave",g.target=f,g.relatedTarget=h;var y=o.getPooled(c.mouseEnter,v,i);return y.type="mouseenter",y.target=h,y.relatedTarget=f,r.accumulateEnterLeaveDispatches(g,y,m,v),l[0]=g,l[1]=y,l}};t.exports=p},{"./EventConstants":16,"./EventPropagators":21,"./ReactMount":61,"./SyntheticMouseEvent":89,"./keyOf":131}],16:[function(e,t){"use strict";var n=e("./keyMirror"),r=n({bubbled:null,captured:null}),o=n({topBlur:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topError:null,topFocus:null,topInput:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topReset:null,topScroll:null,topSelectionChange:null,topSubmit:null,topTextInput:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topWheel:null}),a={topLevelTypes:o,PropagationPhases:r};t.exports=a},{"./keyMirror":130}],17:[function(e,t){var n=e("./emptyFunction"),r={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,r){return e.addEventListener?(e.addEventListener(t,r,!0),{remove:function(){e.removeEventListener(t,r,!0)}}):{remove:n}},registerDefault:function(){}};t.exports=r},{"./emptyFunction":105}],18:[function(e,t){"use strict";var n=e("./EventPluginRegistry"),r=e("./EventPluginUtils"),o=e("./accumulateInto"),a=e("./forEachAccumulated"),i=e("./invariant"),s={},u=null,c=function(e){if(e){var t=r.executeDispatch,o=n.getPluginModuleForEvent(e);o&&o.executeDispatch&&(t=o.executeDispatch),r.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e)}},l=null,p={injection:{injectMount:r.injection.injectMount,injectInstanceHandle:function(e){l=e},getInstanceHandle:function(){return l},injectEventPluginOrder:n.injectEventPluginOrder,injectEventPluginsByName:n.injectEventPluginsByName},eventNameDispatchConfigs:n.eventNameDispatchConfigs,registrationNameModules:n.registrationNameModules,putListener:function(e,t,n){i(!n||"function"==typeof n);var r=s[t]||(s[t]={});r[e]=n},getListener:function(e,t){var n=s[t];return n&&n[e]},deleteListener:function(e,t){var n=s[t];n&&delete n[e]},deleteAllListeners:function(e){for(var t in s)delete s[t][e]},extractEvents:function(e,t,r,a){for(var i,s=n.plugins,u=0,c=s.length;c>u;u++){var l=s[u];if(l){var p=l.extractEvents(e,t,r,a);p&&(i=o(i,p))}}return i},enqueueEvents:function(e){e&&(u=o(u,e))},processEventQueue:function(){var e=u;u=null,a(e,c),i(!u)},__purge:function(){s={}},__getListenerBank:function(){return s}};t.exports=p},{"./EventPluginRegistry":19,"./EventPluginUtils":20,"./accumulateInto":95,"./forEachAccumulated":110,"./invariant":124}],19:[function(e,t){"use strict";function n(){if(i)for(var e in s){var t=s[e],n=i.indexOf(e);if(a(n>-1),!u.plugins[n]){a(t.extractEvents),u.plugins[n]=t;var o=t.eventTypes;for(var c in o)a(r(o[c],t,c))}}}function r(e,t,n){a(!u.eventNameDispatchConfigs.hasOwnProperty(n)),u.eventNameDispatchConfigs[n]=e;var r=e.phasedRegistrationNames;if(r){for(var i in r)if(r.hasOwnProperty(i)){var s=r[i];o(s,t,n)}return!0}return e.registrationName?(o(e.registrationName,t,n),!0):!1}function o(e,t,n){a(!u.registrationNameModules[e]),u.registrationNameModules[e]=t,u.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var a=e("./invariant"),i=null,s={},u={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(e){a(!i),i=Array.prototype.slice.call(e),n()},injectEventPluginsByName:function(e){var t=!1;for(var r in e)if(e.hasOwnProperty(r)){var o=e[r];s.hasOwnProperty(r)&&s[r]===o||(a(!s[r]),s[r]=o,t=!0)}t&&n()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return u.registrationNameModules[t.registrationName]||null;for(var n in t.phasedRegistrationNames)if(t.phasedRegistrationNames.hasOwnProperty(n)){var r=u.registrationNameModules[t.phasedRegistrationNames[n]];if(r)return r}return null},_resetEventPlugins:function(){i=null;for(var e in s)s.hasOwnProperty(e)&&delete s[e];u.plugins.length=0;var t=u.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var r=u.registrationNameModules;for(var o in r)r.hasOwnProperty(o)&&delete r[o]}};t.exports=u},{"./invariant":124}],20:[function(e,t){"use strict";function n(e){return e===m.topMouseUp||e===m.topTouchEnd||e===m.topTouchCancel}function r(e){return e===m.topMouseMove||e===m.topTouchMove}function o(e){return e===m.topMouseDown||e===m.topTouchStart}function a(e,t){var n=e._dispatchListeners,r=e._dispatchIDs;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)t(e,n[o],r[o]);else n&&t(e,n,r)}function i(e,t,n){e.currentTarget=h.Mount.getNode(n);var r=t(e,n);return e.currentTarget=null,r}function s(e,t){a(e,t),e._dispatchListeners=null,e._dispatchIDs=null}function u(e){var t=e._dispatchListeners,n=e._dispatchIDs;if(Array.isArray(t)){for(var r=0;r<t.length&&!e.isPropagationStopped();r++)if(t[r](e,n[r]))return n[r]}else if(t&&t(e,n))return n;return null}function c(e){var t=u(e);return e._dispatchIDs=null,e._dispatchListeners=null,t}function l(e){var t=e._dispatchListeners,n=e._dispatchIDs;f(!Array.isArray(t));var r=t?t(e,n):null;return e._dispatchListeners=null,e._dispatchIDs=null,r}function p(e){return!!e._dispatchListeners}var d=e("./EventConstants"),f=e("./invariant"),h={Mount:null,injectMount:function(e){h.Mount=e}},m=d.topLevelTypes,v={isEndish:n,isMoveish:r,isStartish:o,executeDirectDispatch:l,executeDispatch:i,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:c,hasDispatches:p,injection:h,useTouchEvents:!1};t.exports=v},{"./EventConstants":16,"./invariant":124}],21:[function(e,t){"use strict";function n(e,t,n){var r=t.dispatchConfig.phasedRegistrationNames[n];return m(e,r)}function r(e,t,r){var o=t?h.bubbled:h.captured,a=n(e,r,o);a&&(r._dispatchListeners=d(r._dispatchListeners,a),r._dispatchIDs=d(r._dispatchIDs,e))}function o(e){e&&e.dispatchConfig.phasedRegistrationNames&&p.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker,r,e)}function a(e,t,n){if(n&&n.dispatchConfig.registrationName){var r=n.dispatchConfig.registrationName,o=m(e,r);o&&(n._dispatchListeners=d(n._dispatchListeners,o),n._dispatchIDs=d(n._dispatchIDs,e))}}function i(e){e&&e.dispatchConfig.registrationName&&a(e.dispatchMarker,null,e)}function s(e){f(e,o)}function u(e,t,n,r){p.injection.getInstanceHandle().traverseEnterLeave(n,r,a,e,t)}function c(e){f(e,i)}var l=e("./EventConstants"),p=e("./EventPluginHub"),d=e("./accumulateInto"),f=e("./forEachAccumulated"),h=l.PropagationPhases,m=p.getListener,v={accumulateTwoPhaseDispatches:s,accumulateDirectDispatches:c,accumulateEnterLeaveDispatches:u};t.exports=v},{"./EventConstants":16,"./EventPluginHub":18,"./accumulateInto":95,"./forEachAccumulated":110}],22:[function(e,t){"use strict";var n=!("undefined"==typeof window||!window.document||!window.document.createElement),r={canUseDOM:n,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:n&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:n&&!!window.screen,isInWorker:!n};t.exports=r},{}],23:[function(e,t){"use strict";var n,r=e("./DOMProperty"),o=e("./ExecutionEnvironment"),a=r.injection.MUST_USE_ATTRIBUTE,i=r.injection.MUST_USE_PROPERTY,s=r.injection.HAS_BOOLEAN_VALUE,u=r.injection.HAS_SIDE_EFFECTS,c=r.injection.HAS_NUMERIC_VALUE,l=r.injection.HAS_POSITIVE_NUMERIC_VALUE,p=r.injection.HAS_OVERLOADED_BOOLEAN_VALUE;if(o.canUseDOM){var d=document.implementation;n=d&&d.hasFeature&&d.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")}var f={isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),Properties:{accept:null,acceptCharset:null,accessKey:null,action:null,allowFullScreen:a|s,allowTransparency:a,alt:null,async:s,autoComplete:null,autoPlay:s,cellPadding:null,cellSpacing:null,charSet:a,checked:i|s,classID:a,className:n?a:i,cols:a|l,colSpan:null,content:null,contentEditable:null,contextMenu:a,controls:i|s,coords:null,crossOrigin:null,data:null,dateTime:a,defer:s,dir:null,disabled:a|s,download:p,draggable:null,encType:null,form:a,formNoValidate:s,frameBorder:a,height:a,hidden:a|s,href:null,hrefLang:null,htmlFor:null,httpEquiv:null,icon:null,id:i,label:null,lang:null,list:a,loop:i|s,manifest:a,max:null,maxLength:a,media:a,mediaGroup:null,method:null,min:null,multiple:i|s,muted:i|s,name:null,noValidate:s,open:null,pattern:null,placeholder:null,poster:null,preload:null,radioGroup:null,readOnly:i|s,rel:null,required:s,role:a,rows:a|l,rowSpan:null,sandbox:null,scope:null,scrolling:null,seamless:a|s,selected:i|s,shape:null,size:a|l,sizes:a,span:l,spellCheck:null,src:null,srcDoc:i,srcSet:a,start:c,step:null,style:null,tabIndex:null,target:null,title:null,type:null,useMap:null,value:i|u,width:a,wmode:a,autoCapitalize:null,autoCorrect:null,itemProp:a,itemScope:a|s,itemType:a,property:null},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{autoCapitalize:"autocapitalize",autoComplete:"autocomplete",autoCorrect:"autocorrect",autoFocus:"autofocus",autoPlay:"autoplay",encType:"enctype",hrefLang:"hreflang",radioGroup:"radiogroup",spellCheck:"spellcheck",srcDoc:"srcdoc",srcSet:"srcset"}};t.exports=f},{"./DOMProperty":11,"./ExecutionEnvironment":22}],24:[function(e,t){"use strict";function n(e){u(null==e.props.checkedLink||null==e.props.valueLink)}function r(e){n(e),u(null==e.props.value&&null==e.props.onChange)}function o(e){n(e),u(null==e.props.checked&&null==e.props.onChange)}function a(e){this.props.valueLink.requestChange(e.target.value)}function i(e){this.props.checkedLink.requestChange(e.target.checked)}var s=e("./ReactPropTypes"),u=e("./invariant"),c={button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0},l={Mixin:{propTypes:{value:function(e,t){return!e[t]||c[e.type]||e.onChange||e.readOnly||e.disabled?void 0:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,t){return!e[t]||e.onChange||e.readOnly||e.disabled?void 0:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:s.func}},getValue:function(e){return e.props.valueLink?(r(e),e.props.valueLink.value):e.props.value},getChecked:function(e){return e.props.checkedLink?(o(e),e.props.checkedLink.value):e.props.checked},getOnChange:function(e){return e.props.valueLink?(r(e),a):e.props.checkedLink?(o(e),i):e.props.onChange}};t.exports=l},{"./ReactPropTypes":70,"./invariant":124}],25:[function(e,t){"use strict";function n(e){e.remove()}var r=e("./ReactBrowserEventEmitter"),o=e("./accumulateInto"),a=e("./forEachAccumulated"),i=e("./invariant"),s={trapBubbledEvent:function(e,t){i(this.isMounted());var n=r.trapBubbledEvent(e,t,this.getDOMNode());this._localEventListeners=o(this._localEventListeners,n)},componentWillUnmount:function(){this._localEventListeners&&a(this._localEventListeners,n)}};t.exports=s},{"./ReactBrowserEventEmitter":30,"./accumulateInto":95,"./forEachAccumulated":110,"./invariant":124}],26:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./emptyFunction"),o=n.topLevelTypes,a={eventTypes:null,extractEvents:function(e,t,n,a){if(e===o.topTouchStart){var i=a.target;i&&!i.onclick&&(i.onclick=r)}}};t.exports=a},{"./EventConstants":16,"./emptyFunction":105}],27:[function(e,t){function n(e){if(null==e)throw new TypeError("Object.assign target cannot be null or undefined");for(var t=Object(e),n=Object.prototype.hasOwnProperty,r=1;r<arguments.length;r++){var o=arguments[r];if(null!=o){var a=Object(o);for(var i in a)n.call(a,i)&&(t[i]=a[i])}}return t}t.exports=n},{}],28:[function(e,t){"use strict";var n=e("./invariant"),r=function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)},o=function(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,e,t),r}return new n(e,t)},a=function(e,t,n){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return r.call(o,e,t,n),o}return new r(e,t,n)
},i=function(e,t,n,r,o){var a=this;if(a.instancePool.length){var i=a.instancePool.pop();return a.call(i,e,t,n,r,o),i}return new a(e,t,n,r,o)},s=function(e){var t=this;n(e instanceof t),e.destructor&&e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},u=10,c=r,l=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||c,n.poolSize||(n.poolSize=u),n.release=s,n},p={addPoolingTo:l,oneArgumentPooler:r,twoArgumentPooler:o,threeArgumentPooler:a,fiveArgumentPooler:i};t.exports=p},{"./invariant":124}],29:[function(e,t){"use strict";var n=e("./ReactEmptyComponent"),r=e("./ReactMount"),o=e("./invariant"),a={getDOMNode:function(){return o(this.isMounted()),n.isNullComponentID(this._rootNodeID)?null:r.getNode(this._rootNodeID)}};t.exports=a},{"./ReactEmptyComponent":52,"./ReactMount":61,"./invariant":124}],30:[function(e,t){"use strict";function n(e){return Object.prototype.hasOwnProperty.call(e,h)||(e[h]=d++,l[e[h]]={}),l[e[h]]}var r=e("./EventConstants"),o=e("./EventPluginHub"),a=e("./EventPluginRegistry"),i=e("./ReactEventEmitterMixin"),s=e("./ViewportMetrics"),u=e("./Object.assign"),c=e("./isEventSupported"),l={},p=!1,d=0,f={topBlur:"blur",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topScroll:"scroll",topSelectionChange:"selectionchange",topTextInput:"textInput",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topWheel:"wheel"},h="_reactListenersID"+String(Math.random()).slice(2),m=u({},i,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(m.handleTopLevel),m.ReactEventListener=e}},setEnabled:function(e){m.ReactEventListener&&m.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!m.ReactEventListener||!m.ReactEventListener.isEnabled())},listenTo:function(e,t){for(var o=t,i=n(o),s=a.registrationNameDependencies[e],u=r.topLevelTypes,l=0,p=s.length;p>l;l++){var d=s[l];i.hasOwnProperty(d)&&i[d]||(d===u.topWheel?c("wheel")?m.ReactEventListener.trapBubbledEvent(u.topWheel,"wheel",o):c("mousewheel")?m.ReactEventListener.trapBubbledEvent(u.topWheel,"mousewheel",o):m.ReactEventListener.trapBubbledEvent(u.topWheel,"DOMMouseScroll",o):d===u.topScroll?c("scroll",!0)?m.ReactEventListener.trapCapturedEvent(u.topScroll,"scroll",o):m.ReactEventListener.trapBubbledEvent(u.topScroll,"scroll",m.ReactEventListener.WINDOW_HANDLE):d===u.topFocus||d===u.topBlur?(c("focus",!0)?(m.ReactEventListener.trapCapturedEvent(u.topFocus,"focus",o),m.ReactEventListener.trapCapturedEvent(u.topBlur,"blur",o)):c("focusin")&&(m.ReactEventListener.trapBubbledEvent(u.topFocus,"focusin",o),m.ReactEventListener.trapBubbledEvent(u.topBlur,"focusout",o)),i[u.topBlur]=!0,i[u.topFocus]=!0):f.hasOwnProperty(d)&&m.ReactEventListener.trapBubbledEvent(d,f[d],o),i[d]=!0)}},trapBubbledEvent:function(e,t,n){return m.ReactEventListener.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return m.ReactEventListener.trapCapturedEvent(e,t,n)},ensureScrollValueMonitoring:function(){if(!p){var e=s.refreshScrollValues;m.ReactEventListener.monitorScrollValue(e),p=!0}},eventNameDispatchConfigs:o.eventNameDispatchConfigs,registrationNameModules:o.registrationNameModules,putListener:o.putListener,getListener:o.getListener,deleteListener:o.deleteListener,deleteAllListeners:o.deleteAllListeners});t.exports=m},{"./EventConstants":16,"./EventPluginHub":18,"./EventPluginRegistry":19,"./Object.assign":27,"./ReactEventEmitterMixin":54,"./ViewportMetrics":94,"./isEventSupported":125}],31:[function(e,t){"use strict";function n(e,t){this.forEachFunction=e,this.forEachContext=t}function r(e,t,n,r){var o=e;o.forEachFunction.call(o.forEachContext,t,r)}function o(e,t,o){if(null==e)return e;var a=n.getPooled(t,o);p(e,r,a),n.release(a)}function a(e,t,n){this.mapResult=e,this.mapFunction=t,this.mapContext=n}function i(e,t,n,r){var o=e,a=o.mapResult,i=!a.hasOwnProperty(n);if(i){var s=o.mapFunction.call(o.mapContext,t,r);a[n]=s}}function s(e,t,n){if(null==e)return e;var r={},o=a.getPooled(r,t,n);return p(e,i,o),a.release(o),r}function u(){return null}function c(e){return p(e,u,null)}var l=e("./PooledClass"),p=e("./traverseAllChildren"),d=(e("./warning"),l.twoArgumentPooler),f=l.threeArgumentPooler;l.addPoolingTo(n,d),l.addPoolingTo(a,f);var h={forEach:o,map:s,count:c};t.exports=h},{"./PooledClass":28,"./traverseAllChildren":140,"./warning":141}],32:[function(e,t){"use strict";var n=e("./ReactElement"),r=e("./ReactOwner"),o=e("./ReactUpdates"),a=e("./Object.assign"),i=e("./invariant"),s=e("./keyMirror"),u=s({MOUNTED:null,UNMOUNTED:null}),c=!1,l=null,p=null,d={injection:{injectEnvironment:function(e){i(!c),p=e.mountImageIntoNode,l=e.unmountIDFromEnvironment,d.BackendIDOperations=e.BackendIDOperations,c=!0}},LifeCycle:u,BackendIDOperations:null,Mixin:{isMounted:function(){return this._lifeCycleState===u.MOUNTED},setProps:function(e,t){var n=this._pendingElement||this._currentElement;this.replaceProps(a({},n.props,e),t)},replaceProps:function(e,t){i(this.isMounted()),i(0===this._mountDepth),this._pendingElement=n.cloneAndReplaceProps(this._pendingElement||this._currentElement,e),o.enqueueUpdate(this,t)},_setPropsInternal:function(e,t){var r=this._pendingElement||this._currentElement;this._pendingElement=n.cloneAndReplaceProps(r,a({},r.props,e)),o.enqueueUpdate(this,t)},construct:function(e){this.props=e.props,this._owner=e._owner,this._lifeCycleState=u.UNMOUNTED,this._pendingCallbacks=null,this._currentElement=e,this._pendingElement=null},mountComponent:function(e,t,n){i(!this.isMounted());var o=this._currentElement.ref;if(null!=o){var a=this._currentElement._owner;r.addComponentAsRefTo(this,o,a)}this._rootNodeID=e,this._lifeCycleState=u.MOUNTED,this._mountDepth=n},unmountComponent:function(){i(this.isMounted());var e=this._currentElement.ref;null!=e&&r.removeComponentAsRefFrom(this,e,this._owner),l(this._rootNodeID),this._rootNodeID=null,this._lifeCycleState=u.UNMOUNTED},receiveComponent:function(e,t){i(this.isMounted()),this._pendingElement=e,this.performUpdateIfNecessary(t)},performUpdateIfNecessary:function(e){if(null!=this._pendingElement){var t=this._currentElement,n=this._pendingElement;this._currentElement=n,this.props=n.props,this._owner=n._owner,this._pendingElement=null,this.updateComponent(e,t)}},updateComponent:function(e,t){var n=this._currentElement;(n._owner!==t._owner||n.ref!==t.ref)&&(null!=t.ref&&r.removeComponentAsRefFrom(this,t.ref,t._owner),null!=n.ref&&r.addComponentAsRefTo(this,n.ref,n._owner))},mountComponentIntoNode:function(e,t,n){var r=o.ReactReconcileTransaction.getPooled();r.perform(this._mountComponentIntoNode,this,e,t,r,n),o.ReactReconcileTransaction.release(r)},_mountComponentIntoNode:function(e,t,n,r){var o=this.mountComponent(e,n,0);p(o,t,r)},isOwnedBy:function(e){return this._owner===e},getSiblingByRef:function(e){var t=this._owner;return t&&t.refs?t.refs[e]:null}}};t.exports=d},{"./Object.assign":27,"./ReactElement":50,"./ReactOwner":65,"./ReactUpdates":77,"./invariant":124,"./keyMirror":130}],33:[function(e,t){"use strict";var n=e("./ReactDOMIDOperations"),r=e("./ReactMarkupChecksum"),o=e("./ReactMount"),a=e("./ReactPerf"),i=e("./ReactReconcileTransaction"),s=e("./getReactRootElementInContainer"),u=e("./invariant"),c=e("./setInnerHTML"),l=1,p=9,d={ReactReconcileTransaction:i,BackendIDOperations:n,unmountIDFromEnvironment:function(e){o.purgeID(e)},mountImageIntoNode:a.measure("ReactComponentBrowserEnvironment","mountImageIntoNode",function(e,t,n){if(u(t&&(t.nodeType===l||t.nodeType===p)),n){if(r.canReuseMarkup(e,s(t)))return;u(t.nodeType!==p)}u(t.nodeType!==p),c(t,e)})};t.exports=d},{"./ReactDOMIDOperations":41,"./ReactMarkupChecksum":60,"./ReactMount":61,"./ReactPerf":66,"./ReactReconcileTransaction":72,"./getReactRootElementInContainer":118,"./invariant":124,"./setInnerHTML":136}],34:[function(e,t){"use strict";function n(e){var t=e._owner||null;return t&&t.constructor&&t.constructor.displayName?" Check the render method of `"+t.constructor.displayName+"`.":""}function r(e,t){for(var n in t)t.hasOwnProperty(n)&&D("function"==typeof t[n])}function o(e,t){var n=S.hasOwnProperty(t)?S[t]:null;L.hasOwnProperty(t)&&D(n===N.OVERRIDE_BASE),e.hasOwnProperty(t)&&D(n===N.DEFINE_MANY||n===N.DEFINE_MANY_MERGED)}function a(e){var t=e._compositeLifeCycleState;D(e.isMounted()||t===A.MOUNTING),D(null==f.current),D(t!==A.UNMOUNTING)}function i(e,t){if(t){D(!g.isValidFactory(t)),D(!h.isValidElement(t));var n=e.prototype;t.hasOwnProperty(T)&&k.mixins(e,t.mixins);for(var r in t)if(t.hasOwnProperty(r)&&r!==T){var a=t[r];if(o(n,r),k.hasOwnProperty(r))k[r](e,a);else{var i=S.hasOwnProperty(r),s=n.hasOwnProperty(r),u=a&&a.__reactDontBind,p="function"==typeof a,d=p&&!i&&!s&&!u;if(d)n.__reactAutoBindMap||(n.__reactAutoBindMap={}),n.__reactAutoBindMap[r]=a,n[r]=a;else if(s){var f=S[r];D(i&&(f===N.DEFINE_MANY_MERGED||f===N.DEFINE_MANY)),f===N.DEFINE_MANY_MERGED?n[r]=c(n[r],a):f===N.DEFINE_MANY&&(n[r]=l(n[r],a))}else n[r]=a}}}}function s(e,t){if(t)for(var n in t){var r=t[n];if(t.hasOwnProperty(n)){var o=n in k;D(!o);var a=n in e;D(!a),e[n]=r}}}function u(e,t){return D(e&&t&&"object"==typeof e&&"object"==typeof t),_(t,function(t,n){D(void 0===e[n]),e[n]=t}),e}function c(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);return null==n?r:null==r?n:u(n,r)}}function l(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}var p=e("./ReactComponent"),d=e("./ReactContext"),f=e("./ReactCurrentOwner"),h=e("./ReactElement"),m=(e("./ReactElementValidator"),e("./ReactEmptyComponent")),v=e("./ReactErrorUtils"),g=e("./ReactLegacyElement"),y=e("./ReactOwner"),E=e("./ReactPerf"),C=e("./ReactPropTransferer"),R=e("./ReactPropTypeLocations"),M=(e("./ReactPropTypeLocationNames"),e("./ReactUpdates")),b=e("./Object.assign"),O=e("./instantiateReactComponent"),D=e("./invariant"),x=e("./keyMirror"),P=e("./keyOf"),_=(e("./monitorCodeUse"),e("./mapObject")),w=e("./shouldUpdateReactComponent"),T=(e("./warning"),P({mixins:null})),N=x({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),I=[],S={mixins:N.DEFINE_MANY,statics:N.DEFINE_MANY,propTypes:N.DEFINE_MANY,contextTypes:N.DEFINE_MANY,childContextTypes:N.DEFINE_MANY,getDefaultProps:N.DEFINE_MANY_MERGED,getInitialState:N.DEFINE_MANY_MERGED,getChildContext:N.DEFINE_MANY_MERGED,render:N.DEFINE_ONCE,componentWillMount:N.DEFINE_MANY,componentDidMount:N.DEFINE_MANY,componentWillReceiveProps:N.DEFINE_MANY,shouldComponentUpdate:N.DEFINE_ONCE,componentWillUpdate:N.DEFINE_MANY,componentDidUpdate:N.DEFINE_MANY,componentWillUnmount:N.DEFINE_MANY,updateComponent:N.OVERRIDE_BASE},k={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)i(e,t[n])},childContextTypes:function(e,t){r(e,t,R.childContext),e.childContextTypes=b({},e.childContextTypes,t)},contextTypes:function(e,t){r(e,t,R.context),e.contextTypes=b({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps=e.getDefaultProps?c(e.getDefaultProps,t):t},propTypes:function(e,t){r(e,t,R.prop),e.propTypes=b({},e.propTypes,t)},statics:function(e,t){s(e,t)}},A=x({MOUNTING:null,UNMOUNTING:null,RECEIVING_PROPS:null}),L={construct:function(){p.Mixin.construct.apply(this,arguments),y.Mixin.construct.apply(this,arguments),this.state=null,this._pendingState=null,this.context=null,this._compositeLifeCycleState=null},isMounted:function(){return p.Mixin.isMounted.call(this)&&this._compositeLifeCycleState!==A.MOUNTING},mountComponent:E.measure("ReactCompositeComponent","mountComponent",function(e,t,n){p.Mixin.mountComponent.call(this,e,t,n),this._compositeLifeCycleState=A.MOUNTING,this.__reactAutoBindMap&&this._bindAutoBindMethods(),this.context=this._processContext(this._currentElement._context),this.props=this._processProps(this.props),this.state=this.getInitialState?this.getInitialState():null,D("object"==typeof this.state&&!Array.isArray(this.state)),this._pendingState=null,this._pendingForceUpdate=!1,this.componentWillMount&&(this.componentWillMount(),this._pendingState&&(this.state=this._pendingState,this._pendingState=null)),this._renderedComponent=O(this._renderValidatedComponent(),this._currentElement.type),this._compositeLifeCycleState=null;var r=this._renderedComponent.mountComponent(e,t,n+1);return this.componentDidMount&&t.getReactMountReady().enqueue(this.componentDidMount,this),r}),unmountComponent:function(){this._compositeLifeCycleState=A.UNMOUNTING,this.componentWillUnmount&&this.componentWillUnmount(),this._compositeLifeCycleState=null,this._renderedComponent.unmountComponent(),this._renderedComponent=null,p.Mixin.unmountComponent.call(this)},setState:function(e,t){D("object"==typeof e||null==e),this.replaceState(b({},this._pendingState||this.state,e),t)},replaceState:function(e,t){a(this),this._pendingState=e,this._compositeLifeCycleState!==A.MOUNTING&&M.enqueueUpdate(this,t)},_processContext:function(e){var t=null,n=this.constructor.contextTypes;if(n){t={};for(var r in n)t[r]=e[r]}return t},_processChildContext:function(e){var t=this.getChildContext&&this.getChildContext();if(this.constructor.displayName||"ReactCompositeComponent",t){D("object"==typeof this.constructor.childContextTypes);for(var n in t)D(n in this.constructor.childContextTypes);return b({},e,t)}return e},_processProps:function(e){return e},_checkPropTypes:function(e,t,r){var o=this.constructor.displayName;for(var a in e)if(e.hasOwnProperty(a)){var i=e[a](t,a,o,r);i instanceof Error&&n(this)}},performUpdateIfNecessary:function(e){var t=this._compositeLifeCycleState;if(t!==A.MOUNTING&&t!==A.RECEIVING_PROPS&&(null!=this._pendingElement||null!=this._pendingState||this._pendingForceUpdate)){var n=this.context,r=this.props,o=this._currentElement;null!=this._pendingElement&&(o=this._pendingElement,n=this._processContext(o._context),r=this._processProps(o.props),this._pendingElement=null,this._compositeLifeCycleState=A.RECEIVING_PROPS,this.componentWillReceiveProps&&this.componentWillReceiveProps(r,n)),this._compositeLifeCycleState=null;var a=this._pendingState||this.state;this._pendingState=null;var i=this._pendingForceUpdate||!this.shouldComponentUpdate||this.shouldComponentUpdate(r,a,n);i?(this._pendingForceUpdate=!1,this._performComponentUpdate(o,r,a,n,e)):(this._currentElement=o,this.props=r,this.state=a,this.context=n,this._owner=o._owner)}},_performComponentUpdate:function(e,t,n,r,o){var a=this._currentElement,i=this.props,s=this.state,u=this.context;this.componentWillUpdate&&this.componentWillUpdate(t,n,r),this._currentElement=e,this.props=t,this.state=n,this.context=r,this._owner=e._owner,this.updateComponent(o,a),this.componentDidUpdate&&o.getReactMountReady().enqueue(this.componentDidUpdate.bind(this,i,s,u),this)},receiveComponent:function(e,t){(e!==this._currentElement||null==e._owner)&&p.Mixin.receiveComponent.call(this,e,t)},updateComponent:E.measure("ReactCompositeComponent","updateComponent",function(e,t){p.Mixin.updateComponent.call(this,e,t);var n=this._renderedComponent,r=n._currentElement,o=this._renderValidatedComponent();if(w(r,o))n.receiveComponent(o,e);else{var a=this._rootNodeID,i=n._rootNodeID;n.unmountComponent(),this._renderedComponent=O(o,this._currentElement.type);var s=this._renderedComponent.mountComponent(a,e,this._mountDepth+1);p.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(i,s)}}),forceUpdate:function(e){var t=this._compositeLifeCycleState;D(this.isMounted()||t===A.MOUNTING),D(t!==A.UNMOUNTING&&null==f.current),this._pendingForceUpdate=!0,M.enqueueUpdate(this,e)},_renderValidatedComponent:E.measure("ReactCompositeComponent","_renderValidatedComponent",function(){var e,t=d.current;d.current=this._processChildContext(this._currentElement._context),f.current=this;try{e=this.render(),null===e||e===!1?(e=m.getEmptyComponent(),m.registerNullComponentID(this._rootNodeID)):m.deregisterNullComponentID(this._rootNodeID)}finally{d.current=t,f.current=null}return D(h.isValidElement(e)),e}),_bindAutoBindMethods:function(){for(var e in this.__reactAutoBindMap)if(this.__reactAutoBindMap.hasOwnProperty(e)){var t=this.__reactAutoBindMap[e];this[e]=this._bindAutoBindMethod(v.guard(t,this.constructor.displayName+"."+e))}},_bindAutoBindMethod:function(e){var t=this,n=e.bind(t);return n}},U=function(){};b(U.prototype,p.Mixin,y.Mixin,C.Mixin,L);var F={LifeCycle:A,Base:U,createClass:function(e){var t=function(){};t.prototype=new U,t.prototype.constructor=t,I.forEach(i.bind(null,t)),i(t,e),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),D(t.prototype.render);for(var n in S)t.prototype[n]||(t.prototype[n]=null);return g.wrapFactory(h.createFactory(t))},injection:{injectMixin:function(e){I.push(e)}}};t.exports=F},{"./Object.assign":27,"./ReactComponent":32,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactElement":50,"./ReactElementValidator":51,"./ReactEmptyComponent":52,"./ReactErrorUtils":53,"./ReactLegacyElement":59,"./ReactOwner":65,"./ReactPerf":66,"./ReactPropTransferer":67,"./ReactPropTypeLocationNames":68,"./ReactPropTypeLocations":69,"./ReactUpdates":77,"./instantiateReactComponent":123,"./invariant":124,"./keyMirror":130,"./keyOf":131,"./mapObject":132,"./monitorCodeUse":134,"./shouldUpdateReactComponent":138,"./warning":141}],35:[function(e,t){"use strict";var n=e("./Object.assign"),r={current:{},withContext:function(e,t){var o,a=r.current;r.current=n({},a,e);try{o=t()}finally{r.current=a}return o}};t.exports=r},{"./Object.assign":27}],36:[function(e,t){"use strict";var n={current:null};t.exports=n},{}],37:[function(e,t){"use strict";function n(e){return o.markNonLegacyFactory(r.createFactory(e))}var r=e("./ReactElement"),o=(e("./ReactElementValidator"),e("./ReactLegacyElement")),a=e("./mapObject"),i=a({a:"a",abbr:"abbr",address:"address",area:"area",article:"article",aside:"aside",audio:"audio",b:"b",base:"base",bdi:"bdi",bdo:"bdo",big:"big",blockquote:"blockquote",body:"body",br:"br",button:"button",canvas:"canvas",caption:"caption",cite:"cite",code:"code",col:"col",colgroup:"colgroup",data:"data",datalist:"datalist",dd:"dd",del:"del",details:"details",dfn:"dfn",dialog:"dialog",div:"div",dl:"dl",dt:"dt",em:"em",embed:"embed",fieldset:"fieldset",figcaption:"figcaption",figure:"figure",footer:"footer",form:"form",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",head:"head",header:"header",hr:"hr",html:"html",i:"i",iframe:"iframe",img:"img",input:"input",ins:"ins",kbd:"kbd",keygen:"keygen",label:"label",legend:"legend",li:"li",link:"link",main:"main",map:"map",mark:"mark",menu:"menu",menuitem:"menuitem",meta:"meta",meter:"meter",nav:"nav",noscript:"noscript",object:"object",ol:"ol",optgroup:"optgroup",option:"option",output:"output",p:"p",param:"param",picture:"picture",pre:"pre",progress:"progress",q:"q",rp:"rp",rt:"rt",ruby:"ruby",s:"s",samp:"samp",script:"script",section:"section",select:"select",small:"small",source:"source",span:"span",strong:"strong",style:"style",sub:"sub",summary:"summary",sup:"sup",table:"table",tbody:"tbody",td:"td",textarea:"textarea",tfoot:"tfoot",th:"th",thead:"thead",time:"time",title:"title",tr:"tr",track:"track",u:"u",ul:"ul","var":"var",video:"video",wbr:"wbr",circle:"circle",defs:"defs",ellipse:"ellipse",g:"g",line:"line",linearGradient:"linearGradient",mask:"mask",path:"path",pattern:"pattern",polygon:"polygon",polyline:"polyline",radialGradient:"radialGradient",rect:"rect",stop:"stop",svg:"svg",text:"text",tspan:"tspan"},n);t.exports=i},{"./ReactElement":50,"./ReactElementValidator":51,"./ReactLegacyElement":59,"./mapObject":132}],38:[function(e,t){"use strict";var n=e("./AutoFocusMixin"),r=e("./ReactBrowserComponentMixin"),o=e("./ReactCompositeComponent"),a=e("./ReactElement"),i=e("./ReactDOM"),s=e("./keyMirror"),u=a.createFactory(i.button.type),c=s({onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0}),l=o.createClass({displayName:"ReactDOMButton",mixins:[n,r],render:function(){var e={};for(var t in this.props)!this.props.hasOwnProperty(t)||this.props.disabled&&c[t]||(e[t]=this.props[t]);return u(e,this.props.children)}});t.exports=l},{"./AutoFocusMixin":2,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":50,"./keyMirror":130}],39:[function(e,t){"use strict";function n(e){e&&(g(null==e.children||null==e.dangerouslySetInnerHTML),g(null==e.style||"object"==typeof e.style))}function r(e,t,n,r){var o=d.findReactContainerForID(e);if(o){var a=o.nodeType===O?o.ownerDocument:o;C(t,a)}r.getPutListenerQueue().enqueuePutListener(e,t,n)}function o(e){_.call(P,e)||(g(x.test(e)),P[e]=!0)}function a(e){o(e),this._tag=e,this.tagName=e.toUpperCase()}var i=e("./CSSPropertyOperations"),s=e("./DOMProperty"),u=e("./DOMPropertyOperations"),c=e("./ReactBrowserComponentMixin"),l=e("./ReactComponent"),p=e("./ReactBrowserEventEmitter"),d=e("./ReactMount"),f=e("./ReactMultiChild"),h=e("./ReactPerf"),m=e("./Object.assign"),v=e("./escapeTextForBrowser"),g=e("./invariant"),y=(e("./isEventSupported"),e("./keyOf")),E=(e("./monitorCodeUse"),p.deleteListener),C=p.listenTo,R=p.registrationNameModules,M={string:!0,number:!0},b=y({style:null}),O=1,D={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},x=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,P={},_={}.hasOwnProperty;a.displayName="ReactDOMComponent",a.Mixin={mountComponent:h.measure("ReactDOMComponent","mountComponent",function(e,t,r){l.Mixin.mountComponent.call(this,e,t,r),n(this.props);var o=D[this._tag]?"":"</"+this._tag+">";return this._createOpenTagMarkupAndPutListeners(t)+this._createContentMarkup(t)+o}),_createOpenTagMarkupAndPutListeners:function(e){var t=this.props,n="<"+this._tag;for(var o in t)if(t.hasOwnProperty(o)){var a=t[o];if(null!=a)if(R.hasOwnProperty(o))r(this._rootNodeID,o,a,e);else{o===b&&(a&&(a=t.style=m({},t.style)),a=i.createMarkupForStyles(a));var s=u.createMarkupForProperty(o,a);s&&(n+=" "+s)}}if(e.renderToStaticMarkup)return n+">";var c=u.createMarkupForID(this._rootNodeID);return n+" "+c+">"},_createContentMarkup:function(e){var t=this.props.dangerouslySetInnerHTML;if(null!=t){if(null!=t.__html)return t.__html}else{var n=M[typeof this.props.children]?this.props.children:null,r=null!=n?null:this.props.children;if(null!=n)return v(n);if(null!=r){var o=this.mountChildren(r,e);return o.join("")}}return""},receiveComponent:function(e,t){(e!==this._currentElement||null==e._owner)&&l.Mixin.receiveComponent.call(this,e,t)},updateComponent:h.measure("ReactDOMComponent","updateComponent",function(e,t){n(this._currentElement.props),l.Mixin.updateComponent.call(this,e,t),this._updateDOMProperties(t.props,e),this._updateDOMChildren(t.props,e)}),_updateDOMProperties:function(e,t){var n,o,a,i=this.props;for(n in e)if(!i.hasOwnProperty(n)&&e.hasOwnProperty(n))if(n===b){var u=e[n];for(o in u)u.hasOwnProperty(o)&&(a=a||{},a[o]="")}else R.hasOwnProperty(n)?E(this._rootNodeID,n):(s.isStandardName[n]||s.isCustomAttribute(n))&&l.BackendIDOperations.deletePropertyByID(this._rootNodeID,n);for(n in i){var c=i[n],p=e[n];if(i.hasOwnProperty(n)&&c!==p)if(n===b)if(c&&(c=i.style=m({},c)),p){for(o in p)!p.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(a=a||{},a[o]="");for(o in c)c.hasOwnProperty(o)&&p[o]!==c[o]&&(a=a||{},a[o]=c[o])}else a=c;else R.hasOwnProperty(n)?r(this._rootNodeID,n,c,t):(s.isStandardName[n]||s.isCustomAttribute(n))&&l.BackendIDOperations.updatePropertyByID(this._rootNodeID,n,c)}a&&l.BackendIDOperations.updateStylesByID(this._rootNodeID,a)},_updateDOMChildren:function(e,t){var n=this.props,r=M[typeof e.children]?e.children:null,o=M[typeof n.children]?n.children:null,a=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,i=n.dangerouslySetInnerHTML&&n.dangerouslySetInnerHTML.__html,s=null!=r?null:e.children,u=null!=o?null:n.children,c=null!=r||null!=a,p=null!=o||null!=i;null!=s&&null==u?this.updateChildren(null,t):c&&!p&&this.updateTextContent(""),null!=o?r!==o&&this.updateTextContent(""+o):null!=i?a!==i&&l.BackendIDOperations.updateInnerHTMLByID(this._rootNodeID,i):null!=u&&this.updateChildren(u,t)},unmountComponent:function(){this.unmountChildren(),p.deleteAllListeners(this._rootNodeID),l.Mixin.unmountComponent.call(this)}},m(a.prototype,l.Mixin,a.Mixin,f.Mixin,c),t.exports=a},{"./CSSPropertyOperations":5,"./DOMProperty":11,"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactMount":61,"./ReactMultiChild":62,"./ReactPerf":66,"./escapeTextForBrowser":107,"./invariant":124,"./isEventSupported":125,"./keyOf":131,"./monitorCodeUse":134}],40:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./LocalEventTrapMixin"),o=e("./ReactBrowserComponentMixin"),a=e("./ReactCompositeComponent"),i=e("./ReactElement"),s=e("./ReactDOM"),u=i.createFactory(s.form.type),c=a.createClass({displayName:"ReactDOMForm",mixins:[o,r],render:function(){return u(this.props)},componentDidMount:function(){this.trapBubbledEvent(n.topLevelTypes.topReset,"reset"),this.trapBubbledEvent(n.topLevelTypes.topSubmit,"submit")}});t.exports=c},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":50}],41:[function(e,t){"use strict";var n=e("./CSSPropertyOperations"),r=e("./DOMChildrenOperations"),o=e("./DOMPropertyOperations"),a=e("./ReactMount"),i=e("./ReactPerf"),s=e("./invariant"),u=e("./setInnerHTML"),c={dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.",style:"`style` must be set using `updateStylesByID()`."},l={updatePropertyByID:i.measure("ReactDOMIDOperations","updatePropertyByID",function(e,t,n){var r=a.getNode(e);s(!c.hasOwnProperty(t)),null!=n?o.setValueForProperty(r,t,n):o.deleteValueForProperty(r,t)}),deletePropertyByID:i.measure("ReactDOMIDOperations","deletePropertyByID",function(e,t,n){var r=a.getNode(e);s(!c.hasOwnProperty(t)),o.deleteValueForProperty(r,t,n)}),updateStylesByID:i.measure("ReactDOMIDOperations","updateStylesByID",function(e,t){var r=a.getNode(e);n.setValueForStyles(r,t)}),updateInnerHTMLByID:i.measure("ReactDOMIDOperations","updateInnerHTMLByID",function(e,t){var n=a.getNode(e);u(n,t)}),updateTextContentByID:i.measure("ReactDOMIDOperations","updateTextContentByID",function(e,t){var n=a.getNode(e);r.updateTextContent(n,t)}),dangerouslyReplaceNodeWithMarkupByID:i.measure("ReactDOMIDOperations","dangerouslyReplaceNodeWithMarkupByID",function(e,t){var n=a.getNode(e);r.dangerouslyReplaceNodeWithMarkup(n,t)}),dangerouslyProcessChildrenUpdates:i.measure("ReactDOMIDOperations","dangerouslyProcessChildrenUpdates",function(e,t){for(var n=0;n<e.length;n++)e[n].parentNode=a.getNode(e[n].parentID);r.processUpdates(e,t)})};t.exports=l},{"./CSSPropertyOperations":5,"./DOMChildrenOperations":10,"./DOMPropertyOperations":12,"./ReactMount":61,"./ReactPerf":66,"./invariant":124,"./setInnerHTML":136}],42:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./LocalEventTrapMixin"),o=e("./ReactBrowserComponentMixin"),a=e("./ReactCompositeComponent"),i=e("./ReactElement"),s=e("./ReactDOM"),u=i.createFactory(s.img.type),c=a.createClass({displayName:"ReactDOMImg",tagName:"IMG",mixins:[o,r],render:function(){return u(this.props)},componentDidMount:function(){this.trapBubbledEvent(n.topLevelTypes.topLoad,"load"),this.trapBubbledEvent(n.topLevelTypes.topError,"error")}});t.exports=c},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":50}],43:[function(e,t){"use strict";function n(){this.isMounted()&&this.forceUpdate()}var r=e("./AutoFocusMixin"),o=e("./DOMPropertyOperations"),a=e("./LinkedValueUtils"),i=e("./ReactBrowserComponentMixin"),s=e("./ReactCompositeComponent"),u=e("./ReactElement"),c=e("./ReactDOM"),l=e("./ReactMount"),p=e("./ReactUpdates"),d=e("./Object.assign"),f=e("./invariant"),h=u.createFactory(c.input.type),m={},v=s.createClass({displayName:"ReactDOMInput",mixins:[r,a.Mixin,i],getInitialState:function(){var e=this.props.defaultValue;return{initialChecked:this.props.defaultChecked||!1,initialValue:null!=e?e:null}},render:function(){var e=d({},this.props);e.defaultChecked=null,e.defaultValue=null;var t=a.getValue(this);e.value=null!=t?t:this.state.initialValue;var n=a.getChecked(this);return e.checked=null!=n?n:this.state.initialChecked,e.onChange=this._handleChange,h(e,this.props.children)},componentDidMount:function(){var e=l.getID(this.getDOMNode());m[e]=this},componentWillUnmount:function(){var e=this.getDOMNode(),t=l.getID(e);delete m[t]},componentDidUpdate:function(){var e=this.getDOMNode();null!=this.props.checked&&o.setValueForProperty(e,"checked",this.props.checked||!1);var t=a.getValue(this);null!=t&&o.setValueForProperty(e,"value",""+t)},_handleChange:function(e){var t,r=a.getOnChange(this);r&&(t=r.call(this,e)),p.asap(n,this);var o=this.props.name;if("radio"===this.props.type&&null!=o){for(var i=this.getDOMNode(),s=i;s.parentNode;)s=s.parentNode;for(var u=s.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),c=0,d=u.length;d>c;c++){var h=u[c];if(h!==i&&h.form===i.form){var v=l.getID(h);f(v);var g=m[v];f(g),p.asap(n,g)}}}return t}});t.exports=v},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":50,"./ReactMount":61,"./ReactUpdates":77,"./invariant":124}],44:[function(e,t){"use strict";var n=e("./ReactBrowserComponentMixin"),r=e("./ReactCompositeComponent"),o=e("./ReactElement"),a=e("./ReactDOM"),i=(e("./warning"),o.createFactory(a.option.type)),s=r.createClass({displayName:"ReactDOMOption",mixins:[n],componentWillMount:function(){},render:function(){return i(this.props,this.props.children)}});t.exports=s},{"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":50,"./warning":141}],45:[function(e,t){"use strict";function n(){this.isMounted()&&(this.setState({value:this._pendingValue}),this._pendingValue=0)}function r(e,t){if(null!=e[t])if(e.multiple){if(!Array.isArray(e[t]))return new Error("The `"+t+"` prop supplied to <select> must be an array if `multiple` is true.")}else if(Array.isArray(e[t]))return new Error("The `"+t+"` prop supplied to <select> must be a scalar value if `multiple` is false.")}function o(e,t){var n,r,o,a=e.props.multiple,i=null!=t?t:e.state.value,s=e.getDOMNode().options;if(a)for(n={},r=0,o=i.length;o>r;++r)n[""+i[r]]=!0;else n=""+i;for(r=0,o=s.length;o>r;r++){var u=a?n.hasOwnProperty(s[r].value):s[r].value===n;u!==s[r].selected&&(s[r].selected=u)}}var a=e("./AutoFocusMixin"),i=e("./LinkedValueUtils"),s=e("./ReactBrowserComponentMixin"),u=e("./ReactCompositeComponent"),c=e("./ReactElement"),l=e("./ReactDOM"),p=e("./ReactUpdates"),d=e("./Object.assign"),f=c.createFactory(l.select.type),h=u.createClass({displayName:"ReactDOMSelect",mixins:[a,i.Mixin,s],propTypes:{defaultValue:r,value:r},getInitialState:function(){return{value:this.props.defaultValue||(this.props.multiple?[]:"")}},componentWillMount:function(){this._pendingValue=null},componentWillReceiveProps:function(e){!this.props.multiple&&e.multiple?this.setState({value:[this.state.value]}):this.props.multiple&&!e.multiple&&this.setState({value:this.state.value[0]})
},render:function(){var e=d({},this.props);return e.onChange=this._handleChange,e.value=null,f(e,this.props.children)},componentDidMount:function(){o(this,i.getValue(this))},componentDidUpdate:function(e){var t=i.getValue(this),n=!!e.multiple,r=!!this.props.multiple;(null!=t||n!==r)&&o(this,t)},_handleChange:function(e){var t,r=i.getOnChange(this);r&&(t=r.call(this,e));var o;if(this.props.multiple){o=[];for(var a=e.target.options,s=0,u=a.length;u>s;s++)a[s].selected&&o.push(a[s].value)}else o=e.target.value;return this._pendingValue=o,p.asap(n,this),t}});t.exports=h},{"./AutoFocusMixin":2,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":50,"./ReactUpdates":77}],46:[function(e,t){"use strict";function n(e,t,n,r){return e===n&&t===r}function r(e){var t=document.selection,n=t.createRange(),r=n.text.length,o=n.duplicate();o.moveToElementText(e),o.setEndPoint("EndToStart",n);var a=o.text.length,i=a+r;return{start:a,end:i}}function o(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var r=t.anchorNode,o=t.anchorOffset,a=t.focusNode,i=t.focusOffset,s=t.getRangeAt(0),u=n(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),c=u?0:s.toString().length,l=s.cloneRange();l.selectNodeContents(e),l.setEnd(s.startContainer,s.startOffset);var p=n(l.startContainer,l.startOffset,l.endContainer,l.endOffset),d=p?0:l.toString().length,f=d+c,h=document.createRange();h.setStart(r,o),h.setEnd(a,i);var m=h.collapsed;return{start:m?f:d,end:m?d:f}}function a(e,t){var n,r,o=document.selection.createRange().duplicate();"undefined"==typeof t.end?(n=t.start,r=n):t.start>t.end?(n=t.end,r=t.start):(n=t.start,r=t.end),o.moveToElementText(e),o.moveStart("character",n),o.setEndPoint("EndToStart",o),o.moveEnd("character",r-n),o.select()}function i(e,t){if(window.getSelection){var n=window.getSelection(),r=e[c()].length,o=Math.min(t.start,r),a="undefined"==typeof t.end?o:Math.min(t.end,r);if(!n.extend&&o>a){var i=a;a=o,o=i}var s=u(e,o),l=u(e,a);if(s&&l){var p=document.createRange();p.setStart(s.node,s.offset),n.removeAllRanges(),o>a?(n.addRange(p),n.extend(l.node,l.offset)):(p.setEnd(l.node,l.offset),n.addRange(p))}}}var s=e("./ExecutionEnvironment"),u=e("./getNodeForCharacterOffset"),c=e("./getTextContentAccessor"),l=s.canUseDOM&&document.selection,p={getOffsets:l?r:o,setOffsets:l?a:i};t.exports=p},{"./ExecutionEnvironment":22,"./getNodeForCharacterOffset":117,"./getTextContentAccessor":119}],47:[function(e,t){"use strict";function n(){this.isMounted()&&this.forceUpdate()}var r=e("./AutoFocusMixin"),o=e("./DOMPropertyOperations"),a=e("./LinkedValueUtils"),i=e("./ReactBrowserComponentMixin"),s=e("./ReactCompositeComponent"),u=e("./ReactElement"),c=e("./ReactDOM"),l=e("./ReactUpdates"),p=e("./Object.assign"),d=e("./invariant"),f=(e("./warning"),u.createFactory(c.textarea.type)),h=s.createClass({displayName:"ReactDOMTextarea",mixins:[r,a.Mixin,i],getInitialState:function(){var e=this.props.defaultValue,t=this.props.children;null!=t&&(d(null==e),Array.isArray(t)&&(d(t.length<=1),t=t[0]),e=""+t),null==e&&(e="");var n=a.getValue(this);return{initialValue:""+(null!=n?n:e)}},render:function(){var e=p({},this.props);return d(null==e.dangerouslySetInnerHTML),e.defaultValue=null,e.value=null,e.onChange=this._handleChange,f(e,this.state.initialValue)},componentDidUpdate:function(){var e=a.getValue(this);if(null!=e){var t=this.getDOMNode();o.setValueForProperty(t,"value",""+e)}},_handleChange:function(e){var t,r=a.getOnChange(this);return r&&(t=r.call(this,e)),l.asap(n,this),t}});t.exports=h},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":50,"./ReactUpdates":77,"./invariant":124,"./warning":141}],48:[function(e,t){"use strict";function n(){this.reinitializeTransaction()}var r=e("./ReactUpdates"),o=e("./Transaction"),a=e("./Object.assign"),i=e("./emptyFunction"),s={initialize:i,close:function(){p.isBatchingUpdates=!1}},u={initialize:i,close:r.flushBatchedUpdates.bind(r)},c=[u,s];a(n.prototype,o.Mixin,{getTransactionWrappers:function(){return c}});var l=new n,p={isBatchingUpdates:!1,batchedUpdates:function(e,t,n){var r=p.isBatchingUpdates;p.isBatchingUpdates=!0,r?e(t,n):l.perform(e,null,t,n)}};t.exports=p},{"./Object.assign":27,"./ReactUpdates":77,"./Transaction":93,"./emptyFunction":105}],49:[function(e,t){"use strict";function n(){O.EventEmitter.injectReactEventListener(b),O.EventPluginHub.injectEventPluginOrder(s),O.EventPluginHub.injectInstanceHandle(D),O.EventPluginHub.injectMount(x),O.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:w,EnterLeaveEventPlugin:u,ChangeEventPlugin:o,CompositionEventPlugin:i,MobileSafariClickEventPlugin:p,SelectEventPlugin:P,BeforeInputEventPlugin:r}),O.NativeComponent.injectGenericComponentClass(m),O.NativeComponent.injectComponentClasses({button:v,form:g,img:y,input:E,option:C,select:R,textarea:M,html:N("html"),head:N("head"),body:N("body")}),O.CompositeComponent.injectMixin(d),O.DOMProperty.injectDOMPropertyConfig(l),O.DOMProperty.injectDOMPropertyConfig(T),O.EmptyComponent.injectEmptyComponent("noscript"),O.Updates.injectReconcileTransaction(f.ReactReconcileTransaction),O.Updates.injectBatchingStrategy(h),O.RootIndex.injectCreateReactRootIndex(c.canUseDOM?a.createReactRootIndex:_.createReactRootIndex),O.Component.injectEnvironment(f)}var r=e("./BeforeInputEventPlugin"),o=e("./ChangeEventPlugin"),a=e("./ClientReactRootIndex"),i=e("./CompositionEventPlugin"),s=e("./DefaultEventPluginOrder"),u=e("./EnterLeaveEventPlugin"),c=e("./ExecutionEnvironment"),l=e("./HTMLDOMPropertyConfig"),p=e("./MobileSafariClickEventPlugin"),d=e("./ReactBrowserComponentMixin"),f=e("./ReactComponentBrowserEnvironment"),h=e("./ReactDefaultBatchingStrategy"),m=e("./ReactDOMComponent"),v=e("./ReactDOMButton"),g=e("./ReactDOMForm"),y=e("./ReactDOMImg"),E=e("./ReactDOMInput"),C=e("./ReactDOMOption"),R=e("./ReactDOMSelect"),M=e("./ReactDOMTextarea"),b=e("./ReactEventListener"),O=e("./ReactInjection"),D=e("./ReactInstanceHandles"),x=e("./ReactMount"),P=e("./SelectEventPlugin"),_=e("./ServerReactRootIndex"),w=e("./SimpleEventPlugin"),T=e("./SVGDOMPropertyConfig"),N=e("./createFullPageComponent");t.exports={inject:n}},{"./BeforeInputEventPlugin":3,"./ChangeEventPlugin":7,"./ClientReactRootIndex":8,"./CompositionEventPlugin":9,"./DefaultEventPluginOrder":14,"./EnterLeaveEventPlugin":15,"./ExecutionEnvironment":22,"./HTMLDOMPropertyConfig":23,"./MobileSafariClickEventPlugin":26,"./ReactBrowserComponentMixin":29,"./ReactComponentBrowserEnvironment":33,"./ReactDOMButton":38,"./ReactDOMComponent":39,"./ReactDOMForm":40,"./ReactDOMImg":42,"./ReactDOMInput":43,"./ReactDOMOption":44,"./ReactDOMSelect":45,"./ReactDOMTextarea":47,"./ReactDefaultBatchingStrategy":48,"./ReactEventListener":55,"./ReactInjection":56,"./ReactInstanceHandles":58,"./ReactMount":61,"./SVGDOMPropertyConfig":78,"./SelectEventPlugin":79,"./ServerReactRootIndex":80,"./SimpleEventPlugin":81,"./createFullPageComponent":101}],50:[function(e,t){"use strict";var n=e("./ReactContext"),r=e("./ReactCurrentOwner"),o=(e("./warning"),{key:!0,ref:!0}),a=function(e,t,n,r,o,a){this.type=e,this.key=t,this.ref=n,this._owner=r,this._context=o,this.props=a};a.prototype={_isReactElement:!0},a.createElement=function(e,t,i){var s,u={},c=null,l=null;if(null!=t){l=void 0===t.ref?null:t.ref,c=null==t.key?null:""+t.key;for(s in t)t.hasOwnProperty(s)&&!o.hasOwnProperty(s)&&(u[s]=t[s])}var p=arguments.length-2;if(1===p)u.children=i;else if(p>1){for(var d=Array(p),f=0;p>f;f++)d[f]=arguments[f+2];u.children=d}if(e.defaultProps){var h=e.defaultProps;for(s in h)"undefined"==typeof u[s]&&(u[s]=h[s])}return new a(e,c,l,r.current,n.current,u)},a.createFactory=function(e){var t=a.createElement.bind(null,e);return t.type=e,t},a.cloneAndReplaceProps=function(e,t){var n=new a(e.type,e.key,e.ref,e._owner,e._context,t);return n},a.isValidElement=function(e){var t=!(!e||!e._isReactElement);return t},t.exports=a},{"./ReactContext":35,"./ReactCurrentOwner":36,"./warning":141}],51:[function(e,t){"use strict";function n(){var e=p.current;return e&&e.constructor.displayName||void 0}function r(e,t){e._store.validated||null!=e.key||(e._store.validated=!0,a("react_key_warning",'Each child in an array should have a unique "key" prop.',e,t))}function o(e,t,n){v.test(e)&&a("react_numeric_key_warning","Child objects should have non-numeric keys so ordering is preserved.",t,n)}function a(e,t,r,o){var a=n(),i=o.displayName,s=a||i,u=f[e];if(!u.hasOwnProperty(s)){u[s]=!0,t+=a?" Check the render method of "+a+".":" Check the renderComponent call using <"+i+">.";var c=null;r._owner&&r._owner!==p.current&&(c=r._owner.constructor.displayName,t+=" It was passed a child from "+c+"."),t+=" See http://fb.me/react-warning-keys for more information.",d(e,{component:s,componentOwner:c}),console.warn(t)}}function i(){var e=n()||"";h.hasOwnProperty(e)||(h[e]=!0,d("react_object_map_children"))}function s(e,t){if(Array.isArray(e))for(var n=0;n<e.length;n++){var a=e[n];c.isValidElement(a)&&r(a,t)}else if(c.isValidElement(e))e._store.validated=!0;else if(e&&"object"==typeof e){i();for(var s in e)o(s,e[s],t)}}function u(e,t,n,r){for(var o in t)if(t.hasOwnProperty(o)){var a;try{a=t[o](n,o,e,r)}catch(i){a=i}a instanceof Error&&!(a.message in m)&&(m[a.message]=!0,d("react_failed_descriptor_type_check",{message:a.message}))}}var c=e("./ReactElement"),l=e("./ReactPropTypeLocations"),p=e("./ReactCurrentOwner"),d=e("./monitorCodeUse"),f={react_key_warning:{},react_numeric_key_warning:{}},h={},m={},v=/^\d+$/,g={createElement:function(e){var t=c.createElement.apply(this,arguments);if(null==t)return t;for(var n=2;n<arguments.length;n++)s(arguments[n],e);var r=e.displayName;return e.propTypes&&u(r,e.propTypes,t.props,l.prop),e.contextTypes&&u(r,e.contextTypes,t._context,l.context),t},createFactory:function(e){var t=g.createElement.bind(null,e);return t.type=e,t}};t.exports=g},{"./ReactCurrentOwner":36,"./ReactElement":50,"./ReactPropTypeLocations":69,"./monitorCodeUse":134}],52:[function(e,t){"use strict";function n(){return u(i),i()}function r(e){c[e]=!0}function o(e){delete c[e]}function a(e){return c[e]}var i,s=e("./ReactElement"),u=e("./invariant"),c={},l={injectEmptyComponent:function(e){i=s.createFactory(e)}},p={deregisterNullComponentID:o,getEmptyComponent:n,injection:l,isNullComponentID:a,registerNullComponentID:r};t.exports=p},{"./ReactElement":50,"./invariant":124}],53:[function(e,t){"use strict";var n={guard:function(e){return e}};t.exports=n},{}],54:[function(e,t){"use strict";function n(e){r.enqueueEvents(e),r.processEventQueue()}var r=e("./EventPluginHub"),o={handleTopLevel:function(e,t,o,a){var i=r.extractEvents(e,t,o,a);n(i)}};t.exports=o},{"./EventPluginHub":18}],55:[function(e,t){"use strict";function n(e){var t=l.getID(e),n=c.getReactRootIDFromNodeID(t),r=l.findReactContainerForID(n),o=l.getFirstReactDOM(r);return o}function r(e,t){this.topLevelType=e,this.nativeEvent=t,this.ancestors=[]}function o(e){for(var t=l.getFirstReactDOM(f(e.nativeEvent))||window,r=t;r;)e.ancestors.push(r),r=n(r);for(var o=0,a=e.ancestors.length;a>o;o++){t=e.ancestors[o];var i=l.getID(t)||"";m._handleTopLevel(e.topLevelType,t,i,e.nativeEvent)}}function a(e){var t=h(window);e(t)}var i=e("./EventListener"),s=e("./ExecutionEnvironment"),u=e("./PooledClass"),c=e("./ReactInstanceHandles"),l=e("./ReactMount"),p=e("./ReactUpdates"),d=e("./Object.assign"),f=e("./getEventTarget"),h=e("./getUnboundedScrollPosition");d(r.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),u.addPoolingTo(r,u.twoArgumentPooler);var m={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:s.canUseDOM?window:null,setHandleTopLevel:function(e){m._handleTopLevel=e},setEnabled:function(e){m._enabled=!!e},isEnabled:function(){return m._enabled},trapBubbledEvent:function(e,t,n){var r=n;return r?i.listen(r,t,m.dispatchEvent.bind(null,e)):void 0},trapCapturedEvent:function(e,t,n){var r=n;return r?i.capture(r,t,m.dispatchEvent.bind(null,e)):void 0},monitorScrollValue:function(e){var t=a.bind(null,e);i.listen(window,"scroll",t),i.listen(window,"resize",t)},dispatchEvent:function(e,t){if(m._enabled){var n=r.getPooled(e,t);try{p.batchedUpdates(o,n)}finally{r.release(n)}}}};t.exports=m},{"./EventListener":17,"./ExecutionEnvironment":22,"./Object.assign":27,"./PooledClass":28,"./ReactInstanceHandles":58,"./ReactMount":61,"./ReactUpdates":77,"./getEventTarget":115,"./getUnboundedScrollPosition":120}],56:[function(e,t){"use strict";var n=e("./DOMProperty"),r=e("./EventPluginHub"),o=e("./ReactComponent"),a=e("./ReactCompositeComponent"),i=e("./ReactEmptyComponent"),s=e("./ReactBrowserEventEmitter"),u=e("./ReactNativeComponent"),c=e("./ReactPerf"),l=e("./ReactRootIndex"),p=e("./ReactUpdates"),d={Component:o.injection,CompositeComponent:a.injection,DOMProperty:n.injection,EmptyComponent:i.injection,EventPluginHub:r.injection,EventEmitter:s.injection,NativeComponent:u.injection,Perf:c.injection,RootIndex:l.injection,Updates:p.injection};t.exports=d},{"./DOMProperty":11,"./EventPluginHub":18,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactEmptyComponent":52,"./ReactNativeComponent":64,"./ReactPerf":66,"./ReactRootIndex":73,"./ReactUpdates":77}],57:[function(e,t){"use strict";function n(e){return o(document.documentElement,e)}var r=e("./ReactDOMSelection"),o=e("./containsNode"),a=e("./focusNode"),i=e("./getActiveElement"),s={hasSelectionCapabilities:function(e){return e&&("INPUT"===e.nodeName&&"text"===e.type||"TEXTAREA"===e.nodeName||"true"===e.contentEditable)},getSelectionInformation:function(){var e=i();return{focusedElem:e,selectionRange:s.hasSelectionCapabilities(e)?s.getSelection(e):null}},restoreSelection:function(e){var t=i(),r=e.focusedElem,o=e.selectionRange;t!==r&&n(r)&&(s.hasSelectionCapabilities(r)&&s.setSelection(r,o),a(r))},getSelection:function(e){var t;if("selectionStart"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&"INPUT"===e.nodeName){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart("character",-e.value.length),end:-n.moveEnd("character",-e.value.length)})}else t=r.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,o=t.end;if("undefined"==typeof o&&(o=n),"selectionStart"in e)e.selectionStart=n,e.selectionEnd=Math.min(o,e.value.length);else if(document.selection&&"INPUT"===e.nodeName){var a=e.createTextRange();a.collapse(!0),a.moveStart("character",n),a.moveEnd("character",o-n),a.select()}else r.setOffsets(e,t)}};t.exports=s},{"./ReactDOMSelection":46,"./containsNode":99,"./focusNode":109,"./getActiveElement":111}],58:[function(e,t){"use strict";function n(e){return d+e.toString(36)}function r(e,t){return e.charAt(t)===d||t===e.length}function o(e){return""===e||e.charAt(0)===d&&e.charAt(e.length-1)!==d}function a(e,t){return 0===t.indexOf(e)&&r(t,e.length)}function i(e){return e?e.substr(0,e.lastIndexOf(d)):""}function s(e,t){if(p(o(e)&&o(t)),p(a(e,t)),e===t)return e;for(var n=e.length+f,i=n;i<t.length&&!r(t,i);i++);return t.substr(0,i)}function u(e,t){var n=Math.min(e.length,t.length);if(0===n)return"";for(var a=0,i=0;n>=i;i++)if(r(e,i)&&r(t,i))a=i;else if(e.charAt(i)!==t.charAt(i))break;var s=e.substr(0,a);return p(o(s)),s}function c(e,t,n,r,o,u){e=e||"",t=t||"",p(e!==t);var c=a(t,e);p(c||a(e,t));for(var l=0,d=c?i:s,f=e;;f=d(f,t)){var m;if(o&&f===e||u&&f===t||(m=n(f,c,r)),m===!1||f===t)break;p(l++<h)}}var l=e("./ReactRootIndex"),p=e("./invariant"),d=".",f=d.length,h=100,m={createReactRootID:function(){return n(l.createReactRootIndex())},createReactID:function(e,t){return e+t},getReactRootIDFromNodeID:function(e){if(e&&e.charAt(0)===d&&e.length>1){var t=e.indexOf(d,1);return t>-1?e.substr(0,t):e}return null},traverseEnterLeave:function(e,t,n,r,o){var a=u(e,t);a!==e&&c(e,a,n,r,!1,!0),a!==t&&c(a,t,n,o,!0,!1)},traverseTwoPhase:function(e,t,n){e&&(c("",e,t,n,!0,!1),c(e,"",t,n,!1,!0))},traverseAncestors:function(e,t,n){c("",e,t,n,!0,!1)},_getFirstCommonAncestorID:u,_getNextDescendantID:s,isAncestorIDOf:a,SEPARATOR:d};t.exports=m},{"./ReactRootIndex":73,"./invariant":124}],59:[function(e,t){"use strict";function n(e,t){if("function"==typeof t)for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];if("function"==typeof r){var o=r.bind(t);for(var a in r)r.hasOwnProperty(a)&&(o[a]=r[a]);e[n]=o}else e[n]=r}}var r=(e("./ReactCurrentOwner"),e("./invariant")),o=(e("./monitorCodeUse"),e("./warning"),{}),a={},i={};i.wrapCreateFactory=function(e){var t=function(t){return"function"!=typeof t?e(t):t.isReactNonLegacyFactory?e(t.type):t.isReactLegacyFactory?e(t.type):t};return t},i.wrapCreateElement=function(e){var t=function(t){if("function"!=typeof t)return e.apply(this,arguments);var n;return t.isReactNonLegacyFactory?(n=Array.prototype.slice.call(arguments,0),n[0]=t.type,e.apply(this,n)):t.isReactLegacyFactory?(t._isMockFunction&&(t.type._mockedReactClassConstructor=t),n=Array.prototype.slice.call(arguments,0),n[0]=t.type,e.apply(this,n)):t.apply(null,Array.prototype.slice.call(arguments,1))};return t},i.wrapFactory=function(e){r("function"==typeof e);var t=function(){return e.apply(this,arguments)};return n(t,e.type),t.isReactLegacyFactory=o,t.type=e.type,t},i.markNonLegacyFactory=function(e){return e.isReactNonLegacyFactory=a,e},i.isValidFactory=function(e){return"function"==typeof e&&e.isReactLegacyFactory===o},i.isValidClass=function(e){return i.isValidFactory(e)},i._isLegacyCallWarningEnabled=!0,t.exports=i},{"./ReactCurrentOwner":36,"./invariant":124,"./monitorCodeUse":134,"./warning":141}],60:[function(e,t){"use strict";var n=e("./adler32"),r={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var t=n(e);return e.replace(">"," "+r.CHECKSUM_ATTR_NAME+'="'+t+'">')},canReuseMarkup:function(e,t){var o=t.getAttribute(r.CHECKSUM_ATTR_NAME);o=o&&parseInt(o,10);var a=n(e);return a===o}};t.exports=r},{"./adler32":96}],61:[function(e,t){"use strict";function n(e){var t=E(e);return t&&S.getID(t)}function r(e){var t=o(e);if(t)if(x.hasOwnProperty(t)){var n=x[t];n!==e&&(R(!s(n,t)),x[t]=e)}else x[t]=e;return t}function o(e){return e&&e.getAttribute&&e.getAttribute(D)||""}function a(e,t){var n=o(e);n!==t&&delete x[n],e.setAttribute(D,t),x[t]=e}function i(e){return x.hasOwnProperty(e)&&s(x[e],e)||(x[e]=S.findReactNodeByID(e)),x[e]}function s(e,t){if(e){R(o(e)===t);var n=S.findReactContainerForID(t);if(n&&g(n,e))return!0}return!1}function u(e){delete x[e]}function c(e){var t=x[e];return t&&s(t,e)?void(I=t):!1}function l(e){I=null,m.traverseAncestors(e,c);var t=I;return I=null,t}var p=e("./DOMProperty"),d=e("./ReactBrowserEventEmitter"),f=(e("./ReactCurrentOwner"),e("./ReactElement")),h=e("./ReactLegacyElement"),m=e("./ReactInstanceHandles"),v=e("./ReactPerf"),g=e("./containsNode"),y=e("./deprecated"),E=e("./getReactRootElementInContainer"),C=e("./instantiateReactComponent"),R=e("./invariant"),M=e("./shouldUpdateReactComponent"),b=(e("./warning"),h.wrapCreateElement(f.createElement)),O=m.SEPARATOR,D=p.ID_ATTRIBUTE_NAME,x={},P=1,_=9,w={},T={},N=[],I=null,S={_instancesByReactRootID:w,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,r){var o=t.props;return S.scrollMonitor(n,function(){e.replaceProps(o,r)}),e},_registerComponent:function(e,t){R(t&&(t.nodeType===P||t.nodeType===_)),d.ensureScrollValueMonitoring();var n=S.registerContainer(t);return w[n]=e,n},_renderNewRootComponent:v.measure("ReactMount","_renderNewRootComponent",function(e,t,n){var r=C(e,null),o=S._registerComponent(r,t);return r.mountComponentIntoNode(o,t,n),r}),render:function(e,t,r){R(f.isValidElement(e));var o=w[n(t)];if(o){var a=o._currentElement;if(M(a,e))return S._updateRootComponent(o,e,t,r);S.unmountComponentAtNode(t)}var i=E(t),s=i&&S.isRenderedByReact(i),u=s&&!o,c=S._renderNewRootComponent(e,t,u);return r&&r.call(c),c},constructAndRenderComponent:function(e,t,n){var r=b(e,t);return S.render(r,n)},constructAndRenderComponentByID:function(e,t,n){var r=document.getElementById(n);return R(r),S.constructAndRenderComponent(e,t,r)},registerContainer:function(e){var t=n(e);return t&&(t=m.getReactRootIDFromNodeID(t)),t||(t=m.createReactRootID()),T[t]=e,t},unmountComponentAtNode:function(e){var t=n(e),r=w[t];return r?(S.unmountComponentFromNode(r,e),delete w[t],delete T[t],!0):!1},unmountComponentFromNode:function(e,t){for(e.unmountComponent(),t.nodeType===_&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)},findReactContainerForID:function(e){var t=m.getReactRootIDFromNodeID(e),n=T[t];return n},findReactNodeByID:function(e){var t=S.findReactContainerForID(e);return S.findComponentRoot(t,e)},isRenderedByReact:function(e){if(1!==e.nodeType)return!1;var t=S.getID(e);return t?t.charAt(0)===O:!1},getFirstReactDOM:function(e){for(var t=e;t&&t.parentNode!==t;){if(S.isRenderedByReact(t))return t;t=t.parentNode}return null},findComponentRoot:function(e,t){var n=N,r=0,o=l(t)||e;for(n[0]=o.firstChild,n.length=1;r<n.length;){for(var a,i=n[r++];i;){var s=S.getID(i);s?t===s?a=i:m.isAncestorIDOf(s,t)&&(n.length=r=0,n.push(i.firstChild)):n.push(i.firstChild),i=i.nextSibling}if(a)return n.length=0,a}n.length=0,R(!1)},getReactRootID:n,getID:r,setID:a,getNode:i,purgeID:u};S.renderComponent=y("ReactMount","renderComponent","render",this,S.render),t.exports=S},{"./DOMProperty":11,"./ReactBrowserEventEmitter":30,"./ReactCurrentOwner":36,"./ReactElement":50,"./ReactInstanceHandles":58,"./ReactLegacyElement":59,"./ReactPerf":66,"./containsNode":99,"./deprecated":104,"./getReactRootElementInContainer":118,"./instantiateReactComponent":123,"./invariant":124,"./shouldUpdateReactComponent":138,"./warning":141}],62:[function(e,t){"use strict";function n(e,t,n){h.push({parentID:e,parentNode:null,type:c.INSERT_MARKUP,markupIndex:m.push(t)-1,textContent:null,fromIndex:null,toIndex:n})}function r(e,t,n){h.push({parentID:e,parentNode:null,type:c.MOVE_EXISTING,markupIndex:null,textContent:null,fromIndex:t,toIndex:n})}function o(e,t){h.push({parentID:e,parentNode:null,type:c.REMOVE_NODE,markupIndex:null,textContent:null,fromIndex:t,toIndex:null})}function a(e,t){h.push({parentID:e,parentNode:null,type:c.TEXT_CONTENT,markupIndex:null,textContent:t,fromIndex:null,toIndex:null})}function i(){h.length&&(u.BackendIDOperations.dangerouslyProcessChildrenUpdates(h,m),s())}function s(){h.length=0,m.length=0}var u=e("./ReactComponent"),c=e("./ReactMultiChildUpdateTypes"),l=e("./flattenChildren"),p=e("./instantiateReactComponent"),d=e("./shouldUpdateReactComponent"),f=0,h=[],m=[],v={Mixin:{mountChildren:function(e,t){var n=l(e),r=[],o=0;this._renderedChildren=n;for(var a in n){var i=n[a];if(n.hasOwnProperty(a)){var s=p(i,null);n[a]=s;var u=this._rootNodeID+a,c=s.mountComponent(u,t,this._mountDepth+1);s._mountIndex=o,r.push(c),o++}}return r},updateTextContent:function(e){f++;var t=!0;try{var n=this._renderedChildren;for(var r in n)n.hasOwnProperty(r)&&this._unmountChildByName(n[r],r);this.setTextContent(e),t=!1}finally{f--,f||(t?s():i())}},updateChildren:function(e,t){f++;var n=!0;try{this._updateChildren(e,t),n=!1}finally{f--,f||(n?s():i())}},_updateChildren:function(e,t){var n=l(e),r=this._renderedChildren;if(n||r){var o,a=0,i=0;for(o in n)if(n.hasOwnProperty(o)){var s=r&&r[o],u=s&&s._currentElement,c=n[o];if(d(u,c))this.moveChild(s,i,a),a=Math.max(s._mountIndex,a),s.receiveComponent(c,t),s._mountIndex=i;else{s&&(a=Math.max(s._mountIndex,a),this._unmountChildByName(s,o));var f=p(c,null);this._mountChildByNameAtIndex(f,o,i,t)}i++}for(o in r)!r.hasOwnProperty(o)||n&&n[o]||this._unmountChildByName(r[o],o)}},unmountChildren:function(){var e=this._renderedChildren;for(var t in e){var n=e[t];n.unmountComponent&&n.unmountComponent()}this._renderedChildren=null},moveChild:function(e,t,n){e._mountIndex<n&&r(this._rootNodeID,e._mountIndex,t)},createChild:function(e,t){n(this._rootNodeID,t,e._mountIndex)},removeChild:function(e){o(this._rootNodeID,e._mountIndex)},setTextContent:function(e){a(this._rootNodeID,e)},_mountChildByNameAtIndex:function(e,t,n,r){var o=this._rootNodeID+t,a=e.mountComponent(o,r,this._mountDepth+1);e._mountIndex=n,this.createChild(e,a),this._renderedChildren=this._renderedChildren||{},this._renderedChildren[t]=e},_unmountChildByName:function(e,t){this.removeChild(e),e._mountIndex=null,e.unmountComponent(),delete this._renderedChildren[t]}}};t.exports=v},{"./ReactComponent":32,"./ReactMultiChildUpdateTypes":63,"./flattenChildren":108,"./instantiateReactComponent":123,"./shouldUpdateReactComponent":138}],63:[function(e,t){"use strict";var n=e("./keyMirror"),r=n({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,TEXT_CONTENT:null});t.exports=r},{"./keyMirror":130}],64:[function(e,t){"use strict";function n(e,t,n){var r=i[e];return null==r?(o(a),new a(e,t)):n===e?(o(a),new a(e,t)):new r.type(t)}var r=e("./Object.assign"),o=e("./invariant"),a=null,i={},s={injectGenericComponentClass:function(e){a=e},injectComponentClasses:function(e){r(i,e)}},u={createInstanceForTag:n,injection:s};t.exports=u},{"./Object.assign":27,"./invariant":124}],65:[function(e,t){"use strict";var n=e("./emptyObject"),r=e("./invariant"),o={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,t,n){r(o.isValidOwner(n)),n.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,n){r(o.isValidOwner(n)),n.refs[t]===e&&n.detachRef(t)},Mixin:{construct:function(){this.refs=n},attachRef:function(e,t){r(t.isOwnedBy(this));var o=this.refs===n?this.refs={}:this.refs;o[e]=t},detachRef:function(e){delete this.refs[e]}}};t.exports=o},{"./emptyObject":106,"./invariant":124}],66:[function(e,t){"use strict";function n(e,t,n){return n}var r={enableMeasure:!1,storedMeasure:n,measure:function(e,t,n){return n},injection:{injectMeasure:function(e){r.storedMeasure=e}}};t.exports=r},{}],67:[function(e,t){"use strict";function n(e){return function(t,n,r){t[n]=t.hasOwnProperty(n)?e(t[n],r):r}}function r(e,t){for(var n in t)if(t.hasOwnProperty(n)){var r=c[n];r&&c.hasOwnProperty(n)?r(e,n,t[n]):e.hasOwnProperty(n)||(e[n]=t[n])}return e}var o=e("./Object.assign"),a=e("./emptyFunction"),i=e("./invariant"),s=e("./joinClasses"),u=(e("./warning"),n(function(e,t){return o({},t,e)})),c={children:a,className:n(s),style:u},l={TransferStrategies:c,mergeProps:function(e,t){return r(o({},e),t)},Mixin:{transferPropsTo:function(e){return i(e._owner===this),r(e.props,this.props),e}}};t.exports=l},{"./Object.assign":27,"./emptyFunction":105,"./invariant":124,"./joinClasses":129,"./warning":141}],68:[function(e,t){"use strict";var n={};t.exports=n},{}],69:[function(e,t){"use strict";var n=e("./keyMirror"),r=n({prop:null,context:null,childContext:null});t.exports=r},{"./keyMirror":130}],70:[function(e,t){"use strict";function n(e){function t(t,n,r,o,a){if(o=o||C,null!=n[r])return e(n,r,o,a);var i=g[a];return t?new Error("Required "+i+" `"+r+"` was not specified in "+("`"+o+"`.")):void 0}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}function r(e){function t(t,n,r,o){var a=t[n],i=h(a);if(i!==e){var s=g[o],u=m(a);return new Error("Invalid "+s+" `"+n+"` of type `"+u+"` "+("supplied to `"+r+"`, expected `"+e+"`."))}}return n(t)}function o(){return n(E.thatReturns())}function a(e){function t(t,n,r,o){var a=t[n];if(!Array.isArray(a)){var i=g[o],s=h(a);return new Error("Invalid "+i+" `"+n+"` of type "+("`"+s+"` supplied to `"+r+"`, expected an array."))}for(var u=0;u<a.length;u++){var c=e(a,u,r,o);if(c instanceof Error)return c}}return n(t)}function i(){function e(e,t,n,r){if(!v.isValidElement(e[t])){var o=g[r];return new Error("Invalid "+o+" `"+t+"` supplied to "+("`"+n+"`, expected a ReactElement."))}}return n(e)}function s(e){function t(t,n,r,o){if(!(t[n]instanceof e)){var a=g[o],i=e.name||C;return new Error("Invalid "+a+" `"+n+"` supplied to "+("`"+r+"`, expected instance of `"+i+"`."))}}return n(t)}function u(e){function t(t,n,r,o){for(var a=t[n],i=0;i<e.length;i++)if(a===e[i])return;var s=g[o],u=JSON.stringify(e);return new Error("Invalid "+s+" `"+n+"` of value `"+a+"` "+("supplied to `"+r+"`, expected one of "+u+"."))}return n(t)}function c(e){function t(t,n,r,o){var a=t[n],i=h(a);if("object"!==i){var s=g[o];return new Error("Invalid "+s+" `"+n+"` of type "+("`"+i+"` supplied to `"+r+"`, expected an object."))}for(var u in a)if(a.hasOwnProperty(u)){var c=e(a,u,r,o);if(c instanceof Error)return c}}return n(t)}function l(e){function t(t,n,r,o){for(var a=0;a<e.length;a++){var i=e[a];if(null==i(t,n,r,o))return}var s=g[o];return new Error("Invalid "+s+" `"+n+"` supplied to "+("`"+r+"`."))}return n(t)}function p(){function e(e,t,n,r){if(!f(e[t])){var o=g[r];return new Error("Invalid "+o+" `"+t+"` supplied to "+("`"+n+"`, expected a ReactNode."))}}return n(e)}function d(e){function t(t,n,r,o){var a=t[n],i=h(a);if("object"!==i){var s=g[o];return new Error("Invalid "+s+" `"+n+"` of type `"+i+"` "+("supplied to `"+r+"`, expected `object`."))}for(var u in e){var c=e[u];if(c){var l=c(a,u,r,o);if(l)return l}}}return n(t,"expected `object`")}function f(e){switch(typeof e){case"number":case"string":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(f);if(v.isValidElement(e))return!0;for(var t in e)if(!f(e[t]))return!1;return!0;default:return!1}}function h(e){var t=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":t}function m(e){var t=h(e);if("object"===t){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return t}var v=e("./ReactElement"),g=e("./ReactPropTypeLocationNames"),y=e("./deprecated"),E=e("./emptyFunction"),C="<<anonymous>>",R=i(),M=p(),b={array:r("array"),bool:r("boolean"),func:r("function"),number:r("number"),object:r("object"),string:r("string"),any:o(),arrayOf:a,element:R,instanceOf:s,node:M,objectOf:c,oneOf:u,oneOfType:l,shape:d,component:y("React.PropTypes","component","element",this,R),renderable:y("React.PropTypes","renderable","node",this,M)};t.exports=b},{"./ReactElement":50,"./ReactPropTypeLocationNames":68,"./deprecated":104,"./emptyFunction":105}],71:[function(e,t){"use strict";function n(){this.listenersToPut=[]}var r=e("./PooledClass"),o=e("./ReactBrowserEventEmitter"),a=e("./Object.assign");a(n.prototype,{enqueuePutListener:function(e,t,n){this.listenersToPut.push({rootNodeID:e,propKey:t,propValue:n})},putListeners:function(){for(var e=0;e<this.listenersToPut.length;e++){var t=this.listenersToPut[e];o.putListener(t.rootNodeID,t.propKey,t.propValue)}},reset:function(){this.listenersToPut.length=0},destructor:function(){this.reset()}}),r.addPoolingTo(n),t.exports=n},{"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30}],72:[function(e,t){"use strict";function n(){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=r.getPooled(null),this.putListenerQueue=s.getPooled()}var r=e("./CallbackQueue"),o=e("./PooledClass"),a=e("./ReactBrowserEventEmitter"),i=e("./ReactInputSelection"),s=e("./ReactPutListenerQueue"),u=e("./Transaction"),c=e("./Object.assign"),l={initialize:i.getSelectionInformation,close:i.restoreSelection},p={initialize:function(){var e=a.isEnabled();return a.setEnabled(!1),e},close:function(e){a.setEnabled(e)}},d={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},f={initialize:function(){this.putListenerQueue.reset()},close:function(){this.putListenerQueue.putListeners()}},h=[f,l,p,d],m={getTransactionWrappers:function(){return h},getReactMountReady:function(){return this.reactMountReady},getPutListenerQueue:function(){return this.putListenerQueue},destructor:function(){r.release(this.reactMountReady),this.reactMountReady=null,s.release(this.putListenerQueue),this.putListenerQueue=null}};c(n.prototype,u.Mixin,m),o.addPoolingTo(n),t.exports=n},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30,"./ReactInputSelection":57,"./ReactPutListenerQueue":71,"./Transaction":93}],73:[function(e,t){"use strict";
var n={injectCreateReactRootIndex:function(e){r.createReactRootIndex=e}},r={createReactRootIndex:null,injection:n};t.exports=r},{}],74:[function(e,t){"use strict";function n(e){c(o.isValidElement(e));var t;try{var n=a.createReactRootID();return t=s.getPooled(!1),t.perform(function(){var r=u(e,null),o=r.mountComponent(n,t,0);return i.addChecksumToMarkup(o)},null)}finally{s.release(t)}}function r(e){c(o.isValidElement(e));var t;try{var n=a.createReactRootID();return t=s.getPooled(!0),t.perform(function(){var r=u(e,null);return r.mountComponent(n,t,0)},null)}finally{s.release(t)}}var o=e("./ReactElement"),a=e("./ReactInstanceHandles"),i=e("./ReactMarkupChecksum"),s=e("./ReactServerRenderingTransaction"),u=e("./instantiateReactComponent"),c=e("./invariant");t.exports={renderToString:n,renderToStaticMarkup:r}},{"./ReactElement":50,"./ReactInstanceHandles":58,"./ReactMarkupChecksum":60,"./ReactServerRenderingTransaction":75,"./instantiateReactComponent":123,"./invariant":124}],75:[function(e,t){"use strict";function n(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.reactMountReady=o.getPooled(null),this.putListenerQueue=a.getPooled()}var r=e("./PooledClass"),o=e("./CallbackQueue"),a=e("./ReactPutListenerQueue"),i=e("./Transaction"),s=e("./Object.assign"),u=e("./emptyFunction"),c={initialize:function(){this.reactMountReady.reset()},close:u},l={initialize:function(){this.putListenerQueue.reset()},close:u},p=[l,c],d={getTransactionWrappers:function(){return p},getReactMountReady:function(){return this.reactMountReady},getPutListenerQueue:function(){return this.putListenerQueue},destructor:function(){o.release(this.reactMountReady),this.reactMountReady=null,a.release(this.putListenerQueue),this.putListenerQueue=null}};s(n.prototype,i.Mixin,d),r.addPoolingTo(n),t.exports=n},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactPutListenerQueue":71,"./Transaction":93,"./emptyFunction":105}],76:[function(e,t){"use strict";var n=e("./DOMPropertyOperations"),r=e("./ReactComponent"),o=e("./ReactElement"),a=e("./Object.assign"),i=e("./escapeTextForBrowser"),s=function(){};a(s.prototype,r.Mixin,{mountComponent:function(e,t,o){r.Mixin.mountComponent.call(this,e,t,o);var a=i(this.props);return t.renderToStaticMarkup?a:"<span "+n.createMarkupForID(e)+">"+a+"</span>"},receiveComponent:function(e){var t=e.props;t!==this.props&&(this.props=t,r.BackendIDOperations.updateTextContentByID(this._rootNodeID,t))}});var u=function(e){return new o(s,null,null,null,null,e)};u.type=s,t.exports=u},{"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactComponent":32,"./ReactElement":50,"./escapeTextForBrowser":107}],77:[function(e,t){"use strict";function n(){h(O.ReactReconcileTransaction&&y)}function r(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=c.getPooled(),this.reconcileTransaction=O.ReactReconcileTransaction.getPooled()}function o(e,t,r){n(),y.batchedUpdates(e,t,r)}function a(e,t){return e._mountDepth-t._mountDepth}function i(e){var t=e.dirtyComponentsLength;h(t===m.length),m.sort(a);for(var n=0;t>n;n++){var r=m[n];if(r.isMounted()){var o=r._pendingCallbacks;if(r._pendingCallbacks=null,r.performUpdateIfNecessary(e.reconcileTransaction),o)for(var i=0;i<o.length;i++)e.callbackQueue.enqueue(o[i],r)}}}function s(e,t){return h(!t||"function"==typeof t),n(),y.isBatchingUpdates?(m.push(e),void(t&&(e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t]))):void y.batchedUpdates(s,e,t)}function u(e,t){h(y.isBatchingUpdates),v.enqueue(e,t),g=!0}var c=e("./CallbackQueue"),l=e("./PooledClass"),p=(e("./ReactCurrentOwner"),e("./ReactPerf")),d=e("./Transaction"),f=e("./Object.assign"),h=e("./invariant"),m=(e("./warning"),[]),v=c.getPooled(),g=!1,y=null,E={initialize:function(){this.dirtyComponentsLength=m.length},close:function(){this.dirtyComponentsLength!==m.length?(m.splice(0,this.dirtyComponentsLength),M()):m.length=0}},C={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},R=[E,C];f(r.prototype,d.Mixin,{getTransactionWrappers:function(){return R},destructor:function(){this.dirtyComponentsLength=null,c.release(this.callbackQueue),this.callbackQueue=null,O.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return d.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),l.addPoolingTo(r);var M=p.measure("ReactUpdates","flushBatchedUpdates",function(){for(;m.length||g;){if(m.length){var e=r.getPooled();e.perform(i,null,e),r.release(e)}if(g){g=!1;var t=v;v=c.getPooled(),t.notifyAll(),c.release(t)}}}),b={injectReconcileTransaction:function(e){h(e),O.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){h(e),h("function"==typeof e.batchedUpdates),h("boolean"==typeof e.isBatchingUpdates),y=e}},O={ReactReconcileTransaction:null,batchedUpdates:o,enqueueUpdate:s,flushBatchedUpdates:M,injection:b,asap:u};t.exports=O},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactCurrentOwner":36,"./ReactPerf":66,"./Transaction":93,"./invariant":124,"./warning":141}],78:[function(e,t){"use strict";var n=e("./DOMProperty"),r=n.injection.MUST_USE_ATTRIBUTE,o={Properties:{cx:r,cy:r,d:r,dx:r,dy:r,fill:r,fillOpacity:r,fontFamily:r,fontSize:r,fx:r,fy:r,gradientTransform:r,gradientUnits:r,markerEnd:r,markerMid:r,markerStart:r,offset:r,opacity:r,patternContentUnits:r,patternUnits:r,points:r,preserveAspectRatio:r,r:r,rx:r,ry:r,spreadMethod:r,stopColor:r,stopOpacity:r,stroke:r,strokeDasharray:r,strokeLinecap:r,strokeOpacity:r,strokeWidth:r,textAnchor:r,transform:r,version:r,viewBox:r,x1:r,x2:r,x:r,y1:r,y2:r,y:r},DOMAttributeNames:{fillOpacity:"fill-opacity",fontFamily:"font-family",fontSize:"font-size",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",patternContentUnits:"patternContentUnits",patternUnits:"patternUnits",preserveAspectRatio:"preserveAspectRatio",spreadMethod:"spreadMethod",stopColor:"stop-color",stopOpacity:"stop-opacity",strokeDasharray:"stroke-dasharray",strokeLinecap:"stroke-linecap",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",textAnchor:"text-anchor",viewBox:"viewBox"}};t.exports=o},{"./DOMProperty":11}],79:[function(e,t){"use strict";function n(e){if("selectionStart"in e&&i.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var t=window.getSelection();return{anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}}if(document.selection){var n=document.selection.createRange();return{parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft}}}function r(e){if(!g&&null!=h&&h==u()){var t=n(h);if(!v||!p(v,t)){v=t;var r=s.getPooled(f.select,m,e);return r.type="select",r.target=h,a.accumulateTwoPhaseDispatches(r),r}}}var o=e("./EventConstants"),a=e("./EventPropagators"),i=e("./ReactInputSelection"),s=e("./SyntheticEvent"),u=e("./getActiveElement"),c=e("./isTextInputElement"),l=e("./keyOf"),p=e("./shallowEqual"),d=o.topLevelTypes,f={select:{phasedRegistrationNames:{bubbled:l({onSelect:null}),captured:l({onSelectCapture:null})},dependencies:[d.topBlur,d.topContextMenu,d.topFocus,d.topKeyDown,d.topMouseDown,d.topMouseUp,d.topSelectionChange]}},h=null,m=null,v=null,g=!1,y={eventTypes:f,extractEvents:function(e,t,n,o){switch(e){case d.topFocus:(c(t)||"true"===t.contentEditable)&&(h=t,m=n,v=null);break;case d.topBlur:h=null,m=null,v=null;break;case d.topMouseDown:g=!0;break;case d.topContextMenu:case d.topMouseUp:return g=!1,r(o);case d.topSelectionChange:case d.topKeyDown:case d.topKeyUp:return r(o)}}};t.exports=y},{"./EventConstants":16,"./EventPropagators":21,"./ReactInputSelection":57,"./SyntheticEvent":85,"./getActiveElement":111,"./isTextInputElement":127,"./keyOf":131,"./shallowEqual":137}],80:[function(e,t){"use strict";var n=Math.pow(2,53),r={createReactRootIndex:function(){return Math.ceil(Math.random()*n)}};t.exports=r},{}],81:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./EventPluginUtils"),o=e("./EventPropagators"),a=e("./SyntheticClipboardEvent"),i=e("./SyntheticEvent"),s=e("./SyntheticFocusEvent"),u=e("./SyntheticKeyboardEvent"),c=e("./SyntheticMouseEvent"),l=e("./SyntheticDragEvent"),p=e("./SyntheticTouchEvent"),d=e("./SyntheticUIEvent"),f=e("./SyntheticWheelEvent"),h=e("./getEventCharCode"),m=e("./invariant"),v=e("./keyOf"),g=(e("./warning"),n.topLevelTypes),y={blur:{phasedRegistrationNames:{bubbled:v({onBlur:!0}),captured:v({onBlurCapture:!0})}},click:{phasedRegistrationNames:{bubbled:v({onClick:!0}),captured:v({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:v({onContextMenu:!0}),captured:v({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:v({onCopy:!0}),captured:v({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:v({onCut:!0}),captured:v({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:v({onDoubleClick:!0}),captured:v({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:v({onDrag:!0}),captured:v({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:v({onDragEnd:!0}),captured:v({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:v({onDragEnter:!0}),captured:v({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:v({onDragExit:!0}),captured:v({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:v({onDragLeave:!0}),captured:v({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:v({onDragOver:!0}),captured:v({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:v({onDragStart:!0}),captured:v({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:v({onDrop:!0}),captured:v({onDropCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:v({onFocus:!0}),captured:v({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:v({onInput:!0}),captured:v({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:v({onKeyDown:!0}),captured:v({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:v({onKeyPress:!0}),captured:v({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:v({onKeyUp:!0}),captured:v({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:v({onLoad:!0}),captured:v({onLoadCapture:!0})}},error:{phasedRegistrationNames:{bubbled:v({onError:!0}),captured:v({onErrorCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:v({onMouseDown:!0}),captured:v({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:v({onMouseMove:!0}),captured:v({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:v({onMouseOut:!0}),captured:v({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:v({onMouseOver:!0}),captured:v({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:v({onMouseUp:!0}),captured:v({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:v({onPaste:!0}),captured:v({onPasteCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:v({onReset:!0}),captured:v({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:v({onScroll:!0}),captured:v({onScrollCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:v({onSubmit:!0}),captured:v({onSubmitCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:v({onTouchCancel:!0}),captured:v({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:v({onTouchEnd:!0}),captured:v({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:v({onTouchMove:!0}),captured:v({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:v({onTouchStart:!0}),captured:v({onTouchStartCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:v({onWheel:!0}),captured:v({onWheelCapture:!0})}}},E={topBlur:y.blur,topClick:y.click,topContextMenu:y.contextMenu,topCopy:y.copy,topCut:y.cut,topDoubleClick:y.doubleClick,topDrag:y.drag,topDragEnd:y.dragEnd,topDragEnter:y.dragEnter,topDragExit:y.dragExit,topDragLeave:y.dragLeave,topDragOver:y.dragOver,topDragStart:y.dragStart,topDrop:y.drop,topError:y.error,topFocus:y.focus,topInput:y.input,topKeyDown:y.keyDown,topKeyPress:y.keyPress,topKeyUp:y.keyUp,topLoad:y.load,topMouseDown:y.mouseDown,topMouseMove:y.mouseMove,topMouseOut:y.mouseOut,topMouseOver:y.mouseOver,topMouseUp:y.mouseUp,topPaste:y.paste,topReset:y.reset,topScroll:y.scroll,topSubmit:y.submit,topTouchCancel:y.touchCancel,topTouchEnd:y.touchEnd,topTouchMove:y.touchMove,topTouchStart:y.touchStart,topWheel:y.wheel};for(var C in E)E[C].dependencies=[C];var R={eventTypes:y,executeDispatch:function(e,t,n){var o=r.executeDispatch(e,t,n);o===!1&&(e.stopPropagation(),e.preventDefault())},extractEvents:function(e,t,n,r){var v=E[e];if(!v)return null;var y;switch(e){case g.topInput:case g.topLoad:case g.topError:case g.topReset:case g.topSubmit:y=i;break;case g.topKeyPress:if(0===h(r))return null;case g.topKeyDown:case g.topKeyUp:y=u;break;case g.topBlur:case g.topFocus:y=s;break;case g.topClick:if(2===r.button)return null;case g.topContextMenu:case g.topDoubleClick:case g.topMouseDown:case g.topMouseMove:case g.topMouseOut:case g.topMouseOver:case g.topMouseUp:y=c;break;case g.topDrag:case g.topDragEnd:case g.topDragEnter:case g.topDragExit:case g.topDragLeave:case g.topDragOver:case g.topDragStart:case g.topDrop:y=l;break;case g.topTouchCancel:case g.topTouchEnd:case g.topTouchMove:case g.topTouchStart:y=p;break;case g.topScroll:y=d;break;case g.topWheel:y=f;break;case g.topCopy:case g.topCut:case g.topPaste:y=a}m(y);var C=y.getPooled(v,n,r);return o.accumulateTwoPhaseDispatches(C),C}};t.exports=R},{"./EventConstants":16,"./EventPluginUtils":20,"./EventPropagators":21,"./SyntheticClipboardEvent":82,"./SyntheticDragEvent":84,"./SyntheticEvent":85,"./SyntheticFocusEvent":86,"./SyntheticKeyboardEvent":88,"./SyntheticMouseEvent":89,"./SyntheticTouchEvent":90,"./SyntheticUIEvent":91,"./SyntheticWheelEvent":92,"./getEventCharCode":112,"./invariant":124,"./keyOf":131,"./warning":141}],82:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};r.augmentClass(n,o),t.exports=n},{"./SyntheticEvent":85}],83:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o={data:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticEvent":85}],84:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticMouseEvent"),o={dataTransfer:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticMouseEvent":89}],85:[function(e,t){"use strict";function n(e,t,n){this.dispatchConfig=e,this.dispatchMarker=t,this.nativeEvent=n;var r=this.constructor.Interface;for(var o in r)if(r.hasOwnProperty(o)){var i=r[o];this[o]=i?i(n):n[o]}var s=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;this.isDefaultPrevented=s?a.thatReturnsTrue:a.thatReturnsFalse,this.isPropagationStopped=a.thatReturnsFalse}var r=e("./PooledClass"),o=e("./Object.assign"),a=e("./emptyFunction"),i=e("./getEventTarget"),s={type:null,target:i,currentTarget:a.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};o(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=a.thatReturnsTrue},stopPropagation:function(){var e=this.nativeEvent;e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=a.thatReturnsTrue},persist:function(){this.isPersistent=a.thatReturnsTrue},isPersistent:a.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;this.dispatchConfig=null,this.dispatchMarker=null,this.nativeEvent=null}}),n.Interface=s,n.augmentClass=function(e,t){var n=this,a=Object.create(n.prototype);o(a,e.prototype),e.prototype=a,e.prototype.constructor=e,e.Interface=o({},n.Interface,t),e.augmentClass=n.augmentClass,r.addPoolingTo(e,r.threeArgumentPooler)},r.addPoolingTo(n,r.threeArgumentPooler),t.exports=n},{"./Object.assign":27,"./PooledClass":28,"./emptyFunction":105,"./getEventTarget":115}],86:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o={relatedTarget:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticUIEvent":91}],87:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o={data:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticEvent":85}],88:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o=e("./getEventCharCode"),a=e("./getEventKey"),i=e("./getEventModifierState"),s={key:a,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:i,charCode:function(e){return"keypress"===e.type?o(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?o(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};r.augmentClass(n,s),t.exports=n},{"./SyntheticUIEvent":91,"./getEventCharCode":112,"./getEventKey":113,"./getEventModifierState":114}],89:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o=e("./ViewportMetrics"),a=e("./getEventModifierState"),i={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:a,button:function(e){var t=e.button;return"which"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+o.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+o.currentScrollTop}};r.augmentClass(n,i),t.exports=n},{"./SyntheticUIEvent":91,"./ViewportMetrics":94,"./getEventModifierState":114}],90:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o=e("./getEventModifierState"),a={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:o};r.augmentClass(n,a),t.exports=n},{"./SyntheticUIEvent":91,"./getEventModifierState":114}],91:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o=e("./getEventTarget"),a={view:function(e){if(e.view)return e.view;var t=o(e);if(null!=t&&t.window===t)return t;var n=t.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(e){return e.detail||0}};r.augmentClass(n,a),t.exports=n},{"./SyntheticEvent":85,"./getEventTarget":115}],92:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticMouseEvent"),o={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticMouseEvent":89}],93:[function(e,t){"use strict";var n=e("./invariant"),r={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,r,o,a,i,s,u){n(!this.isInTransaction());var c,l;try{this._isInTransaction=!0,c=!0,this.initializeAll(0),l=e.call(t,r,o,a,i,s,u),c=!1}finally{try{if(c)try{this.closeAll(0)}catch(p){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return l},initializeAll:function(e){for(var t=this.transactionWrappers,n=e;n<t.length;n++){var r=t[n];try{this.wrapperInitData[n]=o.OBSERVED_ERROR,this.wrapperInitData[n]=r.initialize?r.initialize.call(this):null}finally{if(this.wrapperInitData[n]===o.OBSERVED_ERROR)try{this.initializeAll(n+1)}catch(a){}}}},closeAll:function(e){n(this.isInTransaction());for(var t=this.transactionWrappers,r=e;r<t.length;r++){var a,i=t[r],s=this.wrapperInitData[r];try{a=!0,s!==o.OBSERVED_ERROR&&i.close&&i.close.call(this,s),a=!1}finally{if(a)try{this.closeAll(r+1)}catch(u){}}}this.wrapperInitData.length=0}},o={Mixin:r,OBSERVED_ERROR:{}};t.exports=o},{"./invariant":124}],94:[function(e,t){"use strict";var n=e("./getUnboundedScrollPosition"),r={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(){var e=n(window);r.currentScrollLeft=e.x,r.currentScrollTop=e.y}};t.exports=r},{"./getUnboundedScrollPosition":120}],95:[function(e,t){"use strict";function n(e,t){if(r(null!=t),null==e)return t;var n=Array.isArray(e),o=Array.isArray(t);return n&&o?(e.push.apply(e,t),e):n?(e.push(t),e):o?[e].concat(t):[e,t]}var r=e("./invariant");t.exports=n},{"./invariant":124}],96:[function(e,t){"use strict";function n(e){for(var t=1,n=0,o=0;o<e.length;o++)t=(t+e.charCodeAt(o))%r,n=(n+t)%r;return t|n<<16}var r=65521;t.exports=n},{}],97:[function(e,t){function n(e){return e.replace(r,function(e,t){return t.toUpperCase()})}var r=/-(.)/g;t.exports=n},{}],98:[function(e,t){"use strict";function n(e){return r(e.replace(o,"ms-"))}var r=e("./camelize"),o=/^-ms-/;t.exports=n},{"./camelize":97}],99:[function(e,t){function n(e,t){return e&&t?e===t?!0:r(e)?!1:r(t)?n(e,t.parentNode):e.contains?e.contains(t):e.compareDocumentPosition?!!(16&e.compareDocumentPosition(t)):!1:!1}var r=e("./isTextNode");t.exports=n},{"./isTextNode":128}],100:[function(e,t){function n(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function r(e){return n(e)?Array.isArray(e)?e.slice():o(e):[e]}var o=e("./toArray");t.exports=r},{"./toArray":139}],101:[function(e,t){"use strict";function n(e){var t=o.createFactory(e),n=r.createClass({displayName:"ReactFullPageComponent"+e,componentWillUnmount:function(){a(!1)},render:function(){return t(this.props)}});return n}var r=e("./ReactCompositeComponent"),o=e("./ReactElement"),a=e("./invariant");t.exports=n},{"./ReactCompositeComponent":34,"./ReactElement":50,"./invariant":124}],102:[function(e,t){function n(e){var t=e.match(c);return t&&t[1].toLowerCase()}function r(e,t){var r=u;s(!!u);var o=n(e),c=o&&i(o);if(c){r.innerHTML=c[1]+e+c[2];for(var l=c[0];l--;)r=r.lastChild}else r.innerHTML=e;var p=r.getElementsByTagName("script");p.length&&(s(t),a(p).forEach(t));for(var d=a(r.childNodes);r.lastChild;)r.removeChild(r.lastChild);return d}var o=e("./ExecutionEnvironment"),a=e("./createArrayFrom"),i=e("./getMarkupWrap"),s=e("./invariant"),u=o.canUseDOM?document.createElement("div"):null,c=/^\s*<(\w+)/;t.exports=r},{"./ExecutionEnvironment":22,"./createArrayFrom":100,"./getMarkupWrap":116,"./invariant":124}],103:[function(e,t){"use strict";function n(e,t){var n=null==t||"boolean"==typeof t||""===t;if(n)return"";var r=isNaN(t);return r||0===t||o.hasOwnProperty(e)&&o[e]?""+t:("string"==typeof t&&(t=t.trim()),t+"px")}var r=e("./CSSProperty"),o=r.isUnitlessNumber;t.exports=n},{"./CSSProperty":4}],104:[function(e,t){function n(e,t,n,r,o){return o}e("./Object.assign"),e("./warning");t.exports=n},{"./Object.assign":27,"./warning":141}],105:[function(e,t){function n(e){return function(){return e}}function r(){}r.thatReturns=n,r.thatReturnsFalse=n(!1),r.thatReturnsTrue=n(!0),r.thatReturnsNull=n(null),r.thatReturnsThis=function(){return this},r.thatReturnsArgument=function(e){return e},t.exports=r},{}],106:[function(e,t){"use strict";var n={};t.exports=n},{}],107:[function(e,t){"use strict";function n(e){return o[e]}function r(e){return(""+e).replace(a,n)}var o={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},a=/[&><"']/g;t.exports=r},{}],108:[function(e,t){"use strict";function n(e,t,n){var r=e,a=!r.hasOwnProperty(n);if(a&&null!=t){var i,s=typeof t;i="string"===s?o(t):"number"===s?o(""+t):t,r[n]=i}}function r(e){if(null==e)return e;var t={};return a(e,n,t),t}{var o=e("./ReactTextComponent"),a=e("./traverseAllChildren");e("./warning")}t.exports=r},{"./ReactTextComponent":76,"./traverseAllChildren":140,"./warning":141}],109:[function(e,t){"use strict";function n(e){try{e.focus()}catch(t){}}t.exports=n},{}],110:[function(e,t){"use strict";var n=function(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)};t.exports=n},{}],111:[function(e,t){function n(){try{return document.activeElement||document.body}catch(e){return document.body}}t.exports=n},{}],112:[function(e,t){"use strict";function n(e){var t,n=e.keyCode;return"charCode"in e?(t=e.charCode,0===t&&13===n&&(t=13)):t=n,t>=32||13===t?t:0}t.exports=n},{}],113:[function(e,t){"use strict";function n(e){if(e.key){var t=o[e.key]||e.key;if("Unidentified"!==t)return t}if("keypress"===e.type){var n=r(e);return 13===n?"Enter":String.fromCharCode(n)}return"keydown"===e.type||"keyup"===e.type?a[e.keyCode]||"Unidentified":""}var r=e("./getEventCharCode"),o={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},a={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};t.exports=n},{"./getEventCharCode":112}],114:[function(e,t){"use strict";function n(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var r=o[e];return r?!!n[r]:!1}function r(){return n}var o={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};t.exports=r},{}],115:[function(e,t){"use strict";function n(e){var t=e.target||e.srcElement||window;return 3===t.nodeType?t.parentNode:t}t.exports=n},{}],116:[function(e,t){function n(e){return o(!!a),p.hasOwnProperty(e)||(e="*"),i.hasOwnProperty(e)||(a.innerHTML="*"===e?"<link />":"<"+e+"></"+e+">",i[e]=!a.firstChild),i[e]?p[e]:null}var r=e("./ExecutionEnvironment"),o=e("./invariant"),a=r.canUseDOM?document.createElement("div"):null,i={circle:!0,defs:!0,ellipse:!0,g:!0,line:!0,linearGradient:!0,path:!0,polygon:!0,polyline:!0,radialGradient:!0,rect:!0,stop:!0,text:!0},s=[1,'<select multiple="true">',"</select>"],u=[1,"<table>","</table>"],c=[3,"<table><tbody><tr>","</tr></tbody></table>"],l=[1,"<svg>","</svg>"],p={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:s,option:s,caption:u,colgroup:u,tbody:u,tfoot:u,thead:u,td:c,th:c,circle:l,defs:l,ellipse:l,g:l,line:l,linearGradient:l,path:l,polygon:l,polyline:l,radialGradient:l,rect:l,stop:l,text:l};t.exports=n},{"./ExecutionEnvironment":22,"./invariant":124}],117:[function(e,t){"use strict";function n(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function r(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function o(e,t){for(var o=n(e),a=0,i=0;o;){if(3==o.nodeType){if(i=a+o.textContent.length,t>=a&&i>=t)return{node:o,offset:t-a};a=i}o=n(r(o))}}t.exports=o},{}],118:[function(e,t){"use strict";function n(e){return e?e.nodeType===r?e.documentElement:e.firstChild:null}var r=9;t.exports=n},{}],119:[function(e,t){"use strict";function n(){return!o&&r.canUseDOM&&(o="textContent"in document.documentElement?"textContent":"innerText"),o}var r=e("./ExecutionEnvironment"),o=null;t.exports=n},{"./ExecutionEnvironment":22}],120:[function(e,t){"use strict";function n(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}t.exports=n},{}],121:[function(e,t){function n(e){return e.replace(r,"-$1").toLowerCase()}var r=/([A-Z])/g;t.exports=n},{}],122:[function(e,t){"use strict";function n(e){return r(e).replace(o,"-ms-")}var r=e("./hyphenate"),o=/^ms-/;t.exports=n},{"./hyphenate":121}],123:[function(e,t){"use strict";function n(e,t){var n;return n="string"==typeof e.type?r.createInstanceForTag(e.type,e.props,t):new e.type(e.props),n.construct(e),n}{var r=(e("./warning"),e("./ReactElement"),e("./ReactLegacyElement"),e("./ReactNativeComponent"));e("./ReactEmptyComponent")}t.exports=n},{"./ReactElement":50,"./ReactEmptyComponent":52,"./ReactLegacyElement":59,"./ReactNativeComponent":64,"./warning":141}],124:[function(e,t){"use strict";var n=function(e,t,n,r,o,a,i,s){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,a,i,s],l=0;u=new Error("Invariant Violation: "+t.replace(/%s/g,function(){return c[l++]}))}throw u.framesToPop=1,u}};t.exports=n},{}],125:[function(e,t){"use strict";function n(e,t){if(!o.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,a=n in document;if(!a){var i=document.createElement("div");i.setAttribute(n,"return;"),a="function"==typeof i[n]}return!a&&r&&"wheel"===e&&(a=document.implementation.hasFeature("Events.wheel","3.0")),a}var r,o=e("./ExecutionEnvironment");o.canUseDOM&&(r=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),t.exports=n},{"./ExecutionEnvironment":22}],126:[function(e,t){function n(e){return!(!e||!("function"==typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}t.exports=n},{}],127:[function(e,t){"use strict";function n(e){return e&&("INPUT"===e.nodeName&&r[e.type]||"TEXTAREA"===e.nodeName)}var r={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports=n},{}],128:[function(e,t){function n(e){return r(e)&&3==e.nodeType}var r=e("./isNode");t.exports=n},{"./isNode":126}],129:[function(e,t){"use strict";function n(e){e||(e="");var t,n=arguments.length;if(n>1)for(var r=1;n>r;r++)t=arguments[r],t&&(e=(e?e+" ":"")+t);return e}t.exports=n},{}],130:[function(e,t){"use strict";var n=e("./invariant"),r=function(e){var t,r={};n(e instanceof Object&&!Array.isArray(e));for(t in e)e.hasOwnProperty(t)&&(r[t]=t);return r};t.exports=r},{"./invariant":124}],131:[function(e,t){var n=function(e){var t;for(t in e)if(e.hasOwnProperty(t))return t;return null};t.exports=n},{}],132:[function(e,t){"use strict";function n(e,t,n){if(!e)return null;var o={};for(var a in e)r.call(e,a)&&(o[a]=t.call(n,e[a],a,e));return o}var r=Object.prototype.hasOwnProperty;t.exports=n},{}],133:[function(e,t){"use strict";function n(e){var t={};return function(n){return t.hasOwnProperty(n)?t[n]:t[n]=e.call(this,n)}}t.exports=n},{}],134:[function(e,t){"use strict";function n(e){r(e&&!/[^a-z0-9_]/.test(e))}var r=e("./invariant");t.exports=n},{"./invariant":124}],135:[function(e,t){"use strict";function n(e){return o(r.isValidElement(e)),e}var r=e("./ReactElement"),o=e("./invariant");t.exports=n},{"./ReactElement":50,"./invariant":124}],136:[function(e,t){"use strict";var n=e("./ExecutionEnvironment"),r=/^[ \r\n\t\f]/,o=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,a=function(e,t){e.innerHTML=t};if(n.canUseDOM){var i=document.createElement("div");i.innerHTML=" ",""===i.innerHTML&&(a=function(e,t){if(e.parentNode&&e.parentNode.replaceChild(e,e),r.test(t)||"<"===t[0]&&o.test(t)){e.innerHTML=""+t;var n=e.firstChild;1===n.data.length?e.removeChild(n):n.deleteData(0,1)}else e.innerHTML=t})}t.exports=a},{"./ExecutionEnvironment":22}],137:[function(e,t){"use strict";
function n(e,t){if(e===t)return!0;var n;for(n in e)if(e.hasOwnProperty(n)&&(!t.hasOwnProperty(n)||e[n]!==t[n]))return!1;for(n in t)if(t.hasOwnProperty(n)&&!e.hasOwnProperty(n))return!1;return!0}t.exports=n},{}],138:[function(e,t){"use strict";function n(e,t){return e&&t&&e.type===t.type&&e.key===t.key&&e._owner===t._owner?!0:!1}t.exports=n},{}],139:[function(e,t){function n(e){var t=e.length;if(r(!Array.isArray(e)&&("object"==typeof e||"function"==typeof e)),r("number"==typeof t),r(0===t||t-1 in e),e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(n){}for(var o=Array(t),a=0;t>a;a++)o[a]=e[a];return o}var r=e("./invariant");t.exports=n},{"./invariant":124}],140:[function(e,t){"use strict";function n(e){return d[e]}function r(e,t){return e&&null!=e.key?a(e.key):t.toString(36)}function o(e){return(""+e).replace(f,n)}function a(e){return"$"+o(e)}function i(e,t,n){return null==e?0:h(e,"",0,t,n)}var s=e("./ReactElement"),u=e("./ReactInstanceHandles"),c=e("./invariant"),l=u.SEPARATOR,p=":",d={"=":"=0",".":"=1",":":"=2"},f=/[=.:]/g,h=function(e,t,n,o,i){var u,d,f=0;if(Array.isArray(e))for(var m=0;m<e.length;m++){var v=e[m];u=t+(t?p:l)+r(v,m),d=n+f,f+=h(v,u,d,o,i)}else{var g=typeof e,y=""===t,E=y?l+r(e,0):t;if(null==e||"boolean"===g)o(i,null,E,n),f=1;else if("string"===g||"number"===g||s.isValidElement(e))o(i,e,E,n),f=1;else if("object"===g){c(!e||1!==e.nodeType);for(var C in e)e.hasOwnProperty(C)&&(u=t+(t?p:l)+a(C)+p+r(e[C],0),d=n+f,f+=h(e[C],u,d,o,i))}}return f};t.exports=i},{"./ReactElement":50,"./ReactInstanceHandles":58,"./invariant":124}],141:[function(e,t){"use strict";var n=e("./emptyFunction"),r=n;t.exports=r},{"./emptyFunction":105}]},{},[1])(1)});
if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__11308__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__11307 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11307) : cljs.core.into_array.call(null, G__11307);
      }());
    };
    var G__11308 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11309__i = 0, G__11309__a = new Array(arguments.length - 0);
        while (G__11309__i < G__11309__a.length) {
          G__11309__a[G__11309__i] = arguments[G__11309__i + 0];
          ++G__11309__i;
        }
        args = new cljs.core.IndexedSeq(G__11309__a, 0);
      }
      return G__11308__delegate.call(this, args);
    };
    G__11308.cljs$lang$maxFixedArity = 0;
    G__11308.cljs$lang$applyTo = function(arglist__11310) {
      var args = cljs.core.seq(arglist__11310);
      return G__11308__delegate(args);
    };
    G__11308.cljs$core$IFn$_invoke$arity$variadic = G__11308__delegate;
    return G__11308;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__11312 = x;
  return goog.isString(G__11312);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__11314 = x__$1;
    return goog.typeOf(G__11314);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3764__auto__ = ty;
    if (cljs.core.truth_(and__3764__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3764__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__11316 = obj;
    return goog.typeOf(G__11316);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__11318 = Symbol;
  return goog.typeOf(G__11318);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4663__auto___11320 = len;
  var i_11321 = 0;
  while (true) {
    if (i_11321 < n__4663__auto___11320) {
      new_arr[i_11321] = arr[i_11321];
      var G__11322 = i_11321 + 1;
      i_11321 = G__11322;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__11323 = i + 1;
      i = G__11323;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__11332__delegate = function(array, i, idxs) {
      var G__11329 = aget;
      var G__11330 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__11331 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11329, G__11330, G__11331) : cljs.core.apply.call(null, G__11329, G__11330, G__11331);
    };
    var G__11332 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__11333__i = 0, G__11333__a = new Array(arguments.length - 2);
        while (G__11333__i < G__11333__a.length) {
          G__11333__a[G__11333__i] = arguments[G__11333__i + 2];
          ++G__11333__i;
        }
        idxs = new cljs.core.IndexedSeq(G__11333__a, 0);
      }
      return G__11332__delegate.call(this, array, i, idxs);
    };
    G__11332.cljs$lang$maxFixedArity = 2;
    G__11332.cljs$lang$applyTo = function(arglist__11334) {
      var array = cljs.core.first(arglist__11334);
      arglist__11334 = cljs.core.next(arglist__11334);
      var i = cljs.core.first(arglist__11334);
      var idxs = cljs.core.rest(arglist__11334);
      return G__11332__delegate(array, i, idxs);
    };
    G__11332.cljs$core$IFn$_invoke$arity$variadic = G__11332__delegate;
    return G__11332;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__11335 = null;
        if (arguments.length > 2) {
          var G__11336__i = 0, G__11336__a = new Array(arguments.length - 2);
          while (G__11336__i < G__11336__a.length) {
            G__11336__a[G__11336__i] = arguments[G__11336__i + 2];
            ++G__11336__i;
          }
          G__11335 = new cljs.core.IndexedSeq(G__11336__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__11335);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__11345__delegate = function(array, idx, idx2, idxv) {
      var G__11341 = aset;
      var G__11342 = array[idx];
      var G__11343 = idx2;
      var G__11344 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11341, G__11342, G__11343, G__11344) : cljs.core.apply.call(null, G__11341, G__11342, G__11343, G__11344);
    };
    var G__11345 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__11346__i = 0, G__11346__a = new Array(arguments.length - 3);
        while (G__11346__i < G__11346__a.length) {
          G__11346__a[G__11346__i] = arguments[G__11346__i + 3];
          ++G__11346__i;
        }
        idxv = new cljs.core.IndexedSeq(G__11346__a, 0);
      }
      return G__11345__delegate.call(this, array, idx, idx2, idxv);
    };
    G__11345.cljs$lang$maxFixedArity = 3;
    G__11345.cljs$lang$applyTo = function(arglist__11347) {
      var array = cljs.core.first(arglist__11347);
      arglist__11347 = cljs.core.next(arglist__11347);
      var idx = cljs.core.first(arglist__11347);
      arglist__11347 = cljs.core.next(arglist__11347);
      var idx2 = cljs.core.first(arglist__11347);
      var idxv = cljs.core.rest(arglist__11347);
      return G__11345__delegate(array, idx, idx2, idxv);
    };
    G__11345.cljs$core$IFn$_invoke$arity$variadic = G__11345__delegate;
    return G__11345;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__11348 = null;
        if (arguments.length > 3) {
          var G__11349__i = 0, G__11349__a = new Array(arguments.length - 3);
          while (G__11349__i < G__11349__a.length) {
            G__11349__a[G__11349__i] = arguments[G__11349__i + 3];
            ++G__11349__i;
          }
          G__11348 = new cljs.core.IndexedSeq(G__11349__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__11348);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__11355 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__11356 = [];
    var G__11357 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11355, G__11356, G__11357) : cljs.core.reduce.call(null, G__11355, G__11356, G__11357);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__11358__i = 0, G__11358__a = new Array(arguments.length - 2);
      while (G__11358__i < G__11358__a.length) {
        G__11358__a[G__11358__i] = arguments[G__11358__i + 2];
        ++G__11358__i;
      }
      args = new cljs.core.IndexedSeq(G__11358__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__11359) {
    var obj = cljs.core.first(arglist__11359);
    arglist__11359 = cljs.core.next(arglist__11359);
    var s = cljs.core.first(arglist__11359);
    var args = cljs.core.rest(arglist__11359);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj11361 = {};
  return obj11361;
}();
cljs.core.IFn = function() {
  var obj11363 = {};
  return obj11363;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11409 = x__4420__auto__;
          return goog.typeOf(G__11409);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11411 = x__4420__auto__;
          return goog.typeOf(G__11411);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11413 = x__4420__auto__;
          return goog.typeOf(G__11413);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11415 = x__4420__auto__;
          return goog.typeOf(G__11415);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11417 = x__4420__auto__;
          return goog.typeOf(G__11417);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11419 = x__4420__auto__;
          return goog.typeOf(G__11419);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11421 = x__4420__auto__;
          return goog.typeOf(G__11421);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11423 = x__4420__auto__;
          return goog.typeOf(G__11423);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11425 = x__4420__auto__;
          return goog.typeOf(G__11425);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11427 = x__4420__auto__;
          return goog.typeOf(G__11427);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11429 = x__4420__auto__;
          return goog.typeOf(G__11429);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11431 = x__4420__auto__;
          return goog.typeOf(G__11431);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11433 = x__4420__auto__;
          return goog.typeOf(G__11433);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11435 = x__4420__auto__;
          return goog.typeOf(G__11435);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11437 = x__4420__auto__;
          return goog.typeOf(G__11437);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11439 = x__4420__auto__;
          return goog.typeOf(G__11439);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11441 = x__4420__auto__;
          return goog.typeOf(G__11441);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11443 = x__4420__auto__;
          return goog.typeOf(G__11443);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11445 = x__4420__auto__;
          return goog.typeOf(G__11445);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11447 = x__4420__auto__;
          return goog.typeOf(G__11447);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11449 = x__4420__auto__;
          return goog.typeOf(G__11449);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__11451 = x__4420__auto__;
          return goog.typeOf(G__11451);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj11453 = {};
  return obj11453;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3764__auto__ = value;
    if (and__3764__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4420__auto__ = value == null ? null : value;
    return function() {
      var or__3776__auto__ = cljs.core._clone[function() {
        var G__11457 = x__4420__auto__;
        return goog.typeOf(G__11457);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._clone["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj11459 = {};
  return obj11459;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._count[function() {
        var G__11463 = x__4420__auto__;
        return goog.typeOf(G__11463);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._count["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj11465 = {};
  return obj11465;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._empty[function() {
        var G__11469 = x__4420__auto__;
        return goog.typeOf(G__11469);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._empty["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj11471 = {};
  return obj11471;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._conj[function() {
        var G__11475 = x__4420__auto__;
        return goog.typeOf(G__11475);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._conj["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj11477 = {};
  return obj11477;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._nth[function() {
          var G__11483 = x__4420__auto__;
          return goog.typeOf(G__11483);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._nth["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._nth[function() {
          var G__11485 = x__4420__auto__;
          return goog.typeOf(G__11485);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._nth["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj11487 = {};
  return obj11487;
}();
cljs.core.ISeq = function() {
  var obj11489 = {};
  return obj11489;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._first[function() {
        var G__11493 = x__4420__auto__;
        return goog.typeOf(G__11493);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._first["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._rest[function() {
        var G__11497 = x__4420__auto__;
        return goog.typeOf(G__11497);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._rest["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj11499 = {};
  return obj11499;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._next[function() {
        var G__11503 = x__4420__auto__;
        return goog.typeOf(G__11503);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._next["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj11505 = {};
  return obj11505;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._lookup[function() {
          var G__11511 = x__4420__auto__;
          return goog.typeOf(G__11511);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._lookup["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._lookup[function() {
          var G__11513 = x__4420__auto__;
          return goog.typeOf(G__11513);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._lookup["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj11515 = {};
  return obj11515;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__11519 = x__4420__auto__;
        return goog.typeOf(G__11519);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc[function() {
        var G__11523 = x__4420__auto__;
        return goog.typeOf(G__11523);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj11525 = {};
  return obj11525;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._dissoc[function() {
        var G__11529 = x__4420__auto__;
        return goog.typeOf(G__11529);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._dissoc["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj11531 = {};
  return obj11531;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._key[function() {
        var G__11535 = x__4420__auto__;
        return goog.typeOf(G__11535);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._key["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._val[function() {
        var G__11539 = x__4420__auto__;
        return goog.typeOf(G__11539);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._val["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj11541 = {};
  return obj11541;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._disjoin[function() {
        var G__11545 = x__4420__auto__;
        return goog.typeOf(G__11545);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._disjoin["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj11547 = {};
  return obj11547;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._peek[function() {
        var G__11551 = x__4420__auto__;
        return goog.typeOf(G__11551);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._peek["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._pop[function() {
        var G__11555 = x__4420__auto__;
        return goog.typeOf(G__11555);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._pop["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj11557 = {};
  return obj11557;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc_n[function() {
        var G__11561 = x__4420__auto__;
        return goog.typeOf(G__11561);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj11563 = {};
  return obj11563;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._deref[function() {
        var G__11567 = x__4420__auto__;
        return goog.typeOf(G__11567);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._deref["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj11569 = {};
  return obj11569;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._deref_with_timeout[function() {
        var G__11573 = x__4420__auto__;
        return goog.typeOf(G__11573);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj11575 = {};
  return obj11575;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._meta[function() {
        var G__11579 = x__4420__auto__;
        return goog.typeOf(G__11579);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._meta["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj11581 = {};
  return obj11581;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._with_meta[function() {
        var G__11585 = x__4420__auto__;
        return goog.typeOf(G__11585);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._with_meta["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj11587 = {};
  return obj11587;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._reduce[function() {
          var G__11593 = x__4420__auto__;
          return goog.typeOf(G__11593);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._reduce["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._reduce[function() {
          var G__11595 = x__4420__auto__;
          return goog.typeOf(G__11595);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._reduce["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj11597 = {};
  return obj11597;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._kv_reduce[function() {
        var G__11601 = x__4420__auto__;
        return goog.typeOf(G__11601);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj11603 = {};
  return obj11603;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._equiv[function() {
        var G__11607 = x__4420__auto__;
        return goog.typeOf(G__11607);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._equiv["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj11609 = {};
  return obj11609;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._hash[function() {
        var G__11613 = x__4420__auto__;
        return goog.typeOf(G__11613);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._hash["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj11615 = {};
  return obj11615;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._seq[function() {
        var G__11619 = x__4420__auto__;
        return goog.typeOf(G__11619);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._seq["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj11621 = {};
  return obj11621;
}();
cljs.core.IList = function() {
  var obj11623 = {};
  return obj11623;
}();
cljs.core.IRecord = function() {
  var obj11625 = {};
  return obj11625;
}();
cljs.core.IReversible = function() {
  var obj11627 = {};
  return obj11627;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._rseq[function() {
        var G__11631 = x__4420__auto__;
        return goog.typeOf(G__11631);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._rseq["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj11633 = {};
  return obj11633;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._sorted_seq[function() {
        var G__11637 = x__4420__auto__;
        return goog.typeOf(G__11637);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._sorted_seq_from[function() {
        var G__11641 = x__4420__auto__;
        return goog.typeOf(G__11641);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._entry_key[function() {
        var G__11645 = x__4420__auto__;
        return goog.typeOf(G__11645);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._entry_key["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._comparator[function() {
        var G__11649 = x__4420__auto__;
        return goog.typeOf(G__11649);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._comparator["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj11651 = {};
  return obj11651;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3764__auto__ = writer;
    if (and__3764__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4420__auto__ = writer == null ? null : writer;
    return function() {
      var or__3776__auto__ = cljs.core._write[function() {
        var G__11655 = x__4420__auto__;
        return goog.typeOf(G__11655);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._write["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3764__auto__ = writer;
    if (and__3764__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4420__auto__ = writer == null ? null : writer;
    return function() {
      var or__3776__auto__ = cljs.core._flush[function() {
        var G__11659 = x__4420__auto__;
        return goog.typeOf(G__11659);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._flush["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj11661 = {};
  return obj11661;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._pr_writer[function() {
        var G__11665 = x__4420__auto__;
        return goog.typeOf(G__11665);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj11667 = {};
  return obj11667;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3764__auto__ = d;
    if (and__3764__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4420__auto__ = d == null ? null : d;
    return function() {
      var or__3776__auto__ = cljs.core._realized_QMARK_[function() {
        var G__11671 = x__4420__auto__;
        return goog.typeOf(G__11671);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj11673 = {};
  return obj11673;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = cljs.core._notify_watches[function() {
        var G__11677 = x__4420__auto__;
        return goog.typeOf(G__11677);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = cljs.core._add_watch[function() {
        var G__11681 = x__4420__auto__;
        return goog.typeOf(G__11681);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._add_watch["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = cljs.core._remove_watch[function() {
        var G__11685 = x__4420__auto__;
        return goog.typeOf(G__11685);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj11687 = {};
  return obj11687;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._as_transient[function() {
        var G__11691 = x__4420__auto__;
        return goog.typeOf(G__11691);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._as_transient["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj11693 = {};
  return obj11693;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._conj_BANG_[function() {
        var G__11697 = x__4420__auto__;
        return goog.typeOf(G__11697);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._persistent_BANG_[function() {
        var G__11701 = x__4420__auto__;
        return goog.typeOf(G__11701);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj11703 = {};
  return obj11703;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc_BANG_[function() {
        var G__11707 = x__4420__auto__;
        return goog.typeOf(G__11707);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj11709 = {};
  return obj11709;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__11713 = x__4420__auto__;
        return goog.typeOf(G__11713);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj11715 = {};
  return obj11715;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__11719 = x__4420__auto__;
        return goog.typeOf(G__11719);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._pop_BANG_[function() {
        var G__11723 = x__4420__auto__;
        return goog.typeOf(G__11723);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj11725 = {};
  return obj11725;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__11729 = x__4420__auto__;
        return goog.typeOf(G__11729);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj11731 = {};
  return obj11731;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._compare[function() {
        var G__11735 = x__4420__auto__;
        return goog.typeOf(G__11735);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._compare["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj11737 = {};
  return obj11737;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._drop_first[function() {
        var G__11741 = x__4420__auto__;
        return goog.typeOf(G__11741);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._drop_first["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj11743 = {};
  return obj11743;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._chunked_first[function() {
        var G__11747 = x__4420__auto__;
        return goog.typeOf(G__11747);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._chunked_rest[function() {
        var G__11751 = x__4420__auto__;
        return goog.typeOf(G__11751);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj11753 = {};
  return obj11753;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._chunked_next[function() {
        var G__11757 = x__4420__auto__;
        return goog.typeOf(G__11757);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj11759 = {};
  return obj11759;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._name[function() {
        var G__11763 = x__4420__auto__;
        return goog.typeOf(G__11763);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._name["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._namespace[function() {
        var G__11767 = x__4420__auto__;
        return goog.typeOf(G__11767);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._namespace["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj11769 = {};
  return obj11769;
}();
cljs.core.IReset = function() {
  var obj11771 = {};
  return obj11771;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._reset_BANG_[function() {
        var G__11775 = x__4420__auto__;
        return goog.typeOf(G__11775);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj11777 = {};
  return obj11777;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__11787 = x__4420__auto__;
          return goog.typeOf(G__11787);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__11789 = x__4420__auto__;
          return goog.typeOf(G__11789);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__11791 = x__4420__auto__;
          return goog.typeOf(G__11791);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__11793 = x__4420__auto__;
          return goog.typeOf(G__11793);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj11795 = {};
  return obj11795;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._vreset_BANG_[function() {
        var G__11799 = x__4420__auto__;
        return goog.typeOf(G__11799);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj11801 = {};
  return obj11801;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._iterator[function() {
        var G__11805 = x__4420__auto__;
        return goog.typeOf(G__11805);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._iterator["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__11808 = 4294967295;
  var G__11809 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11808, G__11809) : Math.imul.call(null, G__11808, G__11809);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__11812 = a;
    var G__11813 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11812, G__11813) : Math.imul.call(null, G__11812, G__11813);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__11814 = i + 2;
        var G__11815 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__11814;
        h1 = G__11815;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj11817 = {};
  return obj11817;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__11818 = i + 1;
          var G__11819 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__11818;
          hash = G__11819;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj11823 = {};
      return obj11823;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__11826 = o;
    if (G__11826) {
      var bit__4450__auto__ = G__11826.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4450__auto__ || G__11826.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__11827 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11827) : Math.floor.call(null, G__11827);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = cljs.core.not(a.ns);
      if (and__3764__auto__) {
        return b.ns;
      } else {
        return and__3764__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11834 = a.ns;
            var G__11835 = b.ns;
            return goog.array.defaultCompare(G__11834, G__11835);
          }();
          if (0 === nsc) {
            var G__11836 = a.name;
            var G__11837 = b.name;
            return goog.array.defaultCompare(G__11836, G__11837);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11838 = a.name;
        var G__11839 = b.name;
        return goog.array.defaultCompare(G__11838, G__11839);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4197__auto__ = self__._hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__11841 = null;
  var G__11841__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__11841__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__11841 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11841__2.call(this, self__, coll);
      case 3:
        return G__11841__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11841.cljs$core$IFn$_invoke$arity$2 = G__11841__2;
  G__11841.cljs$core$IFn$_invoke$arity$3 = G__11841__3;
  return G__11841;
}();
cljs.core.Symbol.prototype.apply = function(self__, args11840) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11840)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__11889 = null;
  var G__11889__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__11889__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__11889__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__11889__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__11889__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__11889__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__11889__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__11889__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__11889__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__11889__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11889__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11889__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11889__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11889__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11889__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11889__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11889__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11889__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11889__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11889__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11889__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11889__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11845 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__11846 = a;
    var G__11847 = b;
    var G__11848 = c;
    var G__11849 = d;
    var G__11850 = e;
    var G__11851 = f;
    var G__11852 = g;
    var G__11853 = h;
    var G__11854 = i;
    var G__11855 = j;
    var G__11856 = k;
    var G__11857 = l;
    var G__11858 = m;
    var G__11859 = n;
    var G__11860 = o;
    var G__11861 = p;
    var G__11862 = q;
    var G__11863 = r;
    var G__11864 = s;
    var G__11865 = t;
    var G__11866 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11845, G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, G__11865, G__11866) : cljs.core.apply.call(null, G__11845, G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, 
    G__11860, G__11861, G__11862, G__11863, G__11864, G__11865, G__11866);
  };
  G__11889 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11889__1.call(this, self__);
      case 2:
        return G__11889__2.call(this, self__, a);
      case 3:
        return G__11889__3.call(this, self__, a, b);
      case 4:
        return G__11889__4.call(this, self__, a, b, c);
      case 5:
        return G__11889__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11889__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11889__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11889__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11889__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11889__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11889__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11889__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11889__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11889__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11889__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11889__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11889__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11889__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11889__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11889__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11889__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11889__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11889.cljs$core$IFn$_invoke$arity$1 = G__11889__1;
  G__11889.cljs$core$IFn$_invoke$arity$2 = G__11889__2;
  G__11889.cljs$core$IFn$_invoke$arity$3 = G__11889__3;
  G__11889.cljs$core$IFn$_invoke$arity$4 = G__11889__4;
  G__11889.cljs$core$IFn$_invoke$arity$5 = G__11889__5;
  G__11889.cljs$core$IFn$_invoke$arity$6 = G__11889__6;
  G__11889.cljs$core$IFn$_invoke$arity$7 = G__11889__7;
  G__11889.cljs$core$IFn$_invoke$arity$8 = G__11889__8;
  G__11889.cljs$core$IFn$_invoke$arity$9 = G__11889__9;
  G__11889.cljs$core$IFn$_invoke$arity$10 = G__11889__10;
  G__11889.cljs$core$IFn$_invoke$arity$11 = G__11889__11;
  G__11889.cljs$core$IFn$_invoke$arity$12 = G__11889__12;
  G__11889.cljs$core$IFn$_invoke$arity$13 = G__11889__13;
  G__11889.cljs$core$IFn$_invoke$arity$14 = G__11889__14;
  G__11889.cljs$core$IFn$_invoke$arity$15 = G__11889__15;
  G__11889.cljs$core$IFn$_invoke$arity$16 = G__11889__16;
  G__11889.cljs$core$IFn$_invoke$arity$17 = G__11889__17;
  G__11889.cljs$core$IFn$_invoke$arity$18 = G__11889__18;
  G__11889.cljs$core$IFn$_invoke$arity$19 = G__11889__19;
  G__11889.cljs$core$IFn$_invoke$arity$20 = G__11889__20;
  G__11889.cljs$core$IFn$_invoke$arity$21 = G__11889__21;
  G__11889.cljs$core$IFn$_invoke$arity$22 = G__11889__22;
  return G__11889;
}();
cljs.core.Var.prototype.apply = function(self__, args11844) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11844)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__11867 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__11868 = a;
  var G__11869 = b;
  var G__11870 = c;
  var G__11871 = d;
  var G__11872 = e;
  var G__11873 = f;
  var G__11874 = g;
  var G__11875 = h;
  var G__11876 = i;
  var G__11877 = j;
  var G__11878 = k;
  var G__11879 = l;
  var G__11880 = m;
  var G__11881 = n;
  var G__11882 = o;
  var G__11883 = p;
  var G__11884 = q;
  var G__11885 = r;
  var G__11886 = s;
  var G__11887 = t;
  var G__11888 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11867, G__11868, G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875, G__11876, G__11877, G__11878, G__11879, G__11880, G__11881, G__11882, G__11883, G__11884, G__11885, G__11886, G__11887, G__11888) : cljs.core.apply.call(null, G__11867, G__11868, G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875, G__11876, G__11877, G__11878, G__11879, G__11880, G__11881, 
  G__11882, G__11883, G__11884, G__11885, G__11886, G__11887, G__11888);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__11891 = x;
  if (G__11891) {
    var bit__4457__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3776__auto__ = bit__4457__auto__;
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        return G__11891.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__11891.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11891);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11891);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__11893 = value;
  if (G__11893) {
    var bit__4457__auto__ = G__11893.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4457__auto__ || G__11893.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__11893.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11893);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11893);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11895 = coll;
      if (G__11895) {
        var bit__4450__auto__ = G__11895.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4450__auto__ || G__11895.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11897 = coll;
      if (G__11897) {
        var bit__4450__auto__ = G__11897.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4450__auto__ || G__11897.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11899 = coll;
      if (G__11899) {
        var bit__4450__auto__ = G__11899.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4450__auto__ || G__11899.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11901 = coll;
      if (G__11901) {
        var bit__4450__auto__ = G__11901.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4450__auto__ || G__11901.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__11906__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11907 = y;
            var G__11908 = cljs.core.first(more);
            var G__11909 = cljs.core.next(more);
            x = G__11907;
            y = G__11908;
            more = G__11909;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11906 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11910__i = 0, G__11910__a = new Array(arguments.length - 2);
        while (G__11910__i < G__11910__a.length) {
          G__11910__a[G__11910__i] = arguments[G__11910__i + 2];
          ++G__11910__i;
        }
        more = new cljs.core.IndexedSeq(G__11910__a, 0);
      }
      return G__11906__delegate.call(this, x, y, more);
    };
    G__11906.cljs$lang$maxFixedArity = 2;
    G__11906.cljs$lang$applyTo = function(arglist__11911) {
      var x = cljs.core.first(arglist__11911);
      arglist__11911 = cljs.core.next(arglist__11911);
      var y = cljs.core.first(arglist__11911);
      var more = cljs.core.rest(arglist__11911);
      return G__11906__delegate(x, y, more);
    };
    G__11906.cljs$core$IFn$_invoke$arity$variadic = G__11906__delegate;
    return G__11906;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__11912 = null;
        if (arguments.length > 2) {
          var G__11913__i = 0, G__11913__a = new Array(arguments.length - 2);
          while (G__11913__i < G__11913__a.length) {
            G__11913__a[G__11913__i] = arguments[G__11913__i + 2];
            ++G__11913__i;
          }
          G__11912 = new cljs.core.IndexedSeq(G__11913__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11912);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__11914 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11914) : cljs.core.es6_iterator_seq.call(null, G__11914);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11915 = n + 1;
      var G__11916 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11917 = cljs.core.next(coll__$1);
      n = G__11915;
      hash_code = G__11916;
      coll__$1 = G__11917;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11918 = n + 1;
      var G__11919 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11920 = cljs.core.next(coll__$1);
      n = G__11918;
      hash_code = G__11919;
      coll__$1 = G__11920;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__11921 = o;
  return goog.getUid(G__11921);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__11923 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11923) : cljs.core.deref.call(null, G__11923);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11930 = val;
            var G__11931 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11930, G__11931) : f.call(null, G__11930, G__11931);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11936 = nval;
            var G__11937 = n + 1;
            val = G__11936;
            n = G__11937;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11932 = val__$1;
          var G__11933 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11932, G__11933) : f.call(null, G__11932, G__11933);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11938 = nval;
          var G__11939 = n + 1;
          val__$1 = G__11938;
          n = G__11939;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11934 = val__$1;
          var G__11935 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11934, G__11935) : f.call(null, G__11934, G__11935);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11940 = nval;
          var G__11941 = n + 1;
          val__$1 = G__11940;
          n = G__11941;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11948 = val;
            var G__11949 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11948, G__11949) : f.call(null, G__11948, G__11949);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11954 = nval;
            var G__11955 = n + 1;
            val = G__11954;
            n = G__11955;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11950 = val__$1;
          var G__11951 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11950, G__11951) : f.call(null, G__11950, G__11951);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11956 = nval;
          var G__11957 = n + 1;
          val__$1 = G__11956;
          n = G__11957;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11952 = val__$1;
          var G__11953 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11952, G__11953) : f.call(null, G__11952, G__11953);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11958 = nval;
          var G__11959 = n + 1;
          val__$1 = G__11958;
          n = G__11959;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11961 = x;
  if (G__11961) {
    var bit__4457__auto__ = G__11961.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4457__auto__ || G__11961.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__11961.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11961);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11961);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11963 = x;
  if (G__11963) {
    var bit__4457__auto__ = G__11963.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4457__auto__ || G__11963.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__11963.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11963);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11963);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11964 = coll__$1;
  var G__11965 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11964, G__11965) : cljs.core.equiv_sequential.call(null, G__11964, G__11965);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11966 = o;
  var G__11967 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11966, G__11967) : cljs.core.cons.call(null, G__11966, G__11967);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11970 = coll__$1;
  var G__11971 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11970, G__11971) : cljs.core.equiv_sequential.call(null, G__11970, G__11971);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11972 = cljs.core.List.EMPTY;
  var G__11973 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11972, G__11973) : cljs.core.with_meta.call(null, G__11972, G__11973);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__11974 = f;
  var G__11975 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11974, G__11975) : cljs.core.seq_reduce.call(null, G__11974, G__11975);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__11976 = f;
  var G__11977 = start;
  var G__11978 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11976, G__11977, G__11978) : cljs.core.seq_reduce.call(null, G__11976, G__11977, G__11978);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11979 = o;
  var G__11980 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11979, G__11980) : cljs.core.cons.call(null, G__11979, G__11980);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__11981 = sn;
      s = G__11981;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__11986__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__11987 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__11988 = cljs.core.first(xs);
          var G__11989 = cljs.core.next(xs);
          coll = G__11987;
          x = G__11988;
          xs = G__11989;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__11986 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__11990__i = 0, G__11990__a = new Array(arguments.length - 2);
        while (G__11990__i < G__11990__a.length) {
          G__11990__a[G__11990__i] = arguments[G__11990__i + 2];
          ++G__11990__i;
        }
        xs = new cljs.core.IndexedSeq(G__11990__a, 0);
      }
      return G__11986__delegate.call(this, coll, x, xs);
    };
    G__11986.cljs$lang$maxFixedArity = 2;
    G__11986.cljs$lang$applyTo = function(arglist__11991) {
      var coll = cljs.core.first(arglist__11991);
      arglist__11991 = cljs.core.next(arglist__11991);
      var x = cljs.core.first(arglist__11991);
      var xs = cljs.core.rest(arglist__11991);
      return G__11986__delegate(coll, x, xs);
    };
    G__11986.cljs$core$IFn$_invoke$arity$variadic = G__11986__delegate;
    return G__11986;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__11992 = null;
        if (arguments.length > 2) {
          var G__11993__i = 0, G__11993__a = new Array(arguments.length - 2);
          while (G__11993__i < G__11993__a.length) {
            G__11993__a[G__11993__i] = arguments[G__11993__i + 2];
            ++G__11993__i;
          }
          G__11992 = new cljs.core.IndexedSeq(G__11993__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__11992);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__11994 = cljs.core.next(s);
      var G__11995 = acc + 1;
      s = G__11994;
      acc = G__11995;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11997 = coll;
      if (G__11997) {
        var bit__4450__auto__ = G__11997.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4450__auto__ || G__11997.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__11998 = cljs.core.next(coll);
              var G__11999 = n - 1;
              coll = G__11998;
              n = G__11999;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__12000 = cljs.core.next(coll);
              var G__12001 = n - 1;
              var G__12002 = not_found;
              coll = G__12000;
              n = G__12001;
              not_found = G__12002;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__12007 = coll;
          if (G__12007) {
            var bit__4450__auto__ = G__12007.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4450__auto__ || G__12007.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__12008 = coll;
                  if (G__12008) {
                    var bit__4457__auto__ = G__12008.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4457__auto__ || G__12008.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__12008.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12008);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12008);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__12009 = coll;
          if (G__12009) {
            var bit__4450__auto__ = G__12009.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4450__auto__ || G__12009.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__12010 = coll;
                  if (G__12010) {
                    var bit__4457__auto__ = G__12010.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4457__auto__ || G__12010.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__12010.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12010);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12010);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__12011 = n__$1 - 1;
      var G__12012 = cljs.core.rest(xs);
      n__$1 = G__12011;
      xs = G__12012;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__12015 = o;
        if (G__12015) {
          var bit__4450__auto__ = G__12015.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4450__auto__ || G__12015.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__12016 = o;
        if (G__12016) {
          var bit__4450__auto__ = G__12016.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4450__auto__ || G__12016.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__12020__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__12021 = ret;
          var G__12022 = cljs.core.first(kvs);
          var G__12023 = cljs.core.second(kvs);
          var G__12024 = cljs.core.nnext(kvs);
          coll = G__12021;
          k = G__12022;
          v = G__12023;
          kvs = G__12024;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__12020 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__12025__i = 0, G__12025__a = new Array(arguments.length - 3);
        while (G__12025__i < G__12025__a.length) {
          G__12025__a[G__12025__i] = arguments[G__12025__i + 3];
          ++G__12025__i;
        }
        kvs = new cljs.core.IndexedSeq(G__12025__a, 0);
      }
      return G__12020__delegate.call(this, coll, k, v, kvs);
    };
    G__12020.cljs$lang$maxFixedArity = 3;
    G__12020.cljs$lang$applyTo = function(arglist__12026) {
      var coll = cljs.core.first(arglist__12026);
      arglist__12026 = cljs.core.next(arglist__12026);
      var k = cljs.core.first(arglist__12026);
      arglist__12026 = cljs.core.next(arglist__12026);
      var v = cljs.core.first(arglist__12026);
      var kvs = cljs.core.rest(arglist__12026);
      return G__12020__delegate(coll, k, v, kvs);
    };
    G__12020.cljs$core$IFn$_invoke$arity$variadic = G__12020__delegate;
    return G__12020;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__12027 = null;
        if (arguments.length > 3) {
          var G__12028__i = 0, G__12028__a = new Array(arguments.length - 3);
          while (G__12028__i < G__12028__a.length) {
            G__12028__a[G__12028__i] = arguments[G__12028__i + 3];
            ++G__12028__i;
          }
          G__12027 = new cljs.core.IndexedSeq(G__12028__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__12027);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__12031__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12032 = ret;
            var G__12033 = cljs.core.first(ks);
            var G__12034 = cljs.core.next(ks);
            coll = G__12032;
            k = G__12033;
            ks = G__12034;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12031 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12035__i = 0, G__12035__a = new Array(arguments.length - 2);
        while (G__12035__i < G__12035__a.length) {
          G__12035__a[G__12035__i] = arguments[G__12035__i + 2];
          ++G__12035__i;
        }
        ks = new cljs.core.IndexedSeq(G__12035__a, 0);
      }
      return G__12031__delegate.call(this, coll, k, ks);
    };
    G__12031.cljs$lang$maxFixedArity = 2;
    G__12031.cljs$lang$applyTo = function(arglist__12036) {
      var coll = cljs.core.first(arglist__12036);
      arglist__12036 = cljs.core.next(arglist__12036);
      var k = cljs.core.first(arglist__12036);
      var ks = cljs.core.rest(arglist__12036);
      return G__12031__delegate(coll, k, ks);
    };
    G__12031.cljs$core$IFn$_invoke$arity$variadic = G__12031__delegate;
    return G__12031;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__12037 = null;
        if (arguments.length > 2) {
          var G__12038__i = 0, G__12038__a = new Array(arguments.length - 2);
          while (G__12038__i < G__12038__a.length) {
            G__12038__a[G__12038__i] = arguments[G__12038__i + 2];
            ++G__12038__i;
          }
          G__12037 = new cljs.core.IndexedSeq(G__12038__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12037);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3776__auto__ = function() {
    var G__12043 = f;
    return goog.isFunction(G__12043);
  }();
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    var G__12044 = f;
    if (G__12044) {
      var bit__4457__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3776__auto____$1 = bit__4457__auto__;
        if (cljs.core.truth_(or__3776__auto____$1)) {
          return or__3776__auto____$1;
        } else {
          return G__12044.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__12044.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__12044);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__12044);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__12510 = null;
  var G__12510__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__12510__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12046 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12046) : self__.afn.call(null, G__12046);
  };
  var G__12510__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12047 = a;
    var G__12048 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12047, G__12048) : self__.afn.call(null, G__12047, G__12048);
  };
  var G__12510__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12049 = a;
    var G__12050 = b;
    var G__12051 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12049, G__12050, G__12051) : self__.afn.call(null, G__12049, G__12050, G__12051);
  };
  var G__12510__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12052 = a;
    var G__12053 = b;
    var G__12054 = c;
    var G__12055 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12052, G__12053, G__12054, G__12055) : self__.afn.call(null, G__12052, G__12053, G__12054, G__12055);
  };
  var G__12510__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12056 = a;
    var G__12057 = b;
    var G__12058 = c;
    var G__12059 = d;
    var G__12060 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12056, G__12057, G__12058, G__12059, G__12060) : self__.afn.call(null, G__12056, G__12057, G__12058, G__12059, G__12060);
  };
  var G__12510__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12061 = a;
    var G__12062 = b;
    var G__12063 = c;
    var G__12064 = d;
    var G__12065 = e;
    var G__12066 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12061, G__12062, G__12063, G__12064, G__12065, G__12066) : self__.afn.call(null, G__12061, G__12062, G__12063, G__12064, G__12065, G__12066);
  };
  var G__12510__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12067 = a;
    var G__12068 = b;
    var G__12069 = c;
    var G__12070 = d;
    var G__12071 = e;
    var G__12072 = f;
    var G__12073 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12067, G__12068, G__12069, G__12070, G__12071, G__12072, G__12073) : self__.afn.call(null, G__12067, G__12068, G__12069, G__12070, G__12071, G__12072, G__12073);
  };
  var G__12510__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12074 = a;
    var G__12075 = b;
    var G__12076 = c;
    var G__12077 = d;
    var G__12078 = e;
    var G__12079 = f;
    var G__12080 = g;
    var G__12081 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12074, G__12075, G__12076, G__12077, G__12078, G__12079, G__12080, G__12081) : self__.afn.call(null, G__12074, G__12075, G__12076, G__12077, G__12078, G__12079, G__12080, G__12081);
  };
  var G__12510__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12082 = a;
    var G__12083 = b;
    var G__12084 = c;
    var G__12085 = d;
    var G__12086 = e;
    var G__12087 = f;
    var G__12088 = g;
    var G__12089 = h;
    var G__12090 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090) : self__.afn.call(null, G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090);
  };
  var G__12510__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12091 = a;
    var G__12092 = b;
    var G__12093 = c;
    var G__12094 = d;
    var G__12095 = e;
    var G__12096 = f;
    var G__12097 = g;
    var G__12098 = h;
    var G__12099 = i;
    var G__12100 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099, G__12100) : self__.afn.call(null, G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099, G__12100);
  };
  var G__12510__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12101 = a;
    var G__12102 = b;
    var G__12103 = c;
    var G__12104 = d;
    var G__12105 = e;
    var G__12106 = f;
    var G__12107 = g;
    var G__12108 = h;
    var G__12109 = i;
    var G__12110 = j;
    var G__12111 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109, G__12110, G__12111) : self__.afn.call(null, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109, G__12110, G__12111);
  };
  var G__12510__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12112 = a;
    var G__12113 = b;
    var G__12114 = c;
    var G__12115 = d;
    var G__12116 = e;
    var G__12117 = f;
    var G__12118 = g;
    var G__12119 = h;
    var G__12120 = i;
    var G__12121 = j;
    var G__12122 = k;
    var G__12123 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12112, G__12113, G__12114, G__12115, G__12116, G__12117, G__12118, G__12119, G__12120, G__12121, G__12122, G__12123) : self__.afn.call(null, G__12112, G__12113, G__12114, G__12115, G__12116, G__12117, G__12118, G__12119, G__12120, G__12121, G__12122, G__12123);
  };
  var G__12510__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12124 = a;
    var G__12125 = b;
    var G__12126 = c;
    var G__12127 = d;
    var G__12128 = e;
    var G__12129 = f;
    var G__12130 = g;
    var G__12131 = h;
    var G__12132 = i;
    var G__12133 = j;
    var G__12134 = k;
    var G__12135 = l;
    var G__12136 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12124, G__12125, G__12126, G__12127, G__12128, G__12129, G__12130, G__12131, G__12132, G__12133, G__12134, G__12135, G__12136) : self__.afn.call(null, G__12124, G__12125, G__12126, G__12127, G__12128, G__12129, G__12130, G__12131, G__12132, G__12133, G__12134, G__12135, G__12136);
  };
  var G__12510__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12137 = a;
    var G__12138 = b;
    var G__12139 = c;
    var G__12140 = d;
    var G__12141 = e;
    var G__12142 = f;
    var G__12143 = g;
    var G__12144 = h;
    var G__12145 = i;
    var G__12146 = j;
    var G__12147 = k;
    var G__12148 = l;
    var G__12149 = m;
    var G__12150 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12137, G__12138, G__12139, G__12140, G__12141, G__12142, G__12143, G__12144, G__12145, G__12146, G__12147, G__12148, G__12149, G__12150) : self__.afn.call(null, G__12137, G__12138, G__12139, G__12140, G__12141, G__12142, G__12143, G__12144, G__12145, G__12146, G__12147, G__12148, G__12149, G__12150);
  };
  var G__12510__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12151 = a;
    var G__12152 = b;
    var G__12153 = c;
    var G__12154 = d;
    var G__12155 = e;
    var G__12156 = f;
    var G__12157 = g;
    var G__12158 = h;
    var G__12159 = i;
    var G__12160 = j;
    var G__12161 = k;
    var G__12162 = l;
    var G__12163 = m;
    var G__12164 = n;
    var G__12165 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12151, G__12152, G__12153, G__12154, G__12155, G__12156, G__12157, G__12158, G__12159, G__12160, G__12161, G__12162, G__12163, G__12164, G__12165) : self__.afn.call(null, G__12151, G__12152, G__12153, G__12154, G__12155, G__12156, G__12157, G__12158, G__12159, G__12160, G__12161, G__12162, G__12163, G__12164, G__12165);
  };
  var G__12510__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12166 = a;
    var G__12167 = b;
    var G__12168 = c;
    var G__12169 = d;
    var G__12170 = e;
    var G__12171 = f;
    var G__12172 = g;
    var G__12173 = h;
    var G__12174 = i;
    var G__12175 = j;
    var G__12176 = k;
    var G__12177 = l;
    var G__12178 = m;
    var G__12179 = n;
    var G__12180 = o;
    var G__12181 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12166, G__12167, G__12168, G__12169, G__12170, G__12171, G__12172, G__12173, G__12174, G__12175, G__12176, G__12177, G__12178, G__12179, G__12180, G__12181) : self__.afn.call(null, G__12166, G__12167, G__12168, G__12169, G__12170, G__12171, G__12172, G__12173, G__12174, G__12175, G__12176, G__12177, G__12178, G__12179, G__12180, G__12181);
  };
  var G__12510__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12182 = a;
    var G__12183 = b;
    var G__12184 = c;
    var G__12185 = d;
    var G__12186 = e;
    var G__12187 = f;
    var G__12188 = g;
    var G__12189 = h;
    var G__12190 = i;
    var G__12191 = j;
    var G__12192 = k;
    var G__12193 = l;
    var G__12194 = m;
    var G__12195 = n;
    var G__12196 = o;
    var G__12197 = p;
    var G__12198 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188, G__12189, G__12190, G__12191, G__12192, G__12193, G__12194, G__12195, G__12196, G__12197, G__12198) : self__.afn.call(null, G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188, G__12189, G__12190, G__12191, G__12192, G__12193, G__12194, G__12195, G__12196, G__12197, G__12198);
  };
  var G__12510__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12199 = a;
    var G__12200 = b;
    var G__12201 = c;
    var G__12202 = d;
    var G__12203 = e;
    var G__12204 = f;
    var G__12205 = g;
    var G__12206 = h;
    var G__12207 = i;
    var G__12208 = j;
    var G__12209 = k;
    var G__12210 = l;
    var G__12211 = m;
    var G__12212 = n;
    var G__12213 = o;
    var G__12214 = p;
    var G__12215 = q;
    var G__12216 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205, G__12206, G__12207, G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215, G__12216) : self__.afn.call(null, G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205, G__12206, G__12207, G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215, G__12216);
  };
  var G__12510__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12217 = a;
    var G__12218 = b;
    var G__12219 = c;
    var G__12220 = d;
    var G__12221 = e;
    var G__12222 = f;
    var G__12223 = g;
    var G__12224 = h;
    var G__12225 = i;
    var G__12226 = j;
    var G__12227 = k;
    var G__12228 = l;
    var G__12229 = m;
    var G__12230 = n;
    var G__12231 = o;
    var G__12232 = p;
    var G__12233 = q;
    var G__12234 = r;
    var G__12235 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12217, G__12218, G__12219, G__12220, G__12221, G__12222, G__12223, G__12224, G__12225, G__12226, G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234, G__12235) : self__.afn.call(null, G__12217, G__12218, G__12219, G__12220, G__12221, G__12222, G__12223, G__12224, G__12225, G__12226, G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234, G__12235);
  };
  var G__12510__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12236 = a;
    var G__12237 = b;
    var G__12238 = c;
    var G__12239 = d;
    var G__12240 = e;
    var G__12241 = f;
    var G__12242 = g;
    var G__12243 = h;
    var G__12244 = i;
    var G__12245 = j;
    var G__12246 = k;
    var G__12247 = l;
    var G__12248 = m;
    var G__12249 = n;
    var G__12250 = o;
    var G__12251 = p;
    var G__12252 = q;
    var G__12253 = r;
    var G__12254 = s;
    var G__12255 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12236, G__12237, G__12238, G__12239, G__12240, G__12241, G__12242, G__12243, G__12244, G__12245, G__12246, G__12247, G__12248, G__12249, G__12250, G__12251, G__12252, G__12253, G__12254, G__12255) : self__.afn.call(null, G__12236, G__12237, G__12238, G__12239, G__12240, G__12241, G__12242, G__12243, G__12244, G__12245, G__12246, G__12247, G__12248, G__12249, G__12250, G__12251, G__12252, G__12253, 
    G__12254, G__12255);
  };
  var G__12510__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12256 = self__.afn;
    var G__12257 = a;
    var G__12258 = b;
    var G__12259 = c;
    var G__12260 = d;
    var G__12261 = e;
    var G__12262 = f;
    var G__12263 = g;
    var G__12264 = h;
    var G__12265 = i;
    var G__12266 = j;
    var G__12267 = k;
    var G__12268 = l;
    var G__12269 = m;
    var G__12270 = n;
    var G__12271 = o;
    var G__12272 = p;
    var G__12273 = q;
    var G__12274 = r;
    var G__12275 = s;
    var G__12276 = t;
    var G__12277 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264, G__12265, G__12266, G__12267, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277) : cljs.core.apply.call(null, G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264, G__12265, G__12266, G__12267, G__12268, G__12269, G__12270, 
    G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277);
  };
  G__12510 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12510__1.call(this, self__);
      case 2:
        return G__12510__2.call(this, self__, a);
      case 3:
        return G__12510__3.call(this, self__, a, b);
      case 4:
        return G__12510__4.call(this, self__, a, b, c);
      case 5:
        return G__12510__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12510__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12510__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12510__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12510__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12510__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12510__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12510__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12510__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12510__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12510__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12510__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12510__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12510__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12510__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12510__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12510__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12510__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12510.cljs$core$IFn$_invoke$arity$1 = G__12510__1;
  G__12510.cljs$core$IFn$_invoke$arity$2 = G__12510__2;
  G__12510.cljs$core$IFn$_invoke$arity$3 = G__12510__3;
  G__12510.cljs$core$IFn$_invoke$arity$4 = G__12510__4;
  G__12510.cljs$core$IFn$_invoke$arity$5 = G__12510__5;
  G__12510.cljs$core$IFn$_invoke$arity$6 = G__12510__6;
  G__12510.cljs$core$IFn$_invoke$arity$7 = G__12510__7;
  G__12510.cljs$core$IFn$_invoke$arity$8 = G__12510__8;
  G__12510.cljs$core$IFn$_invoke$arity$9 = G__12510__9;
  G__12510.cljs$core$IFn$_invoke$arity$10 = G__12510__10;
  G__12510.cljs$core$IFn$_invoke$arity$11 = G__12510__11;
  G__12510.cljs$core$IFn$_invoke$arity$12 = G__12510__12;
  G__12510.cljs$core$IFn$_invoke$arity$13 = G__12510__13;
  G__12510.cljs$core$IFn$_invoke$arity$14 = G__12510__14;
  G__12510.cljs$core$IFn$_invoke$arity$15 = G__12510__15;
  G__12510.cljs$core$IFn$_invoke$arity$16 = G__12510__16;
  G__12510.cljs$core$IFn$_invoke$arity$17 = G__12510__17;
  G__12510.cljs$core$IFn$_invoke$arity$18 = G__12510__18;
  G__12510.cljs$core$IFn$_invoke$arity$19 = G__12510__19;
  G__12510.cljs$core$IFn$_invoke$arity$20 = G__12510__20;
  G__12510.cljs$core$IFn$_invoke$arity$21 = G__12510__21;
  G__12510.cljs$core$IFn$_invoke$arity$22 = G__12510__22;
  return G__12510;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args12045) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12045)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__12278 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12278) : self__.afn.call(null, G__12278);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__12279 = a;
  var G__12280 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12279, G__12280) : self__.afn.call(null, G__12279, G__12280);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__12281 = a;
  var G__12282 = b;
  var G__12283 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12281, G__12282, G__12283) : self__.afn.call(null, G__12281, G__12282, G__12283);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__12284 = a;
  var G__12285 = b;
  var G__12286 = c;
  var G__12287 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12284, G__12285, G__12286, G__12287) : self__.afn.call(null, G__12284, G__12285, G__12286, G__12287);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__12288 = a;
  var G__12289 = b;
  var G__12290 = c;
  var G__12291 = d;
  var G__12292 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12288, G__12289, G__12290, G__12291, G__12292) : self__.afn.call(null, G__12288, G__12289, G__12290, G__12291, G__12292);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__12293 = a;
  var G__12294 = b;
  var G__12295 = c;
  var G__12296 = d;
  var G__12297 = e;
  var G__12298 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12293, G__12294, G__12295, G__12296, G__12297, G__12298) : self__.afn.call(null, G__12293, G__12294, G__12295, G__12296, G__12297, G__12298);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__12299 = a;
  var G__12300 = b;
  var G__12301 = c;
  var G__12302 = d;
  var G__12303 = e;
  var G__12304 = f;
  var G__12305 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12299, G__12300, G__12301, G__12302, G__12303, G__12304, G__12305) : self__.afn.call(null, G__12299, G__12300, G__12301, G__12302, G__12303, G__12304, G__12305);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__12306 = a;
  var G__12307 = b;
  var G__12308 = c;
  var G__12309 = d;
  var G__12310 = e;
  var G__12311 = f;
  var G__12312 = g;
  var G__12313 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12306, G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313) : self__.afn.call(null, G__12306, G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__12314 = a;
  var G__12315 = b;
  var G__12316 = c;
  var G__12317 = d;
  var G__12318 = e;
  var G__12319 = f;
  var G__12320 = g;
  var G__12321 = h;
  var G__12322 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12314, G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322) : self__.afn.call(null, G__12314, G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__12323 = a;
  var G__12324 = b;
  var G__12325 = c;
  var G__12326 = d;
  var G__12327 = e;
  var G__12328 = f;
  var G__12329 = g;
  var G__12330 = h;
  var G__12331 = i;
  var G__12332 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331, G__12332) : self__.afn.call(null, G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331, G__12332);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__12333 = a;
  var G__12334 = b;
  var G__12335 = c;
  var G__12336 = d;
  var G__12337 = e;
  var G__12338 = f;
  var G__12339 = g;
  var G__12340 = h;
  var G__12341 = i;
  var G__12342 = j;
  var G__12343 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341, G__12342, G__12343) : self__.afn.call(null, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341, G__12342, G__12343);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__12344 = a;
  var G__12345 = b;
  var G__12346 = c;
  var G__12347 = d;
  var G__12348 = e;
  var G__12349 = f;
  var G__12350 = g;
  var G__12351 = h;
  var G__12352 = i;
  var G__12353 = j;
  var G__12354 = k;
  var G__12355 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12344, G__12345, G__12346, G__12347, G__12348, G__12349, G__12350, G__12351, G__12352, G__12353, G__12354, G__12355) : self__.afn.call(null, G__12344, G__12345, G__12346, G__12347, G__12348, G__12349, G__12350, G__12351, G__12352, G__12353, G__12354, G__12355);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__12356 = a;
  var G__12357 = b;
  var G__12358 = c;
  var G__12359 = d;
  var G__12360 = e;
  var G__12361 = f;
  var G__12362 = g;
  var G__12363 = h;
  var G__12364 = i;
  var G__12365 = j;
  var G__12366 = k;
  var G__12367 = l;
  var G__12368 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364, G__12365, G__12366, G__12367, G__12368) : self__.afn.call(null, G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364, G__12365, G__12366, G__12367, G__12368);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__12369 = a;
  var G__12370 = b;
  var G__12371 = c;
  var G__12372 = d;
  var G__12373 = e;
  var G__12374 = f;
  var G__12375 = g;
  var G__12376 = h;
  var G__12377 = i;
  var G__12378 = j;
  var G__12379 = k;
  var G__12380 = l;
  var G__12381 = m;
  var G__12382 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377, G__12378, G__12379, G__12380, G__12381, G__12382) : self__.afn.call(null, G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377, G__12378, G__12379, G__12380, G__12381, G__12382);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__12383 = a;
  var G__12384 = b;
  var G__12385 = c;
  var G__12386 = d;
  var G__12387 = e;
  var G__12388 = f;
  var G__12389 = g;
  var G__12390 = h;
  var G__12391 = i;
  var G__12392 = j;
  var G__12393 = k;
  var G__12394 = l;
  var G__12395 = m;
  var G__12396 = n;
  var G__12397 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12383, G__12384, G__12385, G__12386, G__12387, G__12388, G__12389, G__12390, G__12391, G__12392, G__12393, G__12394, G__12395, G__12396, G__12397) : self__.afn.call(null, G__12383, G__12384, G__12385, G__12386, G__12387, G__12388, G__12389, G__12390, G__12391, G__12392, G__12393, G__12394, G__12395, G__12396, G__12397);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__12398 = a;
  var G__12399 = b;
  var G__12400 = c;
  var G__12401 = d;
  var G__12402 = e;
  var G__12403 = f;
  var G__12404 = g;
  var G__12405 = h;
  var G__12406 = i;
  var G__12407 = j;
  var G__12408 = k;
  var G__12409 = l;
  var G__12410 = m;
  var G__12411 = n;
  var G__12412 = o;
  var G__12413 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12398, G__12399, G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406, G__12407, G__12408, G__12409, G__12410, G__12411, G__12412, G__12413) : self__.afn.call(null, G__12398, G__12399, G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406, G__12407, G__12408, G__12409, G__12410, G__12411, G__12412, G__12413);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__12414 = a;
  var G__12415 = b;
  var G__12416 = c;
  var G__12417 = d;
  var G__12418 = e;
  var G__12419 = f;
  var G__12420 = g;
  var G__12421 = h;
  var G__12422 = i;
  var G__12423 = j;
  var G__12424 = k;
  var G__12425 = l;
  var G__12426 = m;
  var G__12427 = n;
  var G__12428 = o;
  var G__12429 = p;
  var G__12430 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12414, G__12415, G__12416, G__12417, G__12418, G__12419, G__12420, G__12421, G__12422, G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430) : self__.afn.call(null, G__12414, G__12415, G__12416, G__12417, G__12418, G__12419, G__12420, G__12421, G__12422, G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__12431 = a;
  var G__12432 = b;
  var G__12433 = c;
  var G__12434 = d;
  var G__12435 = e;
  var G__12436 = f;
  var G__12437 = g;
  var G__12438 = h;
  var G__12439 = i;
  var G__12440 = j;
  var G__12441 = k;
  var G__12442 = l;
  var G__12443 = m;
  var G__12444 = n;
  var G__12445 = o;
  var G__12446 = p;
  var G__12447 = q;
  var G__12448 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12431, G__12432, G__12433, G__12434, G__12435, G__12436, G__12437, G__12438, G__12439, G__12440, G__12441, G__12442, G__12443, G__12444, G__12445, G__12446, G__12447, G__12448) : self__.afn.call(null, G__12431, G__12432, G__12433, G__12434, G__12435, G__12436, G__12437, G__12438, G__12439, G__12440, G__12441, G__12442, G__12443, G__12444, G__12445, G__12446, G__12447, G__12448);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__12449 = a;
  var G__12450 = b;
  var G__12451 = c;
  var G__12452 = d;
  var G__12453 = e;
  var G__12454 = f;
  var G__12455 = g;
  var G__12456 = h;
  var G__12457 = i;
  var G__12458 = j;
  var G__12459 = k;
  var G__12460 = l;
  var G__12461 = m;
  var G__12462 = n;
  var G__12463 = o;
  var G__12464 = p;
  var G__12465 = q;
  var G__12466 = r;
  var G__12467 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12449, G__12450, G__12451, G__12452, G__12453, G__12454, G__12455, G__12456, G__12457, G__12458, G__12459, G__12460, G__12461, G__12462, G__12463, G__12464, G__12465, G__12466, G__12467) : self__.afn.call(null, G__12449, G__12450, G__12451, G__12452, G__12453, G__12454, G__12455, G__12456, G__12457, G__12458, G__12459, G__12460, G__12461, G__12462, G__12463, G__12464, G__12465, G__12466, G__12467);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__12468 = a;
  var G__12469 = b;
  var G__12470 = c;
  var G__12471 = d;
  var G__12472 = e;
  var G__12473 = f;
  var G__12474 = g;
  var G__12475 = h;
  var G__12476 = i;
  var G__12477 = j;
  var G__12478 = k;
  var G__12479 = l;
  var G__12480 = m;
  var G__12481 = n;
  var G__12482 = o;
  var G__12483 = p;
  var G__12484 = q;
  var G__12485 = r;
  var G__12486 = s;
  var G__12487 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12468, G__12469, G__12470, G__12471, G__12472, G__12473, G__12474, G__12475, G__12476, G__12477, G__12478, G__12479, G__12480, G__12481, G__12482, G__12483, G__12484, G__12485, G__12486, G__12487) : self__.afn.call(null, G__12468, G__12469, G__12470, G__12471, G__12472, G__12473, G__12474, G__12475, G__12476, G__12477, G__12478, G__12479, G__12480, G__12481, G__12482, G__12483, G__12484, G__12485, G__12486, 
  G__12487);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__12488 = self__.afn;
  var G__12489 = a;
  var G__12490 = b;
  var G__12491 = c;
  var G__12492 = d;
  var G__12493 = e;
  var G__12494 = f;
  var G__12495 = g;
  var G__12496 = h;
  var G__12497 = i;
  var G__12498 = j;
  var G__12499 = k;
  var G__12500 = l;
  var G__12501 = m;
  var G__12502 = n;
  var G__12503 = o;
  var G__12504 = p;
  var G__12505 = q;
  var G__12506 = r;
  var G__12507 = s;
  var G__12508 = t;
  var G__12509 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12488, G__12489, G__12490, G__12491, G__12492, G__12493, G__12494, G__12495, G__12496, G__12497, G__12498, G__12499, G__12500, G__12501, G__12502, G__12503, G__12504, G__12505, G__12506, G__12507, G__12508, G__12509) : cljs.core.apply.call(null, G__12488, G__12489, G__12490, G__12491, G__12492, G__12493, G__12494, G__12495, G__12496, G__12497, G__12498, G__12499, G__12500, G__12501, G__12502, 
  G__12503, G__12504, G__12505, G__12506, G__12507, G__12508, G__12509);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__12514 = o;
    if (G__12514) {
      var bit__4457__auto__ = G__12514.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4457__auto__ || G__12514.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__12514.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12514);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12514);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3764__auto__ = !(o == null);
    if (and__3764__auto__) {
      var G__12518 = o;
      if (G__12518) {
        var bit__4457__auto__ = G__12518.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4457__auto__ || G__12518.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__12518.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12518);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12518);
      }
    } else {
      return and__3764__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__12521__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12522 = ret;
            var G__12523 = cljs.core.first(ks);
            var G__12524 = cljs.core.next(ks);
            coll = G__12522;
            k = G__12523;
            ks = G__12524;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12521 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12525__i = 0, G__12525__a = new Array(arguments.length - 2);
        while (G__12525__i < G__12525__a.length) {
          G__12525__a[G__12525__i] = arguments[G__12525__i + 2];
          ++G__12525__i;
        }
        ks = new cljs.core.IndexedSeq(G__12525__a, 0);
      }
      return G__12521__delegate.call(this, coll, k, ks);
    };
    G__12521.cljs$lang$maxFixedArity = 2;
    G__12521.cljs$lang$applyTo = function(arglist__12526) {
      var coll = cljs.core.first(arglist__12526);
      arglist__12526 = cljs.core.next(arglist__12526);
      var k = cljs.core.first(arglist__12526);
      var ks = cljs.core.rest(arglist__12526);
      return G__12521__delegate(coll, k, ks);
    };
    G__12521.cljs$core$IFn$_invoke$arity$variadic = G__12521__delegate;
    return G__12521;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__12527 = null;
        if (arguments.length > 2) {
          var G__12528__i = 0, G__12528__a = new Array(arguments.length - 2);
          while (G__12528__i < G__12528__a.length) {
            G__12528__a[G__12528__i] = arguments[G__12528__i + 2];
            ++G__12528__i;
          }
          G__12527 = new cljs.core.IndexedSeq(G__12528__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12527);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12530 = x;
    if (G__12530) {
      var bit__4457__auto__ = G__12530.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4457__auto__ || G__12530.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__12530.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12530);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12530);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12532 = x;
    if (G__12532) {
      var bit__4457__auto__ = G__12532.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4457__auto__ || G__12532.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__12532.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12532);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12532);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12534 = x;
  if (G__12534) {
    var bit__4457__auto__ = G__12534.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4457__auto__ || G__12534.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__12534.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12534);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12534);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12536 = x;
  if (G__12536) {
    var bit__4457__auto__ = G__12536.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4457__auto__ || G__12536.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__12536.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12536);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12536);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__12538 = x;
  if (G__12538) {
    var bit__4457__auto__ = G__12538.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4457__auto__ || G__12538.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__12538.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12538);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12538);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12540 = x;
  if (G__12540) {
    var bit__4457__auto__ = G__12540.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4457__auto__ || G__12540.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__12540.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12540);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12540);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12542 = x;
    if (G__12542) {
      var bit__4457__auto__ = G__12542.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4457__auto__ || G__12542.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__12542.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12542);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12542);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12544 = x;
  if (G__12544) {
    var bit__4457__auto__ = G__12544.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4457__auto__ || G__12544.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__12544.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12544);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12544);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12546 = x;
  if (G__12546) {
    var bit__4450__auto__ = G__12546.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4450__auto__ || G__12546.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj12552 = {};
    return obj12552;
  };
  var js_obj__1 = function() {
    var G__12555__delegate = function(keyvals) {
      var G__12553 = goog.object.create;
      var G__12554 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12553, G__12554) : cljs.core.apply.call(null, G__12553, G__12554);
    };
    var G__12555 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__12556__i = 0, G__12556__a = new Array(arguments.length - 0);
        while (G__12556__i < G__12556__a.length) {
          G__12556__a[G__12556__i] = arguments[G__12556__i + 0];
          ++G__12556__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__12556__a, 0);
      }
      return G__12555__delegate.call(this, keyvals);
    };
    G__12555.cljs$lang$maxFixedArity = 0;
    G__12555.cljs$lang$applyTo = function(arglist__12557) {
      var keyvals = cljs.core.seq(arglist__12557);
      return G__12555__delegate(keyvals);
    };
    G__12555.cljs$core$IFn$_invoke$arity$variadic = G__12555__delegate;
    return G__12555;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__12558 = null;
        if (arguments.length > 0) {
          var G__12559__i = 0, G__12559__a = new Array(arguments.length - 0);
          while (G__12559__i < G__12559__a.length) {
            G__12559__a[G__12559__i] = arguments[G__12559__i + 0];
            ++G__12559__i;
          }
          G__12558 = new cljs.core.IndexedSeq(G__12559__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12558);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__12562_12564 = obj;
  var G__12563_12565 = function(G__12562_12564, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__12562_12564, keys);
  goog.object.forEach(G__12562_12564, G__12563_12565);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12566 = i__$1 + 1;
      var G__12567 = j__$1 + 1;
      var G__12568 = len__$1 - 1;
      i__$1 = G__12566;
      j__$1 = G__12567;
      len__$1 = G__12568;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12569 = i__$1 - 1;
      var G__12570 = j__$1 - 1;
      var G__12571 = len__$1 - 1;
      i__$1 = G__12569;
      j__$1 = G__12570;
      len__$1 = G__12571;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj12573 = {};
  return obj12573;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__12575 = s;
    if (G__12575) {
      var bit__4457__auto__ = G__12575.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4457__auto__ || G__12575.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__12575.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12575);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12575);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12577 = s;
  if (G__12577) {
    var bit__4457__auto__ = G__12577.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4457__auto__ || G__12577.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__12577.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12577);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12577);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3776__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3776__auto__) {
    return or__3776__auto__;
  } else {
    var G__12581 = f;
    if (G__12581) {
      var bit__4457__auto__ = G__12581.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4457__auto__ || G__12581.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__12581.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12581);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12581);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__12594 = n;
    return isNaN(G__12594);
  }()) && !(n === Infinity) && function() {
    var G__12595 = n;
    return parseFloat(G__12595);
  }() === function() {
    var G__12596 = n;
    var G__12597 = 10;
    return parseInt(G__12596, G__12597);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__12598__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__12599 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__12600 = etc;
              s = G__12599;
              xs = G__12600;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__12598 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12601__i = 0, G__12601__a = new Array(arguments.length - 2);
        while (G__12601__i < G__12601__a.length) {
          G__12601__a[G__12601__i] = arguments[G__12601__i + 2];
          ++G__12601__i;
        }
        more = new cljs.core.IndexedSeq(G__12601__a, 0);
      }
      return G__12598__delegate.call(this, x, y, more);
    };
    G__12598.cljs$lang$maxFixedArity = 2;
    G__12598.cljs$lang$applyTo = function(arglist__12602) {
      var x = cljs.core.first(arglist__12602);
      arglist__12602 = cljs.core.next(arglist__12602);
      var y = cljs.core.first(arglist__12602);
      var more = cljs.core.rest(arglist__12602);
      return G__12598__delegate(x, y, more);
    };
    G__12598.cljs$core$IFn$_invoke$arity$variadic = G__12598__delegate;
    return G__12598;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__12603 = null;
        if (arguments.length > 2) {
          var G__12604__i = 0, G__12604__a = new Array(arguments.length - 2);
          while (G__12604__i < G__12604__a.length) {
            G__12604__a[G__12604__i] = arguments[G__12604__i + 2];
            ++G__12604__i;
          }
          G__12603 = new cljs.core.IndexedSeq(G__12604__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12603);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__12608 = x;
            if (G__12608) {
              var bit__4450__auto__ = G__12608.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4450__auto__ || G__12608.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__12609 = x;
            var G__12610 = y;
            return goog.array.defaultCompare(G__12609, G__12610);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__12615 = xs;
        var G__12616 = ys;
        var G__12617 = len;
        var G__12618 = n + 1;
        xs = G__12615;
        ys = G__12616;
        len = G__12617;
        n = G__12618;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__12623 = x;
        var G__12624 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12623, G__12624) : f.call(null, G__12623, G__12624);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__12625 = y;
            var G__12626 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12625, G__12626) : f.call(null, G__12625, G__12626);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__12632 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12632) : cljs.core.to_array.call(null, G__12632);
      }();
      var G__12633_12635 = a;
      var G__12634_12636 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__12633_12635, G__12634_12636);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__12642 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12642) : keyfn.call(null, G__12642);
      }(), function() {
        var G__12643 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12643) : keyfn.call(null, G__12643);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__12649 = f;
      var G__12650 = cljs.core.first(s);
      var G__12651 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12649, G__12650, G__12651) : cljs.core.reduce.call(null, G__12649, G__12650, G__12651);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__12652 = val__$1;
          var G__12653 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12652, G__12653) : f.call(null, G__12652, G__12653);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12654 = nval;
          var G__12655 = cljs.core.next(coll__$1);
          val__$1 = G__12654;
          coll__$1 = G__12655;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__12659 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12659) : cljs.core.to_array.call(null, G__12659);
  }();
  var G__12660_12662 = a;
  goog.array.shuffle(G__12660_12662);
  var G__12661 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12661) : cljs.core.vec.call(null, G__12661);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__12665 = coll;
      if (G__12665) {
        var bit__4450__auto__ = G__12665.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4450__auto__ || G__12665.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__12666 = coll;
      if (G__12666) {
        var bit__4450__auto__ = G__12666.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4450__auto__ || G__12666.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__12675 = null;
      var G__12675__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__12675__1 = function(x) {
        var G__12672 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12672) : cf.call(null, G__12672);
      };
      var G__12675__2 = function(x, y) {
        var G__12673 = x;
        var G__12674 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12673, G__12674) : f.call(null, G__12673, G__12674);
      };
      G__12675 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__12675__0.call(this);
          case 1:
            return G__12675__1.call(this, x);
          case 2:
            return G__12675__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12675.cljs$core$IFn$_invoke$arity$0 = G__12675__0;
      G__12675.cljs$core$IFn$_invoke$arity$1 = G__12675__1;
      G__12675.cljs$core$IFn$_invoke$arity$2 = G__12675__2;
      return G__12675;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__12682 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12682) : xform.call(null, G__12682);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__12683 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12683) : f__$1.call(null, G__12683);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__12684__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__12684 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12685__i = 0, G__12685__a = new Array(arguments.length - 2);
        while (G__12685__i < G__12685__a.length) {
          G__12685__a[G__12685__i] = arguments[G__12685__i + 2];
          ++G__12685__i;
        }
        more = new cljs.core.IndexedSeq(G__12685__a, 0);
      }
      return G__12684__delegate.call(this, x, y, more);
    };
    G__12684.cljs$lang$maxFixedArity = 2;
    G__12684.cljs$lang$applyTo = function(arglist__12686) {
      var x = cljs.core.first(arglist__12686);
      arglist__12686 = cljs.core.next(arglist__12686);
      var y = cljs.core.first(arglist__12686);
      var more = cljs.core.rest(arglist__12686);
      return G__12684__delegate(x, y, more);
    };
    G__12684.cljs$core$IFn$_invoke$arity$variadic = G__12684__delegate;
    return G__12684;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__12687 = null;
        if (arguments.length > 2) {
          var G__12688__i = 0, G__12688__a = new Array(arguments.length - 2);
          while (G__12688__i < G__12688__a.length) {
            G__12688__a[G__12688__i] = arguments[G__12688__i + 2];
            ++G__12688__i;
          }
          G__12687 = new cljs.core.IndexedSeq(G__12688__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12687);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__12689__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__12689 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12690__i = 0, G__12690__a = new Array(arguments.length - 2);
        while (G__12690__i < G__12690__a.length) {
          G__12690__a[G__12690__i] = arguments[G__12690__i + 2];
          ++G__12690__i;
        }
        more = new cljs.core.IndexedSeq(G__12690__a, 0);
      }
      return G__12689__delegate.call(this, x, y, more);
    };
    G__12689.cljs$lang$maxFixedArity = 2;
    G__12689.cljs$lang$applyTo = function(arglist__12691) {
      var x = cljs.core.first(arglist__12691);
      arglist__12691 = cljs.core.next(arglist__12691);
      var y = cljs.core.first(arglist__12691);
      var more = cljs.core.rest(arglist__12691);
      return G__12689__delegate(x, y, more);
    };
    G__12689.cljs$core$IFn$_invoke$arity$variadic = G__12689__delegate;
    return G__12689;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__12692 = null;
        if (arguments.length > 2) {
          var G__12693__i = 0, G__12693__a = new Array(arguments.length - 2);
          while (G__12693__i < G__12693__a.length) {
            G__12693__a[G__12693__i] = arguments[G__12693__i + 2];
            ++G__12693__i;
          }
          G__12692 = new cljs.core.IndexedSeq(G__12693__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12692);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__12694__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__12694 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12695__i = 0, G__12695__a = new Array(arguments.length - 2);
        while (G__12695__i < G__12695__a.length) {
          G__12695__a[G__12695__i] = arguments[G__12695__i + 2];
          ++G__12695__i;
        }
        more = new cljs.core.IndexedSeq(G__12695__a, 0);
      }
      return G__12694__delegate.call(this, x, y, more);
    };
    G__12694.cljs$lang$maxFixedArity = 2;
    G__12694.cljs$lang$applyTo = function(arglist__12696) {
      var x = cljs.core.first(arglist__12696);
      arglist__12696 = cljs.core.next(arglist__12696);
      var y = cljs.core.first(arglist__12696);
      var more = cljs.core.rest(arglist__12696);
      return G__12694__delegate(x, y, more);
    };
    G__12694.cljs$core$IFn$_invoke$arity$variadic = G__12694__delegate;
    return G__12694;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__12697 = null;
        if (arguments.length > 2) {
          var G__12698__i = 0, G__12698__a = new Array(arguments.length - 2);
          while (G__12698__i < G__12698__a.length) {
            G__12698__a[G__12698__i] = arguments[G__12698__i + 2];
            ++G__12698__i;
          }
          G__12697 = new cljs.core.IndexedSeq(G__12698__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12697);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__12703__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12703 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12704__i = 0, G__12704__a = new Array(arguments.length - 2);
        while (G__12704__i < G__12704__a.length) {
          G__12704__a[G__12704__i] = arguments[G__12704__i + 2];
          ++G__12704__i;
        }
        more = new cljs.core.IndexedSeq(G__12704__a, 0);
      }
      return G__12703__delegate.call(this, x, y, more);
    };
    G__12703.cljs$lang$maxFixedArity = 2;
    G__12703.cljs$lang$applyTo = function(arglist__12705) {
      var x = cljs.core.first(arglist__12705);
      arglist__12705 = cljs.core.next(arglist__12705);
      var y = cljs.core.first(arglist__12705);
      var more = cljs.core.rest(arglist__12705);
      return G__12703__delegate(x, y, more);
    };
    G__12703.cljs$core$IFn$_invoke$arity$variadic = G__12703__delegate;
    return G__12703;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__12706 = null;
        if (arguments.length > 2) {
          var G__12707__i = 0, G__12707__a = new Array(arguments.length - 2);
          while (G__12707__i < G__12707__a.length) {
            G__12707__a[G__12707__i] = arguments[G__12707__i + 2];
            ++G__12707__i;
          }
          G__12706 = new cljs.core.IndexedSeq(G__12707__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12706);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__12708__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__12709 = y;
            var G__12710 = cljs.core.first(more);
            var G__12711 = cljs.core.next(more);
            x = G__12709;
            y = G__12710;
            more = G__12711;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12708 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12712__i = 0, G__12712__a = new Array(arguments.length - 2);
        while (G__12712__i < G__12712__a.length) {
          G__12712__a[G__12712__i] = arguments[G__12712__i + 2];
          ++G__12712__i;
        }
        more = new cljs.core.IndexedSeq(G__12712__a, 0);
      }
      return G__12708__delegate.call(this, x, y, more);
    };
    G__12708.cljs$lang$maxFixedArity = 2;
    G__12708.cljs$lang$applyTo = function(arglist__12713) {
      var x = cljs.core.first(arglist__12713);
      arglist__12713 = cljs.core.next(arglist__12713);
      var y = cljs.core.first(arglist__12713);
      var more = cljs.core.rest(arglist__12713);
      return G__12708__delegate(x, y, more);
    };
    G__12708.cljs$core$IFn$_invoke$arity$variadic = G__12708__delegate;
    return G__12708;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__12714 = null;
        if (arguments.length > 2) {
          var G__12715__i = 0, G__12715__a = new Array(arguments.length - 2);
          while (G__12715__i < G__12715__a.length) {
            G__12715__a[G__12715__i] = arguments[G__12715__i + 2];
            ++G__12715__i;
          }
          G__12714 = new cljs.core.IndexedSeq(G__12715__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12714);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__12716__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__12717 = y;
            var G__12718 = cljs.core.first(more);
            var G__12719 = cljs.core.next(more);
            x = G__12717;
            y = G__12718;
            more = G__12719;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12716 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12720__i = 0, G__12720__a = new Array(arguments.length - 2);
        while (G__12720__i < G__12720__a.length) {
          G__12720__a[G__12720__i] = arguments[G__12720__i + 2];
          ++G__12720__i;
        }
        more = new cljs.core.IndexedSeq(G__12720__a, 0);
      }
      return G__12716__delegate.call(this, x, y, more);
    };
    G__12716.cljs$lang$maxFixedArity = 2;
    G__12716.cljs$lang$applyTo = function(arglist__12721) {
      var x = cljs.core.first(arglist__12721);
      arglist__12721 = cljs.core.next(arglist__12721);
      var y = cljs.core.first(arglist__12721);
      var more = cljs.core.rest(arglist__12721);
      return G__12716__delegate(x, y, more);
    };
    G__12716.cljs$core$IFn$_invoke$arity$variadic = G__12716__delegate;
    return G__12716;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__12722 = null;
        if (arguments.length > 2) {
          var G__12723__i = 0, G__12723__a = new Array(arguments.length - 2);
          while (G__12723__i < G__12723__a.length) {
            G__12723__a[G__12723__i] = arguments[G__12723__i + 2];
            ++G__12723__i;
          }
          G__12722 = new cljs.core.IndexedSeq(G__12723__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12722);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__12724__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__12725 = y;
            var G__12726 = cljs.core.first(more);
            var G__12727 = cljs.core.next(more);
            x = G__12725;
            y = G__12726;
            more = G__12727;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12724 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12728__i = 0, G__12728__a = new Array(arguments.length - 2);
        while (G__12728__i < G__12728__a.length) {
          G__12728__a[G__12728__i] = arguments[G__12728__i + 2];
          ++G__12728__i;
        }
        more = new cljs.core.IndexedSeq(G__12728__a, 0);
      }
      return G__12724__delegate.call(this, x, y, more);
    };
    G__12724.cljs$lang$maxFixedArity = 2;
    G__12724.cljs$lang$applyTo = function(arglist__12729) {
      var x = cljs.core.first(arglist__12729);
      arglist__12729 = cljs.core.next(arglist__12729);
      var y = cljs.core.first(arglist__12729);
      var more = cljs.core.rest(arglist__12729);
      return G__12724__delegate(x, y, more);
    };
    G__12724.cljs$core$IFn$_invoke$arity$variadic = G__12724__delegate;
    return G__12724;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__12730 = null;
        if (arguments.length > 2) {
          var G__12731__i = 0, G__12731__a = new Array(arguments.length - 2);
          while (G__12731__i < G__12731__a.length) {
            G__12731__a[G__12731__i] = arguments[G__12731__i + 2];
            ++G__12731__i;
          }
          G__12730 = new cljs.core.IndexedSeq(G__12731__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12730);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__12732__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__12733 = y;
            var G__12734 = cljs.core.first(more);
            var G__12735 = cljs.core.next(more);
            x = G__12733;
            y = G__12734;
            more = G__12735;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12732 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12736__i = 0, G__12736__a = new Array(arguments.length - 2);
        while (G__12736__i < G__12736__a.length) {
          G__12736__a[G__12736__i] = arguments[G__12736__i + 2];
          ++G__12736__i;
        }
        more = new cljs.core.IndexedSeq(G__12736__a, 0);
      }
      return G__12732__delegate.call(this, x, y, more);
    };
    G__12732.cljs$lang$maxFixedArity = 2;
    G__12732.cljs$lang$applyTo = function(arglist__12737) {
      var x = cljs.core.first(arglist__12737);
      arglist__12737 = cljs.core.next(arglist__12737);
      var y = cljs.core.first(arglist__12737);
      var more = cljs.core.rest(arglist__12737);
      return G__12732__delegate(x, y, more);
    };
    G__12732.cljs$core$IFn$_invoke$arity$variadic = G__12732__delegate;
    return G__12732;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__12738 = null;
        if (arguments.length > 2) {
          var G__12739__i = 0, G__12739__a = new Array(arguments.length - 2);
          while (G__12739__i < G__12739__a.length) {
            G__12739__a[G__12739__i] = arguments[G__12739__i + 2];
            ++G__12739__i;
          }
          G__12738 = new cljs.core.IndexedSeq(G__12739__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12738);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4093__auto__ = x;
    var y__4094__auto__ = y;
    return x__4093__auto__ > y__4094__auto__ ? x__4093__auto__ : y__4094__auto__;
  };
  var max__3 = function() {
    var G__12740__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4093__auto__ = x;
        var y__4094__auto__ = y;
        return x__4093__auto__ > y__4094__auto__ ? x__4093__auto__ : y__4094__auto__;
      }(), more);
    };
    var G__12740 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12741__i = 0, G__12741__a = new Array(arguments.length - 2);
        while (G__12741__i < G__12741__a.length) {
          G__12741__a[G__12741__i] = arguments[G__12741__i + 2];
          ++G__12741__i;
        }
        more = new cljs.core.IndexedSeq(G__12741__a, 0);
      }
      return G__12740__delegate.call(this, x, y, more);
    };
    G__12740.cljs$lang$maxFixedArity = 2;
    G__12740.cljs$lang$applyTo = function(arglist__12742) {
      var x = cljs.core.first(arglist__12742);
      arglist__12742 = cljs.core.next(arglist__12742);
      var y = cljs.core.first(arglist__12742);
      var more = cljs.core.rest(arglist__12742);
      return G__12740__delegate(x, y, more);
    };
    G__12740.cljs$core$IFn$_invoke$arity$variadic = G__12740__delegate;
    return G__12740;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__12743 = null;
        if (arguments.length > 2) {
          var G__12744__i = 0, G__12744__a = new Array(arguments.length - 2);
          while (G__12744__i < G__12744__a.length) {
            G__12744__a[G__12744__i] = arguments[G__12744__i + 2];
            ++G__12744__i;
          }
          G__12743 = new cljs.core.IndexedSeq(G__12744__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12743);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4100__auto__ = x;
    var y__4101__auto__ = y;
    return x__4100__auto__ < y__4101__auto__ ? x__4100__auto__ : y__4101__auto__;
  };
  var min__3 = function() {
    var G__12745__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4100__auto__ = x;
        var y__4101__auto__ = y;
        return x__4100__auto__ < y__4101__auto__ ? x__4100__auto__ : y__4101__auto__;
      }(), more);
    };
    var G__12745 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12746__i = 0, G__12746__a = new Array(arguments.length - 2);
        while (G__12746__i < G__12746__a.length) {
          G__12746__a[G__12746__i] = arguments[G__12746__i + 2];
          ++G__12746__i;
        }
        more = new cljs.core.IndexedSeq(G__12746__a, 0);
      }
      return G__12745__delegate.call(this, x, y, more);
    };
    G__12745.cljs$lang$maxFixedArity = 2;
    G__12745.cljs$lang$applyTo = function(arglist__12747) {
      var x = cljs.core.first(arglist__12747);
      arglist__12747 = cljs.core.next(arglist__12747);
      var y = cljs.core.first(arglist__12747);
      var more = cljs.core.rest(arglist__12747);
      return G__12745__delegate(x, y, more);
    };
    G__12745.cljs$core$IFn$_invoke$arity$variadic = G__12745__delegate;
    return G__12745;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__12748 = null;
        if (arguments.length > 2) {
          var G__12749__i = 0, G__12749__a = new Array(arguments.length - 2);
          while (G__12749__i < G__12749__a.length) {
            G__12749__a[G__12749__i] = arguments[G__12749__i + 2];
            ++G__12749__i;
          }
          G__12748 = new cljs.core.IndexedSeq(G__12749__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12748);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__12750__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__12750 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12751__i = 0, G__12751__a = new Array(arguments.length - 2);
        while (G__12751__i < G__12751__a.length) {
          G__12751__a[G__12751__i] = arguments[G__12751__i + 2];
          ++G__12751__i;
        }
        more = new cljs.core.IndexedSeq(G__12751__a, 0);
      }
      return G__12750__delegate.call(this, x, y, more);
    };
    G__12750.cljs$lang$maxFixedArity = 2;
    G__12750.cljs$lang$applyTo = function(arglist__12752) {
      var x = cljs.core.first(arglist__12752);
      arglist__12752 = cljs.core.next(arglist__12752);
      var y = cljs.core.first(arglist__12752);
      var more = cljs.core.rest(arglist__12752);
      return G__12750__delegate(x, y, more);
    };
    G__12750.cljs$core$IFn$_invoke$arity$variadic = G__12750__delegate;
    return G__12750;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__12753 = null;
        if (arguments.length > 2) {
          var G__12754__i = 0, G__12754__a = new Array(arguments.length - 2);
          while (G__12754__i < G__12754__a.length) {
            G__12754__a[G__12754__i] = arguments[G__12754__i + 2];
            ++G__12754__i;
          }
          G__12753 = new cljs.core.IndexedSeq(G__12754__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12753);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__12755__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__12755 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12756__i = 0, G__12756__a = new Array(arguments.length - 2);
        while (G__12756__i < G__12756__a.length) {
          G__12756__a[G__12756__i] = arguments[G__12756__i + 2];
          ++G__12756__i;
        }
        more = new cljs.core.IndexedSeq(G__12756__a, 0);
      }
      return G__12755__delegate.call(this, x, y, more);
    };
    G__12755.cljs$lang$maxFixedArity = 2;
    G__12755.cljs$lang$applyTo = function(arglist__12757) {
      var x = cljs.core.first(arglist__12757);
      arglist__12757 = cljs.core.next(arglist__12757);
      var y = cljs.core.first(arglist__12757);
      var more = cljs.core.rest(arglist__12757);
      return G__12755__delegate(x, y, more);
    };
    G__12755.cljs$core$IFn$_invoke$arity$variadic = G__12755__delegate;
    return G__12755;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__12758 = null;
        if (arguments.length > 2) {
          var G__12759__i = 0, G__12759__a = new Array(arguments.length - 2);
          while (G__12759__i < G__12759__a.length) {
            G__12759__a[G__12759__i] = arguments[G__12759__i + 2];
            ++G__12759__i;
          }
          G__12758 = new cljs.core.IndexedSeq(G__12759__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12758);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__12764__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12764 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12765__i = 0, G__12765__a = new Array(arguments.length - 2);
        while (G__12765__i < G__12765__a.length) {
          G__12765__a[G__12765__i] = arguments[G__12765__i + 2];
          ++G__12765__i;
        }
        more = new cljs.core.IndexedSeq(G__12765__a, 0);
      }
      return G__12764__delegate.call(this, x, y, more);
    };
    G__12764.cljs$lang$maxFixedArity = 2;
    G__12764.cljs$lang$applyTo = function(arglist__12766) {
      var x = cljs.core.first(arglist__12766);
      arglist__12766 = cljs.core.next(arglist__12766);
      var y = cljs.core.first(arglist__12766);
      var more = cljs.core.rest(arglist__12766);
      return G__12764__delegate(x, y, more);
    };
    G__12764.cljs$core$IFn$_invoke$arity$variadic = G__12764__delegate;
    return G__12764;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__12767 = null;
        if (arguments.length > 2) {
          var G__12768__i = 0, G__12768__a = new Array(arguments.length - 2);
          while (G__12768__i < G__12768__a.length) {
            G__12768__a[G__12768__i] = arguments[G__12768__i + 2];
            ++G__12768__i;
          }
          G__12767 = new cljs.core.IndexedSeq(G__12768__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12767);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__12769__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__12769 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12770__i = 0, G__12770__a = new Array(arguments.length - 2);
        while (G__12770__i < G__12770__a.length) {
          G__12770__a[G__12770__i] = arguments[G__12770__i + 2];
          ++G__12770__i;
        }
        more = new cljs.core.IndexedSeq(G__12770__a, 0);
      }
      return G__12769__delegate.call(this, x, y, more);
    };
    G__12769.cljs$lang$maxFixedArity = 2;
    G__12769.cljs$lang$applyTo = function(arglist__12771) {
      var x = cljs.core.first(arglist__12771);
      arglist__12771 = cljs.core.next(arglist__12771);
      var y = cljs.core.first(arglist__12771);
      var more = cljs.core.rest(arglist__12771);
      return G__12769__delegate(x, y, more);
    };
    G__12769.cljs$core$IFn$_invoke$arity$variadic = G__12769__delegate;
    return G__12769;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__12772 = null;
        if (arguments.length > 2) {
          var G__12773__i = 0, G__12773__a = new Array(arguments.length - 2);
          while (G__12773__i < G__12773__a.length) {
            G__12773__a[G__12773__i] = arguments[G__12773__i + 2];
            ++G__12773__i;
          }
          G__12772 = new cljs.core.IndexedSeq(G__12773__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12772);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__12774__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__12774 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12775__i = 0, G__12775__a = new Array(arguments.length - 2);
        while (G__12775__i < G__12775__a.length) {
          G__12775__a[G__12775__i] = arguments[G__12775__i + 2];
          ++G__12775__i;
        }
        more = new cljs.core.IndexedSeq(G__12775__a, 0);
      }
      return G__12774__delegate.call(this, x, y, more);
    };
    G__12774.cljs$lang$maxFixedArity = 2;
    G__12774.cljs$lang$applyTo = function(arglist__12776) {
      var x = cljs.core.first(arglist__12776);
      arglist__12776 = cljs.core.next(arglist__12776);
      var y = cljs.core.first(arglist__12776);
      var more = cljs.core.rest(arglist__12776);
      return G__12774__delegate(x, y, more);
    };
    G__12774.cljs$core$IFn$_invoke$arity$variadic = G__12774__delegate;
    return G__12774;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__12777 = null;
        if (arguments.length > 2) {
          var G__12778__i = 0, G__12778__a = new Array(arguments.length - 2);
          while (G__12778__i < G__12778__a.length) {
            G__12778__a[G__12778__i] = arguments[G__12778__i + 2];
            ++G__12778__i;
          }
          G__12777 = new cljs.core.IndexedSeq(G__12778__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12777);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__12781 = x;
  var G__12782 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12781, G__12782) : cljs.core.mod.call(null, G__12781, G__12782);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__12783__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__12783 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12784__i = 0, G__12784__a = new Array(arguments.length - 2);
        while (G__12784__i < G__12784__a.length) {
          G__12784__a[G__12784__i] = arguments[G__12784__i + 2];
          ++G__12784__i;
        }
        more = new cljs.core.IndexedSeq(G__12784__a, 0);
      }
      return G__12783__delegate.call(this, x, y, more);
    };
    G__12783.cljs$lang$maxFixedArity = 2;
    G__12783.cljs$lang$applyTo = function(arglist__12785) {
      var x = cljs.core.first(arglist__12785);
      arglist__12785 = cljs.core.next(arglist__12785);
      var y = cljs.core.first(arglist__12785);
      var more = cljs.core.rest(arglist__12785);
      return G__12783__delegate(x, y, more);
    };
    G__12783.cljs$core$IFn$_invoke$arity$variadic = G__12783__delegate;
    return G__12783;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__12786 = null;
        if (arguments.length > 2) {
          var G__12787__i = 0, G__12787__a = new Array(arguments.length - 2);
          while (G__12787__i < G__12787__a.length) {
            G__12787__a[G__12787__i] = arguments[G__12787__i + 2];
            ++G__12787__i;
          }
          G__12786 = new cljs.core.IndexedSeq(G__12787__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12786);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__12788__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__12788 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12789__i = 0, G__12789__a = new Array(arguments.length - 2);
        while (G__12789__i < G__12789__a.length) {
          G__12789__a[G__12789__i] = arguments[G__12789__i + 2];
          ++G__12789__i;
        }
        more = new cljs.core.IndexedSeq(G__12789__a, 0);
      }
      return G__12788__delegate.call(this, x, y, more);
    };
    G__12788.cljs$lang$maxFixedArity = 2;
    G__12788.cljs$lang$applyTo = function(arglist__12790) {
      var x = cljs.core.first(arglist__12790);
      arglist__12790 = cljs.core.next(arglist__12790);
      var y = cljs.core.first(arglist__12790);
      var more = cljs.core.rest(arglist__12790);
      return G__12788__delegate(x, y, more);
    };
    G__12788.cljs$core$IFn$_invoke$arity$variadic = G__12788__delegate;
    return G__12788;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__12791 = null;
        if (arguments.length > 2) {
          var G__12792__i = 0, G__12792__a = new Array(arguments.length - 2);
          while (G__12792__i < G__12792__a.length) {
            G__12792__a[G__12792__i] = arguments[G__12792__i + 2];
            ++G__12792__i;
          }
          G__12791 = new cljs.core.IndexedSeq(G__12792__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12791);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__12795 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12795) : Math.floor.call(null, G__12795);
  } else {
    var G__12796 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12796) : Math.ceil.call(null, G__12796);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__12797__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__12797 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12798__i = 0, G__12798__a = new Array(arguments.length - 2);
        while (G__12798__i < G__12798__a.length) {
          G__12798__a[G__12798__i] = arguments[G__12798__i + 2];
          ++G__12798__i;
        }
        more = new cljs.core.IndexedSeq(G__12798__a, 0);
      }
      return G__12797__delegate.call(this, x, y, more);
    };
    G__12797.cljs$lang$maxFixedArity = 2;
    G__12797.cljs$lang$applyTo = function(arglist__12799) {
      var x = cljs.core.first(arglist__12799);
      arglist__12799 = cljs.core.next(arglist__12799);
      var y = cljs.core.first(arglist__12799);
      var more = cljs.core.rest(arglist__12799);
      return G__12797__delegate(x, y, more);
    };
    G__12797.cljs$core$IFn$_invoke$arity$variadic = G__12797__delegate;
    return G__12797;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__12800 = null;
        if (arguments.length > 2) {
          var G__12801__i = 0, G__12801__a = new Array(arguments.length - 2);
          while (G__12801__i < G__12801__a.length) {
            G__12801__a[G__12801__i] = arguments[G__12801__i + 2];
            ++G__12801__i;
          }
          G__12800 = new cljs.core.IndexedSeq(G__12801__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12800);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__12802__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__12802 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12803__i = 0, G__12803__a = new Array(arguments.length - 2);
        while (G__12803__i < G__12803__a.length) {
          G__12803__a[G__12803__i] = arguments[G__12803__i + 2];
          ++G__12803__i;
        }
        more = new cljs.core.IndexedSeq(G__12803__a, 0);
      }
      return G__12802__delegate.call(this, x, y, more);
    };
    G__12802.cljs$lang$maxFixedArity = 2;
    G__12802.cljs$lang$applyTo = function(arglist__12804) {
      var x = cljs.core.first(arglist__12804);
      arglist__12804 = cljs.core.next(arglist__12804);
      var y = cljs.core.first(arglist__12804);
      var more = cljs.core.rest(arglist__12804);
      return G__12802__delegate(x, y, more);
    };
    G__12802.cljs$core$IFn$_invoke$arity$variadic = G__12802__delegate;
    return G__12802;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__12805 = null;
        if (arguments.length > 2) {
          var G__12806__i = 0, G__12806__a = new Array(arguments.length - 2);
          while (G__12806__i < G__12806__a.length) {
            G__12806__a[G__12806__i] = arguments[G__12806__i + 2];
            ++G__12806__i;
          }
          G__12805 = new cljs.core.IndexedSeq(G__12806__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12805);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__12807__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__12807 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12808__i = 0, G__12808__a = new Array(arguments.length - 2);
        while (G__12808__i < G__12808__a.length) {
          G__12808__a[G__12808__i] = arguments[G__12808__i + 2];
          ++G__12808__i;
        }
        more = new cljs.core.IndexedSeq(G__12808__a, 0);
      }
      return G__12807__delegate.call(this, x, y, more);
    };
    G__12807.cljs$lang$maxFixedArity = 2;
    G__12807.cljs$lang$applyTo = function(arglist__12809) {
      var x = cljs.core.first(arglist__12809);
      arglist__12809 = cljs.core.next(arglist__12809);
      var y = cljs.core.first(arglist__12809);
      var more = cljs.core.rest(arglist__12809);
      return G__12807__delegate(x, y, more);
    };
    G__12807.cljs$core$IFn$_invoke$arity$variadic = G__12807__delegate;
    return G__12807;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__12810 = null;
        if (arguments.length > 2) {
          var G__12811__i = 0, G__12811__a = new Array(arguments.length - 2);
          while (G__12811__i < G__12811__a.length) {
            G__12811__a[G__12811__i] = arguments[G__12811__i + 2];
            ++G__12811__i;
          }
          G__12810 = new cljs.core.IndexedSeq(G__12811__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12810);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__12812__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__12812 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12813__i = 0, G__12813__a = new Array(arguments.length - 2);
        while (G__12813__i < G__12813__a.length) {
          G__12813__a[G__12813__i] = arguments[G__12813__i + 2];
          ++G__12813__i;
        }
        more = new cljs.core.IndexedSeq(G__12813__a, 0);
      }
      return G__12812__delegate.call(this, x, y, more);
    };
    G__12812.cljs$lang$maxFixedArity = 2;
    G__12812.cljs$lang$applyTo = function(arglist__12814) {
      var x = cljs.core.first(arglist__12814);
      arglist__12814 = cljs.core.next(arglist__12814);
      var y = cljs.core.first(arglist__12814);
      var more = cljs.core.rest(arglist__12814);
      return G__12812__delegate(x, y, more);
    };
    G__12812.cljs$core$IFn$_invoke$arity$variadic = G__12812__delegate;
    return G__12812;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__12815 = null;
        if (arguments.length > 2) {
          var G__12816__i = 0, G__12816__a = new Array(arguments.length - 2);
          while (G__12816__i < G__12816__a.length) {
            G__12816__a[G__12816__i] = arguments[G__12816__i + 2];
            ++G__12816__i;
          }
          G__12815 = new cljs.core.IndexedSeq(G__12816__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12815);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__12821__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__12822 = y;
            var G__12823 = cljs.core.first(more);
            var G__12824 = cljs.core.next(more);
            x = G__12822;
            y = G__12823;
            more = G__12824;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12821 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12825__i = 0, G__12825__a = new Array(arguments.length - 2);
        while (G__12825__i < G__12825__a.length) {
          G__12825__a[G__12825__i] = arguments[G__12825__i + 2];
          ++G__12825__i;
        }
        more = new cljs.core.IndexedSeq(G__12825__a, 0);
      }
      return G__12821__delegate.call(this, x, y, more);
    };
    G__12821.cljs$lang$maxFixedArity = 2;
    G__12821.cljs$lang$applyTo = function(arglist__12826) {
      var x = cljs.core.first(arglist__12826);
      arglist__12826 = cljs.core.next(arglist__12826);
      var y = cljs.core.first(arglist__12826);
      var more = cljs.core.rest(arglist__12826);
      return G__12821__delegate(x, y, more);
    };
    G__12821.cljs$core$IFn$_invoke$arity$variadic = G__12821__delegate;
    return G__12821;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__12827 = null;
        if (arguments.length > 2) {
          var G__12828__i = 0, G__12828__a = new Array(arguments.length - 2);
          while (G__12828__i < G__12828__a.length) {
            G__12828__a[G__12828__i] = arguments[G__12828__i + 2];
            ++G__12828__i;
          }
          G__12827 = new cljs.core.IndexedSeq(G__12828__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12827);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__12829 = n__$1 - 1;
      var G__12830 = cljs.core.next(xs);
      n__$1 = G__12829;
      xs = G__12830;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__12834 = x;
      return goog.string.buildString(G__12834);
    }
  };
  var str__2 = function() {
    var G__12835__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__12836 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__12837 = cljs.core.next(more);
          sb = G__12836;
          more = G__12837;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__12835 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__12838__i = 0, G__12838__a = new Array(arguments.length - 1);
        while (G__12838__i < G__12838__a.length) {
          G__12838__a[G__12838__i] = arguments[G__12838__i + 1];
          ++G__12838__i;
        }
        ys = new cljs.core.IndexedSeq(G__12838__a, 0);
      }
      return G__12835__delegate.call(this, x, ys);
    };
    G__12835.cljs$lang$maxFixedArity = 1;
    G__12835.cljs$lang$applyTo = function(arglist__12839) {
      var x = cljs.core.first(arglist__12839);
      var ys = cljs.core.rest(arglist__12839);
      return G__12835__delegate(x, ys);
    };
    G__12835.cljs$core$IFn$_invoke$arity$variadic = G__12835__delegate;
    return G__12835;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__12840 = null;
        if (arguments.length > 1) {
          var G__12841__i = 0, G__12841__a = new Array(arguments.length - 1);
          while (G__12841__i < G__12841__a.length) {
            G__12841__a[G__12841__i] = arguments[G__12841__i + 1];
            ++G__12841__i;
          }
          G__12840 = new cljs.core.IndexedSeq(G__12841__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12840);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__12842 = cljs.core.next(xs);
            var G__12843 = cljs.core.next(ys);
            xs = G__12842;
            ys = G__12843;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__12844 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__12845 = cljs.core.next(s);
        res = G__12844;
        s = G__12845;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__12850 = (h + (cljs.core.hash(function() {
        var G__12848 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12848) : cljs.core.key.call(null, G__12848);
      }()) ^ cljs.core.hash(function() {
        var G__12849 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12849) : cljs.core.val.call(null, G__12849);
      }()))) % 4503599627370496;
      var G__12851 = cljs.core.next(s);
      h = G__12850;
      s = G__12851;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__12852 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__12853 = cljs.core.next(s__$1);
      h = G__12852;
      s__$1 = G__12853;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__12864_12874 = cljs.core.seq(fn_map);
  var chunk__12865_12875 = null;
  var count__12866_12876 = 0;
  var i__12867_12877 = 0;
  while (true) {
    if (i__12867_12877 < count__12866_12876) {
      var vec__12868_12878 = chunk__12865_12875.cljs$core$IIndexed$_nth$arity$2(null, i__12867_12877);
      var key_name_12879 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12868_12878, 0, null);
      var f_12880 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12868_12878, 1, null);
      var str_name_12881 = function() {
        var G__12869 = key_name_12879;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12869) : cljs.core.name.call(null, G__12869);
      }();
      obj[str_name_12881] = f_12880;
      var G__12882 = seq__12864_12874;
      var G__12883 = chunk__12865_12875;
      var G__12884 = count__12866_12876;
      var G__12885 = i__12867_12877 + 1;
      seq__12864_12874 = G__12882;
      chunk__12865_12875 = G__12883;
      count__12866_12876 = G__12884;
      i__12867_12877 = G__12885;
      continue;
    } else {
      var temp__4126__auto___12886 = cljs.core.seq(seq__12864_12874);
      if (temp__4126__auto___12886) {
        var seq__12864_12887__$1 = temp__4126__auto___12886;
        if (cljs.core.chunked_seq_QMARK_(seq__12864_12887__$1)) {
          var c__4563__auto___12888 = function() {
            var G__12870 = seq__12864_12887__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12870) : cljs.core.chunk_first.call(null, G__12870);
          }();
          var G__12889 = function() {
            var G__12871 = seq__12864_12887__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12871) : cljs.core.chunk_rest.call(null, G__12871);
          }();
          var G__12890 = c__4563__auto___12888;
          var G__12891 = cljs.core.count(c__4563__auto___12888);
          var G__12892 = 0;
          seq__12864_12874 = G__12889;
          chunk__12865_12875 = G__12890;
          count__12866_12876 = G__12891;
          i__12867_12877 = G__12892;
          continue;
        } else {
          var vec__12872_12893 = cljs.core.first(seq__12864_12887__$1);
          var key_name_12894 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12872_12893, 0, null);
          var f_12895 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12872_12893, 1, null);
          var str_name_12896 = function() {
            var G__12873 = key_name_12894;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12873) : cljs.core.name.call(null, G__12873);
          }();
          obj[str_name_12896] = f_12895;
          var G__12897 = cljs.core.next(seq__12864_12887__$1);
          var G__12898 = null;
          var G__12899 = 0;
          var G__12900 = 0;
          seq__12864_12874 = G__12897;
          chunk__12865_12875 = G__12898;
          count__12866_12876 = G__12899;
          i__12867_12877 = G__12900;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12902 = coll;
  if (G__12902) {
    var bit__4457__auto__ = G__12902.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4457__auto__ || G__12902.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__12902.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12902);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12902);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__12903 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__12903;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__12904 = i - 1;
        var G__12905 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__12904;
        r = G__12905;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__12906__i = 0, G__12906__a = new Array(arguments.length - 0);
      while (G__12906__i < G__12906__a.length) {
        G__12906__a[G__12906__i] = arguments[G__12906__i + 0];
        ++G__12906__i;
      }
      xs = new cljs.core.IndexedSeq(G__12906__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__12907) {
    var xs = cljs.core.seq(arglist__12907);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3776__auto__ = coll == null;
    if (or__3776__auto__) {
      return or__3776__auto__;
    } else {
      var G__12911 = coll;
      if (G__12911) {
        var bit__4450__auto__ = G__12911.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4450__auto__ || G__12911.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12913 = x;
  if (G__12913) {
    var bit__4457__auto__ = G__12913.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4457__auto__ || G__12913.cljs$core$IList$) {
      return true;
    } else {
      if (!G__12913.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12913);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12913);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = cljs.core.not(a.ns);
      if (and__3764__auto__) {
        return b.ns;
      } else {
        return and__3764__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__12920 = a.ns;
            var G__12921 = b.ns;
            return goog.array.defaultCompare(G__12920, G__12921);
          }();
          if (0 === nsc) {
            var G__12922 = a.name;
            var G__12923 = b.name;
            return goog.array.defaultCompare(G__12922, G__12923);
          } else {
            return nsc;
          }
        }
      } else {
        var G__12924 = a.name;
        var G__12925 = b.name;
        return goog.array.defaultCompare(G__12924, G__12925);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4197__auto__ = self__._hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__12927 = null;
  var G__12927__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__12927__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__12927 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12927__2.call(this, self__, coll);
      case 3:
        return G__12927__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12927.cljs$core$IFn$_invoke$arity$2 = G__12927__2;
  G__12927.cljs$core$IFn$_invoke$arity$3 = G__12927__3;
  return G__12927;
}();
cljs.core.Keyword.prototype.apply = function(self__, args12926) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12926)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__12929 = x;
    if (G__12929) {
      var bit__4450__auto__ = G__12929.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4450__auto__ || G__12929.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__12931 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12931) : cljs.core.name.call(null, G__12931);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__12932 = ls.sval();
        ls = G__12932;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__12934 = s;
    if (G__12934) {
      var bit__4450__auto__ = G__12934.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4450__auto__ || G__12934.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__12935 = cljs.core.next(s__$1);
      s__$1 = G__12935;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_12936 = 0;
  var xs_12937 = cljs.core.seq(coll);
  while (true) {
    if (xs_12937) {
      ret[i_12936] = cljs.core.to_array(cljs.core.first(xs_12937));
      var G__12938 = i_12936 + 1;
      var G__12939 = cljs.core.next(xs_12937);
      i_12936 = G__12938;
      xs_12937 = G__12939;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12942 = i + 1;
          var G__12943 = cljs.core.next(s__$1);
          i = G__12942;
          s__$1 = G__12943;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___12944 = size;
      var i_12945 = 0;
      while (true) {
        if (i_12945 < n__4663__auto___12944) {
          a[i_12945] = init_val_or_seq;
          var G__12946 = i_12945 + 1;
          i_12945 = G__12946;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12949 = i + 1;
          var G__12950 = cljs.core.next(s__$1);
          i = G__12949;
          s__$1 = G__12950;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___12951 = size;
      var i_12952 = 0;
      while (true) {
        if (i_12952 < n__4663__auto___12951) {
          a[i_12952] = init_val_or_seq;
          var G__12953 = i_12952 + 1;
          i_12952 = G__12953;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12956 = i + 1;
          var G__12957 = cljs.core.next(s__$1);
          i = G__12956;
          s__$1 = G__12957;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___12958 = size;
      var i_12959 = 0;
      while (true) {
        if (i_12959 < n__4663__auto___12958) {
          a[i_12959] = init_val_or_seq;
          var G__12960 = i_12959 + 1;
          i_12959 = G__12960;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12963 = i + 1;
          var G__12964 = cljs.core.next(s__$1);
          i = G__12963;
          s__$1 = G__12964;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___12965 = size;
      var i_12966 = 0;
      while (true) {
        if (i_12966 < n__4663__auto___12965) {
          a[i_12966] = init_val_or_seq;
          var G__12967 = i_12966 + 1;
          i_12966 = G__12967;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__12968 = cljs.core.next(s__$1);
        var G__12969 = i - 1;
        var G__12970 = sum + 1;
        s__$1 = G__12968;
        i = G__12969;
        sum = G__12970;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__12990__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__12990 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__12991__i = 0, G__12991__a = new Array(arguments.length - 2);
        while (G__12991__i < G__12991__a.length) {
          G__12991__a[G__12991__i] = arguments[G__12991__i + 2];
          ++G__12991__i;
        }
        zs = new cljs.core.IndexedSeq(G__12991__a, 0);
      }
      return G__12990__delegate.call(this, x, y, zs);
    };
    G__12990.cljs$lang$maxFixedArity = 2;
    G__12990.cljs$lang$applyTo = function(arglist__12992) {
      var x = cljs.core.first(arglist__12992);
      arglist__12992 = cljs.core.next(arglist__12992);
      var y = cljs.core.first(arglist__12992);
      var zs = cljs.core.rest(arglist__12992);
      return G__12990__delegate(x, y, zs);
    };
    G__12990.cljs$core$IFn$_invoke$arity$variadic = G__12990__delegate;
    return G__12990;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__12993 = null;
        if (arguments.length > 2) {
          var G__12994__i = 0, G__12994__a = new Array(arguments.length - 2);
          while (G__12994__i < G__12994__a.length) {
            G__12994__a[G__12994__i] = arguments[G__12994__i + 2];
            ++G__12994__i;
          }
          G__12993 = new cljs.core.IndexedSeq(G__12994__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12993);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__12995__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__12995 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12996__i = 0, G__12996__a = new Array(arguments.length - 4);
        while (G__12996__i < G__12996__a.length) {
          G__12996__a[G__12996__i] = arguments[G__12996__i + 4];
          ++G__12996__i;
        }
        more = new cljs.core.IndexedSeq(G__12996__a, 0);
      }
      return G__12995__delegate.call(this, a, b, c, d, more);
    };
    G__12995.cljs$lang$maxFixedArity = 4;
    G__12995.cljs$lang$applyTo = function(arglist__12997) {
      var a = cljs.core.first(arglist__12997);
      arglist__12997 = cljs.core.next(arglist__12997);
      var b = cljs.core.first(arglist__12997);
      arglist__12997 = cljs.core.next(arglist__12997);
      var c = cljs.core.first(arglist__12997);
      arglist__12997 = cljs.core.next(arglist__12997);
      var d = cljs.core.first(arglist__12997);
      var more = cljs.core.rest(arglist__12997);
      return G__12995__delegate(a, b, c, d, more);
    };
    G__12995.cljs$core$IFn$_invoke$arity$variadic = G__12995__delegate;
    return G__12995;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__12998 = null;
        if (arguments.length > 4) {
          var G__12999__i = 0, G__12999__a = new Array(arguments.length - 4);
          while (G__12999__i < G__12999__a.length) {
            G__12999__a[G__12999__i] = arguments[G__12999__i + 4];
            ++G__12999__i;
          }
          G__12998 = new cljs.core.IndexedSeq(G__12999__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__12998);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__13000__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13001 = ntcoll;
          var G__13002 = cljs.core.first(vals);
          var G__13003 = cljs.core.next(vals);
          tcoll = G__13001;
          val = G__13002;
          vals = G__13003;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13000 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__13004__i = 0, G__13004__a = new Array(arguments.length - 2);
        while (G__13004__i < G__13004__a.length) {
          G__13004__a[G__13004__i] = arguments[G__13004__i + 2];
          ++G__13004__i;
        }
        vals = new cljs.core.IndexedSeq(G__13004__a, 0);
      }
      return G__13000__delegate.call(this, tcoll, val, vals);
    };
    G__13000.cljs$lang$maxFixedArity = 2;
    G__13000.cljs$lang$applyTo = function(arglist__13005) {
      var tcoll = cljs.core.first(arglist__13005);
      arglist__13005 = cljs.core.next(arglist__13005);
      var val = cljs.core.first(arglist__13005);
      var vals = cljs.core.rest(arglist__13005);
      return G__13000__delegate(tcoll, val, vals);
    };
    G__13000.cljs$core$IFn$_invoke$arity$variadic = G__13000__delegate;
    return G__13000;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__13006 = null;
        if (arguments.length > 2) {
          var G__13007__i = 0, G__13007__a = new Array(arguments.length - 2);
          while (G__13007__i < G__13007__a.length) {
            G__13007__a[G__13007__i] = arguments[G__13007__i + 2];
            ++G__13007__i;
          }
          G__13006 = new cljs.core.IndexedSeq(G__13007__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__13006);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__13008__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__13009 = ntcoll;
          var G__13010 = cljs.core.first(kvs);
          var G__13011 = cljs.core.second(kvs);
          var G__13012 = cljs.core.nnext(kvs);
          tcoll = G__13009;
          key = G__13010;
          val = G__13011;
          kvs = G__13012;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13008 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__13013__i = 0, G__13013__a = new Array(arguments.length - 3);
        while (G__13013__i < G__13013__a.length) {
          G__13013__a[G__13013__i] = arguments[G__13013__i + 3];
          ++G__13013__i;
        }
        kvs = new cljs.core.IndexedSeq(G__13013__a, 0);
      }
      return G__13008__delegate.call(this, tcoll, key, val, kvs);
    };
    G__13008.cljs$lang$maxFixedArity = 3;
    G__13008.cljs$lang$applyTo = function(arglist__13014) {
      var tcoll = cljs.core.first(arglist__13014);
      arglist__13014 = cljs.core.next(arglist__13014);
      var key = cljs.core.first(arglist__13014);
      arglist__13014 = cljs.core.next(arglist__13014);
      var val = cljs.core.first(arglist__13014);
      var kvs = cljs.core.rest(arglist__13014);
      return G__13008__delegate(tcoll, key, val, kvs);
    };
    G__13008.cljs$core$IFn$_invoke$arity$variadic = G__13008__delegate;
    return G__13008;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__13015 = null;
        if (arguments.length > 3) {
          var G__13016__i = 0, G__13016__a = new Array(arguments.length - 3);
          while (G__13016__i < G__13016__a.length) {
            G__13016__a[G__13016__i] = arguments[G__13016__i + 3];
            ++G__13016__i;
          }
          G__13015 = new cljs.core.IndexedSeq(G__13016__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__13015);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__13017__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__13018 = ntcoll;
          var G__13019 = cljs.core.first(ks);
          var G__13020 = cljs.core.next(ks);
          tcoll = G__13018;
          key = G__13019;
          ks = G__13020;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13017 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__13021__i = 0, G__13021__a = new Array(arguments.length - 2);
        while (G__13021__i < G__13021__a.length) {
          G__13021__a[G__13021__i] = arguments[G__13021__i + 2];
          ++G__13021__i;
        }
        ks = new cljs.core.IndexedSeq(G__13021__a, 0);
      }
      return G__13017__delegate.call(this, tcoll, key, ks);
    };
    G__13017.cljs$lang$maxFixedArity = 2;
    G__13017.cljs$lang$applyTo = function(arglist__13022) {
      var tcoll = cljs.core.first(arglist__13022);
      arglist__13022 = cljs.core.next(arglist__13022);
      var key = cljs.core.first(arglist__13022);
      var ks = cljs.core.rest(arglist__13022);
      return G__13017__delegate(tcoll, key, ks);
    };
    G__13017.cljs$core$IFn$_invoke$arity$variadic = G__13017__delegate;
    return G__13017;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__13023 = null;
        if (arguments.length > 2) {
          var G__13024__i = 0, G__13024__a = new Array(arguments.length - 2);
          while (G__13024__i < G__13024__a.length) {
            G__13024__a[G__13024__i] = arguments[G__13024__i + 2];
            ++G__13024__i;
          }
          G__13023 = new cljs.core.IndexedSeq(G__13024__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__13023);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__13025__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13026 = ntcoll;
          var G__13027 = cljs.core.first(vals);
          var G__13028 = cljs.core.next(vals);
          tcoll = G__13026;
          val = G__13027;
          vals = G__13028;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13025 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__13029__i = 0, G__13029__a = new Array(arguments.length - 2);
        while (G__13029__i < G__13029__a.length) {
          G__13029__a[G__13029__i] = arguments[G__13029__i + 2];
          ++G__13029__i;
        }
        vals = new cljs.core.IndexedSeq(G__13029__a, 0);
      }
      return G__13025__delegate.call(this, tcoll, val, vals);
    };
    G__13025.cljs$lang$maxFixedArity = 2;
    G__13025.cljs$lang$applyTo = function(arglist__13030) {
      var tcoll = cljs.core.first(arglist__13030);
      arglist__13030 = cljs.core.next(arglist__13030);
      var val = cljs.core.first(arglist__13030);
      var vals = cljs.core.rest(arglist__13030);
      return G__13025__delegate(tcoll, val, vals);
    };
    G__13025.cljs$core$IFn$_invoke$arity$variadic = G__13025__delegate;
    return G__13025;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__13031 = null;
        if (arguments.length > 2) {
          var G__13032__i = 0, G__13032__a = new Array(arguments.length - 2);
          while (G__13032__i < G__13032__a.length) {
            G__13032__a[G__13032__i] = arguments[G__13032__i + 2];
            ++G__13032__i;
          }
          G__13031 = new cljs.core.IndexedSeq(G__13032__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__13031);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4707 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4707);
      } else {
        var G__13243 = a4707;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13243) : f.call(null, G__13243);
      }
    } else {
      var b4708 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4707, b4708);
        } else {
          var G__13244 = a4707;
          var G__13245 = b4708;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13244, G__13245) : f.call(null, G__13244, G__13245);
        }
      } else {
        var c4709 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4707, b4708, c4709);
          } else {
            var G__13246 = a4707;
            var G__13247 = b4708;
            var G__13248 = c4709;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13246, G__13247, G__13248) : f.call(null, G__13246, G__13247, G__13248);
          }
        } else {
          var d4710 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4707, b4708, c4709, d4710);
            } else {
              var G__13249 = a4707;
              var G__13250 = b4708;
              var G__13251 = c4709;
              var G__13252 = d4710;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13249, G__13250, G__13251, G__13252) : f.call(null, G__13249, G__13250, G__13251, G__13252);
            }
          } else {
            var e4711 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4707, b4708, c4709, d4710, e4711);
              } else {
                var G__13253 = a4707;
                var G__13254 = b4708;
                var G__13255 = c4709;
                var G__13256 = d4710;
                var G__13257 = e4711;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13253, G__13254, G__13255, G__13256, G__13257) : f.call(null, G__13253, G__13254, G__13255, G__13256, G__13257);
              }
            } else {
              var f4712 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4707, b4708, c4709, d4710, e4711, f4712);
                } else {
                  var G__13258 = a4707;
                  var G__13259 = b4708;
                  var G__13260 = c4709;
                  var G__13261 = d4710;
                  var G__13262 = e4711;
                  var G__13263 = f4712;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13258, G__13259, G__13260, G__13261, G__13262, G__13263) : f.call(null, G__13258, G__13259, G__13260, G__13261, G__13262, G__13263);
                }
              } else {
                var g4713 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4707, b4708, c4709, d4710, e4711, f4712, g4713);
                  } else {
                    var G__13264 = a4707;
                    var G__13265 = b4708;
                    var G__13266 = c4709;
                    var G__13267 = d4710;
                    var G__13268 = e4711;
                    var G__13269 = f4712;
                    var G__13270 = g4713;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13264, G__13265, G__13266, G__13267, G__13268, G__13269, G__13270) : f.call(null, G__13264, G__13265, G__13266, G__13267, G__13268, G__13269, G__13270);
                  }
                } else {
                  var h4714 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714);
                    } else {
                      var G__13271 = a4707;
                      var G__13272 = b4708;
                      var G__13273 = c4709;
                      var G__13274 = d4710;
                      var G__13275 = e4711;
                      var G__13276 = f4712;
                      var G__13277 = g4713;
                      var G__13278 = h4714;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13271, G__13272, G__13273, G__13274, G__13275, G__13276, G__13277, G__13278) : f.call(null, G__13271, G__13272, G__13273, G__13274, G__13275, G__13276, G__13277, G__13278);
                    }
                  } else {
                    var i4715 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715);
                      } else {
                        var G__13279 = a4707;
                        var G__13280 = b4708;
                        var G__13281 = c4709;
                        var G__13282 = d4710;
                        var G__13283 = e4711;
                        var G__13284 = f4712;
                        var G__13285 = g4713;
                        var G__13286 = h4714;
                        var G__13287 = i4715;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13279, G__13280, G__13281, G__13282, G__13283, G__13284, G__13285, G__13286, G__13287) : f.call(null, G__13279, G__13280, G__13281, G__13282, G__13283, G__13284, G__13285, G__13286, G__13287);
                      }
                    } else {
                      var j4716 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716);
                        } else {
                          var G__13288 = a4707;
                          var G__13289 = b4708;
                          var G__13290 = c4709;
                          var G__13291 = d4710;
                          var G__13292 = e4711;
                          var G__13293 = f4712;
                          var G__13294 = g4713;
                          var G__13295 = h4714;
                          var G__13296 = i4715;
                          var G__13297 = j4716;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296, G__13297) : f.call(null, G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296, G__13297);
                        }
                      } else {
                        var k4717 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717);
                          } else {
                            var G__13298 = a4707;
                            var G__13299 = b4708;
                            var G__13300 = c4709;
                            var G__13301 = d4710;
                            var G__13302 = e4711;
                            var G__13303 = f4712;
                            var G__13304 = g4713;
                            var G__13305 = h4714;
                            var G__13306 = i4715;
                            var G__13307 = j4716;
                            var G__13308 = k4717;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306, G__13307, G__13308) : f.call(null, G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306, G__13307, G__13308);
                          }
                        } else {
                          var l4718 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718);
                            } else {
                              var G__13309 = a4707;
                              var G__13310 = b4708;
                              var G__13311 = c4709;
                              var G__13312 = d4710;
                              var G__13313 = e4711;
                              var G__13314 = f4712;
                              var G__13315 = g4713;
                              var G__13316 = h4714;
                              var G__13317 = i4715;
                              var G__13318 = j4716;
                              var G__13319 = k4717;
                              var G__13320 = l4718;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13309, G__13310, G__13311, G__13312, G__13313, G__13314, G__13315, G__13316, G__13317, G__13318, G__13319, G__13320) : f.call(null, G__13309, G__13310, G__13311, G__13312, G__13313, G__13314, G__13315, G__13316, G__13317, G__13318, G__13319, G__13320);
                            }
                          } else {
                            var m4719 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719);
                              } else {
                                var G__13321 = a4707;
                                var G__13322 = b4708;
                                var G__13323 = c4709;
                                var G__13324 = d4710;
                                var G__13325 = e4711;
                                var G__13326 = f4712;
                                var G__13327 = g4713;
                                var G__13328 = h4714;
                                var G__13329 = i4715;
                                var G__13330 = j4716;
                                var G__13331 = k4717;
                                var G__13332 = l4718;
                                var G__13333 = m4719;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13321, G__13322, G__13323, G__13324, G__13325, G__13326, G__13327, G__13328, G__13329, G__13330, G__13331, G__13332, G__13333) : f.call(null, G__13321, G__13322, G__13323, G__13324, G__13325, G__13326, G__13327, G__13328, G__13329, G__13330, G__13331, G__13332, G__13333);
                              }
                            } else {
                              var n4720 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720);
                                } else {
                                  var G__13334 = a4707;
                                  var G__13335 = b4708;
                                  var G__13336 = c4709;
                                  var G__13337 = d4710;
                                  var G__13338 = e4711;
                                  var G__13339 = f4712;
                                  var G__13340 = g4713;
                                  var G__13341 = h4714;
                                  var G__13342 = i4715;
                                  var G__13343 = j4716;
                                  var G__13344 = k4717;
                                  var G__13345 = l4718;
                                  var G__13346 = m4719;
                                  var G__13347 = n4720;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13334, G__13335, G__13336, G__13337, G__13338, G__13339, G__13340, G__13341, G__13342, G__13343, G__13344, G__13345, G__13346, G__13347) : f.call(null, G__13334, G__13335, G__13336, G__13337, G__13338, G__13339, G__13340, G__13341, G__13342, G__13343, G__13344, G__13345, G__13346, G__13347);
                                }
                              } else {
                                var o4721 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721);
                                  } else {
                                    var G__13348 = a4707;
                                    var G__13349 = b4708;
                                    var G__13350 = c4709;
                                    var G__13351 = d4710;
                                    var G__13352 = e4711;
                                    var G__13353 = f4712;
                                    var G__13354 = g4713;
                                    var G__13355 = h4714;
                                    var G__13356 = i4715;
                                    var G__13357 = j4716;
                                    var G__13358 = k4717;
                                    var G__13359 = l4718;
                                    var G__13360 = m4719;
                                    var G__13361 = n4720;
                                    var G__13362 = o4721;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13348, G__13349, G__13350, G__13351, G__13352, G__13353, G__13354, G__13355, G__13356, G__13357, G__13358, G__13359, G__13360, G__13361, G__13362) : f.call(null, G__13348, G__13349, G__13350, G__13351, G__13352, G__13353, G__13354, G__13355, G__13356, G__13357, G__13358, G__13359, G__13360, G__13361, G__13362);
                                  }
                                } else {
                                  var p4722 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722);
                                    } else {
                                      var G__13363 = a4707;
                                      var G__13364 = b4708;
                                      var G__13365 = c4709;
                                      var G__13366 = d4710;
                                      var G__13367 = e4711;
                                      var G__13368 = f4712;
                                      var G__13369 = g4713;
                                      var G__13370 = h4714;
                                      var G__13371 = i4715;
                                      var G__13372 = j4716;
                                      var G__13373 = k4717;
                                      var G__13374 = l4718;
                                      var G__13375 = m4719;
                                      var G__13376 = n4720;
                                      var G__13377 = o4721;
                                      var G__13378 = p4722;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13363, G__13364, G__13365, G__13366, G__13367, G__13368, G__13369, G__13370, G__13371, G__13372, G__13373, G__13374, G__13375, G__13376, G__13377, G__13378) : f.call(null, G__13363, G__13364, G__13365, G__13366, G__13367, G__13368, G__13369, G__13370, G__13371, G__13372, G__13373, G__13374, G__13375, G__13376, G__13377, G__13378);
                                    }
                                  } else {
                                    var q4723 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723);
                                      } else {
                                        var G__13379 = a4707;
                                        var G__13380 = b4708;
                                        var G__13381 = c4709;
                                        var G__13382 = d4710;
                                        var G__13383 = e4711;
                                        var G__13384 = f4712;
                                        var G__13385 = g4713;
                                        var G__13386 = h4714;
                                        var G__13387 = i4715;
                                        var G__13388 = j4716;
                                        var G__13389 = k4717;
                                        var G__13390 = l4718;
                                        var G__13391 = m4719;
                                        var G__13392 = n4720;
                                        var G__13393 = o4721;
                                        var G__13394 = p4722;
                                        var G__13395 = q4723;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386, G__13387, G__13388, G__13389, G__13390, G__13391, G__13392, G__13393, G__13394, G__13395) : f.call(null, G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386, G__13387, G__13388, G__13389, G__13390, G__13391, G__13392, G__13393, G__13394, G__13395);
                                      }
                                    } else {
                                      var r4724 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723, r4724);
                                        } else {
                                          var G__13396 = a4707;
                                          var G__13397 = b4708;
                                          var G__13398 = c4709;
                                          var G__13399 = d4710;
                                          var G__13400 = e4711;
                                          var G__13401 = f4712;
                                          var G__13402 = g4713;
                                          var G__13403 = h4714;
                                          var G__13404 = i4715;
                                          var G__13405 = j4716;
                                          var G__13406 = k4717;
                                          var G__13407 = l4718;
                                          var G__13408 = m4719;
                                          var G__13409 = n4720;
                                          var G__13410 = o4721;
                                          var G__13411 = p4722;
                                          var G__13412 = q4723;
                                          var G__13413 = r4724;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13396, G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404, G__13405, G__13406, G__13407, G__13408, G__13409, G__13410, G__13411, G__13412, G__13413) : f.call(null, G__13396, G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404, G__13405, G__13406, G__13407, G__13408, G__13409, G__13410, G__13411, G__13412, G__13413);
                                        }
                                      } else {
                                        var s4725 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723, r4724, s4725);
                                          } else {
                                            var G__13414 = a4707;
                                            var G__13415 = b4708;
                                            var G__13416 = c4709;
                                            var G__13417 = d4710;
                                            var G__13418 = e4711;
                                            var G__13419 = f4712;
                                            var G__13420 = g4713;
                                            var G__13421 = h4714;
                                            var G__13422 = i4715;
                                            var G__13423 = j4716;
                                            var G__13424 = k4717;
                                            var G__13425 = l4718;
                                            var G__13426 = m4719;
                                            var G__13427 = n4720;
                                            var G__13428 = o4721;
                                            var G__13429 = p4722;
                                            var G__13430 = q4723;
                                            var G__13431 = r4724;
                                            var G__13432 = s4725;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13414, G__13415, G__13416, G__13417, G__13418, G__13419, G__13420, G__13421, G__13422, G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, G__13429, G__13430, G__13431, G__13432) : f.call(null, G__13414, G__13415, G__13416, G__13417, G__13418, G__13419, G__13420, G__13421, G__13422, G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, G__13429, G__13430, G__13431, 
                                            G__13432);
                                          }
                                        } else {
                                          var t4726 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723, r4724, s4725, t4726);
                                            } else {
                                              var G__13433 = a4707;
                                              var G__13434 = b4708;
                                              var G__13435 = c4709;
                                              var G__13436 = d4710;
                                              var G__13437 = e4711;
                                              var G__13438 = f4712;
                                              var G__13439 = g4713;
                                              var G__13440 = h4714;
                                              var G__13441 = i4715;
                                              var G__13442 = j4716;
                                              var G__13443 = k4717;
                                              var G__13444 = l4718;
                                              var G__13445 = m4719;
                                              var G__13446 = n4720;
                                              var G__13447 = o4721;
                                              var G__13448 = p4722;
                                              var G__13449 = q4723;
                                              var G__13450 = r4724;
                                              var G__13451 = s4725;
                                              var G__13452 = t4726;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, G__13441, G__13442, G__13443, G__13444, G__13445, G__13446, G__13447, G__13448, G__13449, G__13450, G__13451, G__13452) : f.call(null, G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, G__13441, G__13442, G__13443, G__13444, G__13445, G__13446, G__13447, G__13448, G__13449, 
                                              G__13450, G__13451, G__13452);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__13453__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__13453 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__13454__i = 0, G__13454__a = new Array(arguments.length - 5);
        while (G__13454__i < G__13454__a.length) {
          G__13454__a[G__13454__i] = arguments[G__13454__i + 5];
          ++G__13454__i;
        }
        args = new cljs.core.IndexedSeq(G__13454__a, 0);
      }
      return G__13453__delegate.call(this, f, a, b, c, d, args);
    };
    G__13453.cljs$lang$maxFixedArity = 5;
    G__13453.cljs$lang$applyTo = function(arglist__13455) {
      var f = cljs.core.first(arglist__13455);
      arglist__13455 = cljs.core.next(arglist__13455);
      var a = cljs.core.first(arglist__13455);
      arglist__13455 = cljs.core.next(arglist__13455);
      var b = cljs.core.first(arglist__13455);
      arglist__13455 = cljs.core.next(arglist__13455);
      var c = cljs.core.first(arglist__13455);
      arglist__13455 = cljs.core.next(arglist__13455);
      var d = cljs.core.first(arglist__13455);
      var args = cljs.core.rest(arglist__13455);
      return G__13453__delegate(f, a, b, c, d, args);
    };
    G__13453.cljs$core$IFn$_invoke$arity$variadic = G__13453__delegate;
    return G__13453;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__13456 = null;
        if (arguments.length > 5) {
          var G__13457__i = 0, G__13457__a = new Array(arguments.length - 5);
          while (G__13457__i < G__13457__a.length) {
            G__13457__a[G__13457__i] = arguments[G__13457__i + 5];
            ++G__13457__i;
          }
          G__13456 = new cljs.core.IndexedSeq(G__13457__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__13456);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__13473 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13473) : f.call(null, G__13473);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__13474 = cljs.core.meta(obj);
      var G__13475 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13474, G__13475) : f.call(null, G__13474, G__13475);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__13476 = cljs.core.meta(obj);
      var G__13477 = a;
      var G__13478 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13476, G__13477, G__13478) : f.call(null, G__13476, G__13477, G__13478);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__13479 = cljs.core.meta(obj);
      var G__13480 = a;
      var G__13481 = b;
      var G__13482 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13479, G__13480, G__13481, G__13482) : f.call(null, G__13479, G__13480, G__13481, G__13482);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__13483 = cljs.core.meta(obj);
      var G__13484 = a;
      var G__13485 = b;
      var G__13486 = c;
      var G__13487 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13483, G__13484, G__13485, G__13486, G__13487) : f.call(null, G__13483, G__13484, G__13485, G__13486, G__13487);
    }());
  };
  var vary_meta__7 = function() {
    var G__13488__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__13488 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__13489__i = 0, G__13489__a = new Array(arguments.length - 6);
        while (G__13489__i < G__13489__a.length) {
          G__13489__a[G__13489__i] = arguments[G__13489__i + 6];
          ++G__13489__i;
        }
        args = new cljs.core.IndexedSeq(G__13489__a, 0);
      }
      return G__13488__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__13488.cljs$lang$maxFixedArity = 6;
    G__13488.cljs$lang$applyTo = function(arglist__13490) {
      var obj = cljs.core.first(arglist__13490);
      arglist__13490 = cljs.core.next(arglist__13490);
      var f = cljs.core.first(arglist__13490);
      arglist__13490 = cljs.core.next(arglist__13490);
      var a = cljs.core.first(arglist__13490);
      arglist__13490 = cljs.core.next(arglist__13490);
      var b = cljs.core.first(arglist__13490);
      arglist__13490 = cljs.core.next(arglist__13490);
      var c = cljs.core.first(arglist__13490);
      arglist__13490 = cljs.core.next(arglist__13490);
      var d = cljs.core.first(arglist__13490);
      var args = cljs.core.rest(arglist__13490);
      return G__13488__delegate(obj, f, a, b, c, d, args);
    };
    G__13488.cljs$core$IFn$_invoke$arity$variadic = G__13488__delegate;
    return G__13488;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__13491 = null;
        if (arguments.length > 6) {
          var G__13492__i = 0, G__13492__a = new Array(arguments.length - 6);
          while (G__13492__i < G__13492__a.length) {
            G__13492__a[G__13492__i] = arguments[G__13492__i + 6];
            ++G__13492__i;
          }
          G__13491 = new cljs.core.IndexedSeq(G__13492__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__13491);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__13493__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__13493 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13494__i = 0, G__13494__a = new Array(arguments.length - 2);
        while (G__13494__i < G__13494__a.length) {
          G__13494__a[G__13494__i] = arguments[G__13494__i + 2];
          ++G__13494__i;
        }
        more = new cljs.core.IndexedSeq(G__13494__a, 0);
      }
      return G__13493__delegate.call(this, x, y, more);
    };
    G__13493.cljs$lang$maxFixedArity = 2;
    G__13493.cljs$lang$applyTo = function(arglist__13495) {
      var x = cljs.core.first(arglist__13495);
      arglist__13495 = cljs.core.next(arglist__13495);
      var y = cljs.core.first(arglist__13495);
      var more = cljs.core.rest(arglist__13495);
      return G__13493__delegate(x, y, more);
    };
    G__13493.cljs$core$IFn$_invoke$arity$variadic = G__13493__delegate;
    return G__13493;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__13496 = null;
        if (arguments.length > 2) {
          var G__13497__i = 0, G__13497__a = new Array(arguments.length - 2);
          while (G__13497__i < G__13497__a.length) {
            G__13497__a[G__13497__i] = arguments[G__13497__i + 2];
            ++G__13497__i;
          }
          G__13496 = new cljs.core.IndexedSeq(G__13497__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13496);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t13501 !== "undefined") {
  } else {
    cljs.core.t13501 = function(nil_iter, meta13502) {
      this.nil_iter = nil_iter;
      this.meta13502 = meta13502;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t13501.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t13501.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t13501.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t13501.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13503) {
      var self__ = this;
      var _13503__$1 = this;
      return self__.meta13502;
    };
    cljs.core.t13501.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13503, meta13502__$1) {
      var self__ = this;
      var _13503__$1 = this;
      return new cljs.core.t13501(self__.nil_iter, meta13502__$1);
    };
    cljs.core.t13501.cljs$lang$type = true;
    cljs.core.t13501.cljs$lang$ctorStr = "cljs.core/t13501";
    cljs.core.t13501.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
      return cljs.core._write(writer__4364__auto__, "cljs.core/t13501");
    };
    cljs.core.__GT_t13501 = function __GT_t13501(nil_iter__$1, meta13502) {
      return new cljs.core.t13501(nil_iter__$1, meta13502);
    };
  }
  return new cljs.core.t13501(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3063, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3059, new cljs.core.Keyword(null, "file", "file", -1269645878), "D:\\workspace\\Clojure\\bottle\\target\\cljsbuild-compiler-0\\cljs\\core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = !(lt.stepper == null);
      if (and__3764__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3764__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__13504 = lt;
        var G__13505 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13504, G__13505) : self__.xform.call(null, G__13504, G__13505);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13506 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13506) : self__.xform.call(null, G__13506);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__13508 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13508) : xform.call(null, G__13508);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__13510 = cljs.core.next(iters__$1);
        iters__$1 = G__13510;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4663__auto___13511 = self__.iters.length;
  var i_13512 = 0;
  while (true) {
    if (i_13512 < n__4663__auto___13511) {
      self__.nexts[i_13512] = self__.iters[i_13512].next();
      var G__13513 = i_13512 + 1;
      i_13512 = G__13513;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = !(lt.stepper == null);
      if (and__3764__auto__) {
        return this$.hasNext();
      } else {
        return and__3764__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13509 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13509) : self__.xform.call(null, G__13509);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__13518 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13518) : xform.call(null, G__13518);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__13519_13523 = cljs.core.seq(colls);
  var chunk__13520_13524 = null;
  var count__13521_13525 = 0;
  var i__13522_13526 = 0;
  while (true) {
    if (i__13522_13526 < count__13521_13525) {
      var coll_13527 = chunk__13520_13524.cljs$core$IIndexed$_nth$arity$2(null, i__13522_13526);
      iters.push(cljs.core.iter(coll_13527));
      var G__13528 = seq__13519_13523;
      var G__13529 = chunk__13520_13524;
      var G__13530 = count__13521_13525;
      var G__13531 = i__13522_13526 + 1;
      seq__13519_13523 = G__13528;
      chunk__13520_13524 = G__13529;
      count__13521_13525 = G__13530;
      i__13522_13526 = G__13531;
      continue;
    } else {
      var temp__4126__auto___13532 = cljs.core.seq(seq__13519_13523);
      if (temp__4126__auto___13532) {
        var seq__13519_13533__$1 = temp__4126__auto___13532;
        if (cljs.core.chunked_seq_QMARK_(seq__13519_13533__$1)) {
          var c__4563__auto___13534 = cljs.core.chunk_first(seq__13519_13533__$1);
          var G__13535 = cljs.core.chunk_rest(seq__13519_13533__$1);
          var G__13536 = c__4563__auto___13534;
          var G__13537 = cljs.core.count(c__4563__auto___13534);
          var G__13538 = 0;
          seq__13519_13523 = G__13535;
          chunk__13520_13524 = G__13536;
          count__13521_13525 = G__13537;
          i__13522_13526 = G__13538;
          continue;
        } else {
          var coll_13539 = cljs.core.first(seq__13519_13533__$1);
          iters.push(cljs.core.iter(coll_13539));
          var G__13540 = cljs.core.next(seq__13519_13533__$1);
          var G__13541 = null;
          var G__13542 = 0;
          var G__13543 = 0;
          seq__13519_13523 = G__13540;
          chunk__13520_13524 = G__13541;
          count__13521_13525 = G__13542;
          i__13522_13526 = G__13543;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3776__auto__ = cljs.core.seq(coll);
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__13544__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__13544 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13545__i = 0, G__13545__a = new Array(arguments.length - 2);
        while (G__13545__i < G__13545__a.length) {
          G__13545__a[G__13545__i] = arguments[G__13545__i + 2];
          ++G__13545__i;
        }
        colls = new cljs.core.IndexedSeq(G__13545__a, 0);
      }
      return G__13544__delegate.call(this, xform, coll, colls);
    };
    G__13544.cljs$lang$maxFixedArity = 2;
    G__13544.cljs$lang$applyTo = function(arglist__13546) {
      var xform = cljs.core.first(arglist__13546);
      arglist__13546 = cljs.core.next(arglist__13546);
      var coll = cljs.core.first(arglist__13546);
      var colls = cljs.core.rest(arglist__13546);
      return G__13544__delegate(xform, coll, colls);
    };
    G__13544.cljs$core$IFn$_invoke$arity$variadic = G__13544__delegate;
    return G__13544;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__13547 = null;
        if (arguments.length > 2) {
          var G__13548__i = 0, G__13548__a = new Array(arguments.length - 2);
          while (G__13548__i < G__13548__a.length) {
            G__13548__a[G__13548__i] = arguments[G__13548__i + 2];
            ++G__13548__i;
          }
          G__13547 = new cljs.core.IndexedSeq(G__13548__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__13547);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__13550 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13550) : pred.call(null, G__13550);
      }())) {
        var G__13551 = pred;
        var G__13552 = cljs.core.next(coll);
        pred = G__13551;
        coll = G__13552;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3776__auto__ = function() {
        var G__13556 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13556) : pred.call(null, G__13556);
      }();
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        var G__13557 = pred;
        var G__13558 = cljs.core.next(coll);
        pred = G__13557;
        coll = G__13558;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13565 = null;
    var G__13565__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__13565__1 = function(x) {
      return cljs.core.not(function() {
        var G__13562 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13562) : f.call(null, G__13562);
      }());
    };
    var G__13565__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__13563 = x;
        var G__13564 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13563, G__13564) : f.call(null, G__13563, G__13564);
      }());
    };
    var G__13565__3 = function() {
      var G__13566__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__13566 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__13567__i = 0, G__13567__a = new Array(arguments.length - 2);
          while (G__13567__i < G__13567__a.length) {
            G__13567__a[G__13567__i] = arguments[G__13567__i + 2];
            ++G__13567__i;
          }
          zs = new cljs.core.IndexedSeq(G__13567__a, 0);
        }
        return G__13566__delegate.call(this, x, y, zs);
      };
      G__13566.cljs$lang$maxFixedArity = 2;
      G__13566.cljs$lang$applyTo = function(arglist__13568) {
        var x = cljs.core.first(arglist__13568);
        arglist__13568 = cljs.core.next(arglist__13568);
        var y = cljs.core.first(arglist__13568);
        var zs = cljs.core.rest(arglist__13568);
        return G__13566__delegate(x, y, zs);
      };
      G__13566.cljs$core$IFn$_invoke$arity$variadic = G__13566__delegate;
      return G__13566;
    }();
    G__13565 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13565__0.call(this);
        case 1:
          return G__13565__1.call(this, x);
        case 2:
          return G__13565__2.call(this, x, y);
        default:
          var G__13569 = null;
          if (arguments.length > 2) {
            var G__13570__i = 0, G__13570__a = new Array(arguments.length - 2);
            while (G__13570__i < G__13570__a.length) {
              G__13570__a[G__13570__i] = arguments[G__13570__i + 2];
              ++G__13570__i;
            }
            G__13569 = new cljs.core.IndexedSeq(G__13570__a, 0);
          }
          return G__13565__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13569);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13565.cljs$lang$maxFixedArity = 2;
    G__13565.cljs$lang$applyTo = G__13565__3.cljs$lang$applyTo;
    G__13565.cljs$core$IFn$_invoke$arity$0 = G__13565__0;
    G__13565.cljs$core$IFn$_invoke$arity$1 = G__13565__1;
    G__13565.cljs$core$IFn$_invoke$arity$2 = G__13565__2;
    G__13565.cljs$core$IFn$_invoke$arity$variadic = G__13565__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__13565;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13571__delegate = function(args) {
      return x;
    };
    var G__13571 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13572__i = 0, G__13572__a = new Array(arguments.length - 0);
        while (G__13572__i < G__13572__a.length) {
          G__13572__a[G__13572__i] = arguments[G__13572__i + 0];
          ++G__13572__i;
        }
        args = new cljs.core.IndexedSeq(G__13572__a, 0);
      }
      return G__13571__delegate.call(this, args);
    };
    G__13571.cljs$lang$maxFixedArity = 0;
    G__13571.cljs$lang$applyTo = function(arglist__13573) {
      var args = cljs.core.seq(arglist__13573);
      return G__13571__delegate(args);
    };
    G__13571.cljs$core$IFn$_invoke$arity$variadic = G__13571__delegate;
    return G__13571;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13628 = null;
      var G__13628__0 = function() {
        var G__13601 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13601) : f.call(null, G__13601);
      };
      var G__13628__1 = function(x) {
        var G__13602 = function() {
          var G__13603 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13603) : g.call(null, G__13603);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13602) : f.call(null, G__13602);
      };
      var G__13628__2 = function(x, y) {
        var G__13604 = function() {
          var G__13605 = x;
          var G__13606 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13605, G__13606) : g.call(null, G__13605, G__13606);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13604) : f.call(null, G__13604);
      };
      var G__13628__3 = function(x, y, z) {
        var G__13607 = function() {
          var G__13608 = x;
          var G__13609 = y;
          var G__13610 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13608, G__13609, G__13610) : g.call(null, G__13608, G__13609, G__13610);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13607) : f.call(null, G__13607);
      };
      var G__13628__4 = function() {
        var G__13629__delegate = function(x, y, z, args) {
          var G__13611 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13611) : f.call(null, G__13611);
        };
        var G__13629 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13630__i = 0, G__13630__a = new Array(arguments.length - 3);
            while (G__13630__i < G__13630__a.length) {
              G__13630__a[G__13630__i] = arguments[G__13630__i + 3];
              ++G__13630__i;
            }
            args = new cljs.core.IndexedSeq(G__13630__a, 0);
          }
          return G__13629__delegate.call(this, x, y, z, args);
        };
        G__13629.cljs$lang$maxFixedArity = 3;
        G__13629.cljs$lang$applyTo = function(arglist__13631) {
          var x = cljs.core.first(arglist__13631);
          arglist__13631 = cljs.core.next(arglist__13631);
          var y = cljs.core.first(arglist__13631);
          arglist__13631 = cljs.core.next(arglist__13631);
          var z = cljs.core.first(arglist__13631);
          var args = cljs.core.rest(arglist__13631);
          return G__13629__delegate(x, y, z, args);
        };
        G__13629.cljs$core$IFn$_invoke$arity$variadic = G__13629__delegate;
        return G__13629;
      }();
      G__13628 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13628__0.call(this);
          case 1:
            return G__13628__1.call(this, x);
          case 2:
            return G__13628__2.call(this, x, y);
          case 3:
            return G__13628__3.call(this, x, y, z);
          default:
            var G__13632 = null;
            if (arguments.length > 3) {
              var G__13633__i = 0, G__13633__a = new Array(arguments.length - 3);
              while (G__13633__i < G__13633__a.length) {
                G__13633__a[G__13633__i] = arguments[G__13633__i + 3];
                ++G__13633__i;
              }
              G__13632 = new cljs.core.IndexedSeq(G__13633__a, 0);
            }
            return G__13628__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13632);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13628.cljs$lang$maxFixedArity = 3;
      G__13628.cljs$lang$applyTo = G__13628__4.cljs$lang$applyTo;
      G__13628.cljs$core$IFn$_invoke$arity$0 = G__13628__0;
      G__13628.cljs$core$IFn$_invoke$arity$1 = G__13628__1;
      G__13628.cljs$core$IFn$_invoke$arity$2 = G__13628__2;
      G__13628.cljs$core$IFn$_invoke$arity$3 = G__13628__3;
      G__13628.cljs$core$IFn$_invoke$arity$variadic = G__13628__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13628;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13634 = null;
      var G__13634__0 = function() {
        var G__13612 = function() {
          var G__13613 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13613) : g.call(null, G__13613);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13612) : f.call(null, G__13612);
      };
      var G__13634__1 = function(x) {
        var G__13614 = function() {
          var G__13615 = function() {
            var G__13616 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13616) : h.call(null, G__13616);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13615) : g.call(null, G__13615);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13614) : f.call(null, G__13614);
      };
      var G__13634__2 = function(x, y) {
        var G__13617 = function() {
          var G__13618 = function() {
            var G__13619 = x;
            var G__13620 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13619, G__13620) : h.call(null, G__13619, G__13620);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13618) : g.call(null, G__13618);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13617) : f.call(null, G__13617);
      };
      var G__13634__3 = function(x, y, z) {
        var G__13621 = function() {
          var G__13622 = function() {
            var G__13623 = x;
            var G__13624 = y;
            var G__13625 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13623, G__13624, G__13625) : h.call(null, G__13623, G__13624, G__13625);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13622) : g.call(null, G__13622);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13621) : f.call(null, G__13621);
      };
      var G__13634__4 = function() {
        var G__13635__delegate = function(x, y, z, args) {
          var G__13626 = function() {
            var G__13627 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13627) : g.call(null, G__13627);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13626) : f.call(null, G__13626);
        };
        var G__13635 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13636__i = 0, G__13636__a = new Array(arguments.length - 3);
            while (G__13636__i < G__13636__a.length) {
              G__13636__a[G__13636__i] = arguments[G__13636__i + 3];
              ++G__13636__i;
            }
            args = new cljs.core.IndexedSeq(G__13636__a, 0);
          }
          return G__13635__delegate.call(this, x, y, z, args);
        };
        G__13635.cljs$lang$maxFixedArity = 3;
        G__13635.cljs$lang$applyTo = function(arglist__13637) {
          var x = cljs.core.first(arglist__13637);
          arglist__13637 = cljs.core.next(arglist__13637);
          var y = cljs.core.first(arglist__13637);
          arglist__13637 = cljs.core.next(arglist__13637);
          var z = cljs.core.first(arglist__13637);
          var args = cljs.core.rest(arglist__13637);
          return G__13635__delegate(x, y, z, args);
        };
        G__13635.cljs$core$IFn$_invoke$arity$variadic = G__13635__delegate;
        return G__13635;
      }();
      G__13634 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13634__0.call(this);
          case 1:
            return G__13634__1.call(this, x);
          case 2:
            return G__13634__2.call(this, x, y);
          case 3:
            return G__13634__3.call(this, x, y, z);
          default:
            var G__13638 = null;
            if (arguments.length > 3) {
              var G__13639__i = 0, G__13639__a = new Array(arguments.length - 3);
              while (G__13639__i < G__13639__a.length) {
                G__13639__a[G__13639__i] = arguments[G__13639__i + 3];
                ++G__13639__i;
              }
              G__13638 = new cljs.core.IndexedSeq(G__13639__a, 0);
            }
            return G__13634__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13638);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13634.cljs$lang$maxFixedArity = 3;
      G__13634.cljs$lang$applyTo = G__13634__4.cljs$lang$applyTo;
      G__13634.cljs$core$IFn$_invoke$arity$0 = G__13634__0;
      G__13634.cljs$core$IFn$_invoke$arity$1 = G__13634__1;
      G__13634.cljs$core$IFn$_invoke$arity$2 = G__13634__2;
      G__13634.cljs$core$IFn$_invoke$arity$3 = G__13634__3;
      G__13634.cljs$core$IFn$_invoke$arity$variadic = G__13634__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13634;
    }();
  };
  var comp__4 = function() {
    var G__13640__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__13641__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__13642 = cljs.core.first(fs__$2).call(null, ret);
                var G__13643 = cljs.core.next(fs__$2);
                ret = G__13642;
                fs__$2 = G__13643;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__13641 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__13644__i = 0, G__13644__a = new Array(arguments.length - 0);
              while (G__13644__i < G__13644__a.length) {
                G__13644__a[G__13644__i] = arguments[G__13644__i + 0];
                ++G__13644__i;
              }
              args = new cljs.core.IndexedSeq(G__13644__a, 0);
            }
            return G__13641__delegate.call(this, args);
          };
          G__13641.cljs$lang$maxFixedArity = 0;
          G__13641.cljs$lang$applyTo = function(arglist__13645) {
            var args = cljs.core.seq(arglist__13645);
            return G__13641__delegate(args);
          };
          G__13641.cljs$core$IFn$_invoke$arity$variadic = G__13641__delegate;
          return G__13641;
        }();
      }(fs__$1);
    };
    var G__13640 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__13646__i = 0, G__13646__a = new Array(arguments.length - 3);
        while (G__13646__i < G__13646__a.length) {
          G__13646__a[G__13646__i] = arguments[G__13646__i + 3];
          ++G__13646__i;
        }
        fs = new cljs.core.IndexedSeq(G__13646__a, 0);
      }
      return G__13640__delegate.call(this, f1, f2, f3, fs);
    };
    G__13640.cljs$lang$maxFixedArity = 3;
    G__13640.cljs$lang$applyTo = function(arglist__13647) {
      var f1 = cljs.core.first(arglist__13647);
      arglist__13647 = cljs.core.next(arglist__13647);
      var f2 = cljs.core.first(arglist__13647);
      arglist__13647 = cljs.core.next(arglist__13647);
      var f3 = cljs.core.first(arglist__13647);
      var fs = cljs.core.rest(arglist__13647);
      return G__13640__delegate(f1, f2, f3, fs);
    };
    G__13640.cljs$core$IFn$_invoke$arity$variadic = G__13640__delegate;
    return G__13640;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__13648 = null;
        if (arguments.length > 3) {
          var G__13649__i = 0, G__13649__a = new Array(arguments.length - 3);
          while (G__13649__i < G__13649__a.length) {
            G__13649__a[G__13649__i] = arguments[G__13649__i + 3];
            ++G__13649__i;
          }
          G__13648 = new cljs.core.IndexedSeq(G__13649__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__13648);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13734 = null;
      var G__13734__0 = function() {
        var G__13692 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13692) : f.call(null, G__13692);
      };
      var G__13734__1 = function(x) {
        var G__13693 = arg1;
        var G__13694 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13693, G__13694) : f.call(null, G__13693, G__13694);
      };
      var G__13734__2 = function(x, y) {
        var G__13695 = arg1;
        var G__13696 = x;
        var G__13697 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13695, G__13696, G__13697) : f.call(null, G__13695, G__13696, G__13697);
      };
      var G__13734__3 = function(x, y, z) {
        var G__13698 = arg1;
        var G__13699 = x;
        var G__13700 = y;
        var G__13701 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13698, G__13699, G__13700, G__13701) : f.call(null, G__13698, G__13699, G__13700, G__13701);
      };
      var G__13734__4 = function() {
        var G__13735__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__13735 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13736__i = 0, G__13736__a = new Array(arguments.length - 3);
            while (G__13736__i < G__13736__a.length) {
              G__13736__a[G__13736__i] = arguments[G__13736__i + 3];
              ++G__13736__i;
            }
            args = new cljs.core.IndexedSeq(G__13736__a, 0);
          }
          return G__13735__delegate.call(this, x, y, z, args);
        };
        G__13735.cljs$lang$maxFixedArity = 3;
        G__13735.cljs$lang$applyTo = function(arglist__13737) {
          var x = cljs.core.first(arglist__13737);
          arglist__13737 = cljs.core.next(arglist__13737);
          var y = cljs.core.first(arglist__13737);
          arglist__13737 = cljs.core.next(arglist__13737);
          var z = cljs.core.first(arglist__13737);
          var args = cljs.core.rest(arglist__13737);
          return G__13735__delegate(x, y, z, args);
        };
        G__13735.cljs$core$IFn$_invoke$arity$variadic = G__13735__delegate;
        return G__13735;
      }();
      G__13734 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13734__0.call(this);
          case 1:
            return G__13734__1.call(this, x);
          case 2:
            return G__13734__2.call(this, x, y);
          case 3:
            return G__13734__3.call(this, x, y, z);
          default:
            var G__13738 = null;
            if (arguments.length > 3) {
              var G__13739__i = 0, G__13739__a = new Array(arguments.length - 3);
              while (G__13739__i < G__13739__a.length) {
                G__13739__a[G__13739__i] = arguments[G__13739__i + 3];
                ++G__13739__i;
              }
              G__13738 = new cljs.core.IndexedSeq(G__13739__a, 0);
            }
            return G__13734__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13738);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13734.cljs$lang$maxFixedArity = 3;
      G__13734.cljs$lang$applyTo = G__13734__4.cljs$lang$applyTo;
      G__13734.cljs$core$IFn$_invoke$arity$0 = G__13734__0;
      G__13734.cljs$core$IFn$_invoke$arity$1 = G__13734__1;
      G__13734.cljs$core$IFn$_invoke$arity$2 = G__13734__2;
      G__13734.cljs$core$IFn$_invoke$arity$3 = G__13734__3;
      G__13734.cljs$core$IFn$_invoke$arity$variadic = G__13734__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13734;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13740 = null;
      var G__13740__0 = function() {
        var G__13702 = arg1;
        var G__13703 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13702, G__13703) : f.call(null, G__13702, G__13703);
      };
      var G__13740__1 = function(x) {
        var G__13704 = arg1;
        var G__13705 = arg2;
        var G__13706 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13704, G__13705, G__13706) : f.call(null, G__13704, G__13705, G__13706);
      };
      var G__13740__2 = function(x, y) {
        var G__13707 = arg1;
        var G__13708 = arg2;
        var G__13709 = x;
        var G__13710 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13707, G__13708, G__13709, G__13710) : f.call(null, G__13707, G__13708, G__13709, G__13710);
      };
      var G__13740__3 = function(x, y, z) {
        var G__13711 = arg1;
        var G__13712 = arg2;
        var G__13713 = x;
        var G__13714 = y;
        var G__13715 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13711, G__13712, G__13713, G__13714, G__13715) : f.call(null, G__13711, G__13712, G__13713, G__13714, G__13715);
      };
      var G__13740__4 = function() {
        var G__13741__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__13741 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13742__i = 0, G__13742__a = new Array(arguments.length - 3);
            while (G__13742__i < G__13742__a.length) {
              G__13742__a[G__13742__i] = arguments[G__13742__i + 3];
              ++G__13742__i;
            }
            args = new cljs.core.IndexedSeq(G__13742__a, 0);
          }
          return G__13741__delegate.call(this, x, y, z, args);
        };
        G__13741.cljs$lang$maxFixedArity = 3;
        G__13741.cljs$lang$applyTo = function(arglist__13743) {
          var x = cljs.core.first(arglist__13743);
          arglist__13743 = cljs.core.next(arglist__13743);
          var y = cljs.core.first(arglist__13743);
          arglist__13743 = cljs.core.next(arglist__13743);
          var z = cljs.core.first(arglist__13743);
          var args = cljs.core.rest(arglist__13743);
          return G__13741__delegate(x, y, z, args);
        };
        G__13741.cljs$core$IFn$_invoke$arity$variadic = G__13741__delegate;
        return G__13741;
      }();
      G__13740 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13740__0.call(this);
          case 1:
            return G__13740__1.call(this, x);
          case 2:
            return G__13740__2.call(this, x, y);
          case 3:
            return G__13740__3.call(this, x, y, z);
          default:
            var G__13744 = null;
            if (arguments.length > 3) {
              var G__13745__i = 0, G__13745__a = new Array(arguments.length - 3);
              while (G__13745__i < G__13745__a.length) {
                G__13745__a[G__13745__i] = arguments[G__13745__i + 3];
                ++G__13745__i;
              }
              G__13744 = new cljs.core.IndexedSeq(G__13745__a, 0);
            }
            return G__13740__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13744);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13740.cljs$lang$maxFixedArity = 3;
      G__13740.cljs$lang$applyTo = G__13740__4.cljs$lang$applyTo;
      G__13740.cljs$core$IFn$_invoke$arity$0 = G__13740__0;
      G__13740.cljs$core$IFn$_invoke$arity$1 = G__13740__1;
      G__13740.cljs$core$IFn$_invoke$arity$2 = G__13740__2;
      G__13740.cljs$core$IFn$_invoke$arity$3 = G__13740__3;
      G__13740.cljs$core$IFn$_invoke$arity$variadic = G__13740__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13740;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13746 = null;
      var G__13746__0 = function() {
        var G__13716 = arg1;
        var G__13717 = arg2;
        var G__13718 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13716, G__13717, G__13718) : f.call(null, G__13716, G__13717, G__13718);
      };
      var G__13746__1 = function(x) {
        var G__13719 = arg1;
        var G__13720 = arg2;
        var G__13721 = arg3;
        var G__13722 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13719, G__13720, G__13721, G__13722) : f.call(null, G__13719, G__13720, G__13721, G__13722);
      };
      var G__13746__2 = function(x, y) {
        var G__13723 = arg1;
        var G__13724 = arg2;
        var G__13725 = arg3;
        var G__13726 = x;
        var G__13727 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13723, G__13724, G__13725, G__13726, G__13727) : f.call(null, G__13723, G__13724, G__13725, G__13726, G__13727);
      };
      var G__13746__3 = function(x, y, z) {
        var G__13728 = arg1;
        var G__13729 = arg2;
        var G__13730 = arg3;
        var G__13731 = x;
        var G__13732 = y;
        var G__13733 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13728, G__13729, G__13730, G__13731, G__13732, G__13733) : f.call(null, G__13728, G__13729, G__13730, G__13731, G__13732, G__13733);
      };
      var G__13746__4 = function() {
        var G__13747__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__13747 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13748__i = 0, G__13748__a = new Array(arguments.length - 3);
            while (G__13748__i < G__13748__a.length) {
              G__13748__a[G__13748__i] = arguments[G__13748__i + 3];
              ++G__13748__i;
            }
            args = new cljs.core.IndexedSeq(G__13748__a, 0);
          }
          return G__13747__delegate.call(this, x, y, z, args);
        };
        G__13747.cljs$lang$maxFixedArity = 3;
        G__13747.cljs$lang$applyTo = function(arglist__13749) {
          var x = cljs.core.first(arglist__13749);
          arglist__13749 = cljs.core.next(arglist__13749);
          var y = cljs.core.first(arglist__13749);
          arglist__13749 = cljs.core.next(arglist__13749);
          var z = cljs.core.first(arglist__13749);
          var args = cljs.core.rest(arglist__13749);
          return G__13747__delegate(x, y, z, args);
        };
        G__13747.cljs$core$IFn$_invoke$arity$variadic = G__13747__delegate;
        return G__13747;
      }();
      G__13746 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13746__0.call(this);
          case 1:
            return G__13746__1.call(this, x);
          case 2:
            return G__13746__2.call(this, x, y);
          case 3:
            return G__13746__3.call(this, x, y, z);
          default:
            var G__13750 = null;
            if (arguments.length > 3) {
              var G__13751__i = 0, G__13751__a = new Array(arguments.length - 3);
              while (G__13751__i < G__13751__a.length) {
                G__13751__a[G__13751__i] = arguments[G__13751__i + 3];
                ++G__13751__i;
              }
              G__13750 = new cljs.core.IndexedSeq(G__13751__a, 0);
            }
            return G__13746__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13750);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13746.cljs$lang$maxFixedArity = 3;
      G__13746.cljs$lang$applyTo = G__13746__4.cljs$lang$applyTo;
      G__13746.cljs$core$IFn$_invoke$arity$0 = G__13746__0;
      G__13746.cljs$core$IFn$_invoke$arity$1 = G__13746__1;
      G__13746.cljs$core$IFn$_invoke$arity$2 = G__13746__2;
      G__13746.cljs$core$IFn$_invoke$arity$3 = G__13746__3;
      G__13746.cljs$core$IFn$_invoke$arity$variadic = G__13746__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13746;
    }();
  };
  var partial__5 = function() {
    var G__13752__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13753__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__13753 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__13754__i = 0, G__13754__a = new Array(arguments.length - 0);
            while (G__13754__i < G__13754__a.length) {
              G__13754__a[G__13754__i] = arguments[G__13754__i + 0];
              ++G__13754__i;
            }
            args = new cljs.core.IndexedSeq(G__13754__a, 0);
          }
          return G__13753__delegate.call(this, args);
        };
        G__13753.cljs$lang$maxFixedArity = 0;
        G__13753.cljs$lang$applyTo = function(arglist__13755) {
          var args = cljs.core.seq(arglist__13755);
          return G__13753__delegate(args);
        };
        G__13753.cljs$core$IFn$_invoke$arity$variadic = G__13753__delegate;
        return G__13753;
      }();
    };
    var G__13752 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13756__i = 0, G__13756__a = new Array(arguments.length - 4);
        while (G__13756__i < G__13756__a.length) {
          G__13756__a[G__13756__i] = arguments[G__13756__i + 4];
          ++G__13756__i;
        }
        more = new cljs.core.IndexedSeq(G__13756__a, 0);
      }
      return G__13752__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__13752.cljs$lang$maxFixedArity = 4;
    G__13752.cljs$lang$applyTo = function(arglist__13757) {
      var f = cljs.core.first(arglist__13757);
      arglist__13757 = cljs.core.next(arglist__13757);
      var arg1 = cljs.core.first(arglist__13757);
      arglist__13757 = cljs.core.next(arglist__13757);
      var arg2 = cljs.core.first(arglist__13757);
      arglist__13757 = cljs.core.next(arglist__13757);
      var arg3 = cljs.core.first(arglist__13757);
      var more = cljs.core.rest(arglist__13757);
      return G__13752__delegate(f, arg1, arg2, arg3, more);
    };
    G__13752.cljs$core$IFn$_invoke$arity$variadic = G__13752__delegate;
    return G__13752;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__13758 = null;
        if (arguments.length > 4) {
          var G__13759__i = 0, G__13759__a = new Array(arguments.length - 4);
          while (G__13759__i < G__13759__a.length) {
            G__13759__a[G__13759__i] = arguments[G__13759__i + 4];
            ++G__13759__i;
          }
          G__13758 = new cljs.core.IndexedSeq(G__13759__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__13758);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13792 = null;
      var G__13792__1 = function(a) {
        var G__13776 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13776) : f.call(null, G__13776);
      };
      var G__13792__2 = function(a, b) {
        var G__13777 = a == null ? x : a;
        var G__13778 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13777, G__13778) : f.call(null, G__13777, G__13778);
      };
      var G__13792__3 = function(a, b, c) {
        var G__13779 = a == null ? x : a;
        var G__13780 = b;
        var G__13781 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13779, G__13780, G__13781) : f.call(null, G__13779, G__13780, G__13781);
      };
      var G__13792__4 = function() {
        var G__13793__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__13793 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13794__i = 0, G__13794__a = new Array(arguments.length - 3);
            while (G__13794__i < G__13794__a.length) {
              G__13794__a[G__13794__i] = arguments[G__13794__i + 3];
              ++G__13794__i;
            }
            ds = new cljs.core.IndexedSeq(G__13794__a, 0);
          }
          return G__13793__delegate.call(this, a, b, c, ds);
        };
        G__13793.cljs$lang$maxFixedArity = 3;
        G__13793.cljs$lang$applyTo = function(arglist__13795) {
          var a = cljs.core.first(arglist__13795);
          arglist__13795 = cljs.core.next(arglist__13795);
          var b = cljs.core.first(arglist__13795);
          arglist__13795 = cljs.core.next(arglist__13795);
          var c = cljs.core.first(arglist__13795);
          var ds = cljs.core.rest(arglist__13795);
          return G__13793__delegate(a, b, c, ds);
        };
        G__13793.cljs$core$IFn$_invoke$arity$variadic = G__13793__delegate;
        return G__13793;
      }();
      G__13792 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13792__1.call(this, a);
          case 2:
            return G__13792__2.call(this, a, b);
          case 3:
            return G__13792__3.call(this, a, b, c);
          default:
            var G__13796 = null;
            if (arguments.length > 3) {
              var G__13797__i = 0, G__13797__a = new Array(arguments.length - 3);
              while (G__13797__i < G__13797__a.length) {
                G__13797__a[G__13797__i] = arguments[G__13797__i + 3];
                ++G__13797__i;
              }
              G__13796 = new cljs.core.IndexedSeq(G__13797__a, 0);
            }
            return G__13792__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13796);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13792.cljs$lang$maxFixedArity = 3;
      G__13792.cljs$lang$applyTo = G__13792__4.cljs$lang$applyTo;
      G__13792.cljs$core$IFn$_invoke$arity$1 = G__13792__1;
      G__13792.cljs$core$IFn$_invoke$arity$2 = G__13792__2;
      G__13792.cljs$core$IFn$_invoke$arity$3 = G__13792__3;
      G__13792.cljs$core$IFn$_invoke$arity$variadic = G__13792__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13792;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13798 = null;
      var G__13798__2 = function(a, b) {
        var G__13782 = a == null ? x : a;
        var G__13783 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13782, G__13783) : f.call(null, G__13782, G__13783);
      };
      var G__13798__3 = function(a, b, c) {
        var G__13784 = a == null ? x : a;
        var G__13785 = b == null ? y : b;
        var G__13786 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13784, G__13785, G__13786) : f.call(null, G__13784, G__13785, G__13786);
      };
      var G__13798__4 = function() {
        var G__13799__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__13799 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13800__i = 0, G__13800__a = new Array(arguments.length - 3);
            while (G__13800__i < G__13800__a.length) {
              G__13800__a[G__13800__i] = arguments[G__13800__i + 3];
              ++G__13800__i;
            }
            ds = new cljs.core.IndexedSeq(G__13800__a, 0);
          }
          return G__13799__delegate.call(this, a, b, c, ds);
        };
        G__13799.cljs$lang$maxFixedArity = 3;
        G__13799.cljs$lang$applyTo = function(arglist__13801) {
          var a = cljs.core.first(arglist__13801);
          arglist__13801 = cljs.core.next(arglist__13801);
          var b = cljs.core.first(arglist__13801);
          arglist__13801 = cljs.core.next(arglist__13801);
          var c = cljs.core.first(arglist__13801);
          var ds = cljs.core.rest(arglist__13801);
          return G__13799__delegate(a, b, c, ds);
        };
        G__13799.cljs$core$IFn$_invoke$arity$variadic = G__13799__delegate;
        return G__13799;
      }();
      G__13798 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13798__2.call(this, a, b);
          case 3:
            return G__13798__3.call(this, a, b, c);
          default:
            var G__13802 = null;
            if (arguments.length > 3) {
              var G__13803__i = 0, G__13803__a = new Array(arguments.length - 3);
              while (G__13803__i < G__13803__a.length) {
                G__13803__a[G__13803__i] = arguments[G__13803__i + 3];
                ++G__13803__i;
              }
              G__13802 = new cljs.core.IndexedSeq(G__13803__a, 0);
            }
            return G__13798__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13802);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13798.cljs$lang$maxFixedArity = 3;
      G__13798.cljs$lang$applyTo = G__13798__4.cljs$lang$applyTo;
      G__13798.cljs$core$IFn$_invoke$arity$2 = G__13798__2;
      G__13798.cljs$core$IFn$_invoke$arity$3 = G__13798__3;
      G__13798.cljs$core$IFn$_invoke$arity$variadic = G__13798__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13798;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13804 = null;
      var G__13804__2 = function(a, b) {
        var G__13787 = a == null ? x : a;
        var G__13788 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13787, G__13788) : f.call(null, G__13787, G__13788);
      };
      var G__13804__3 = function(a, b, c) {
        var G__13789 = a == null ? x : a;
        var G__13790 = b == null ? y : b;
        var G__13791 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13789, G__13790, G__13791) : f.call(null, G__13789, G__13790, G__13791);
      };
      var G__13804__4 = function() {
        var G__13805__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__13805 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13806__i = 0, G__13806__a = new Array(arguments.length - 3);
            while (G__13806__i < G__13806__a.length) {
              G__13806__a[G__13806__i] = arguments[G__13806__i + 3];
              ++G__13806__i;
            }
            ds = new cljs.core.IndexedSeq(G__13806__a, 0);
          }
          return G__13805__delegate.call(this, a, b, c, ds);
        };
        G__13805.cljs$lang$maxFixedArity = 3;
        G__13805.cljs$lang$applyTo = function(arglist__13807) {
          var a = cljs.core.first(arglist__13807);
          arglist__13807 = cljs.core.next(arglist__13807);
          var b = cljs.core.first(arglist__13807);
          arglist__13807 = cljs.core.next(arglist__13807);
          var c = cljs.core.first(arglist__13807);
          var ds = cljs.core.rest(arglist__13807);
          return G__13805__delegate(a, b, c, ds);
        };
        G__13805.cljs$core$IFn$_invoke$arity$variadic = G__13805__delegate;
        return G__13805;
      }();
      G__13804 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13804__2.call(this, a, b);
          case 3:
            return G__13804__3.call(this, a, b, c);
          default:
            var G__13808 = null;
            if (arguments.length > 3) {
              var G__13809__i = 0, G__13809__a = new Array(arguments.length - 3);
              while (G__13809__i < G__13809__a.length) {
                G__13809__a[G__13809__i] = arguments[G__13809__i + 3];
                ++G__13809__i;
              }
              G__13808 = new cljs.core.IndexedSeq(G__13809__a, 0);
            }
            return G__13804__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13808);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13804.cljs$lang$maxFixedArity = 3;
      G__13804.cljs$lang$applyTo = G__13804__4.cljs$lang$applyTo;
      G__13804.cljs$core$IFn$_invoke$arity$2 = G__13804__2;
      G__13804.cljs$core$IFn$_invoke$arity$3 = G__13804__3;
      G__13804.cljs$core$IFn$_invoke$arity$variadic = G__13804__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13804;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__13840 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13840) : cljs.core.volatile_BANG_.call(null, G__13840);
      }();
      return function(i) {
        return function() {
          var G__13870 = null;
          var G__13870__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13870__1 = function(result) {
            var G__13841 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13841) : rf.call(null, G__13841);
          };
          var G__13870__2 = function(result, input) {
            var G__13842 = result;
            var G__13843 = function() {
              var G__13844 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__13845 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13844, G__13845) : f.call(null, G__13844, G__13845);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13842, G__13843) : rf.call(null, G__13842, G__13843);
          };
          G__13870 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13870__0.call(this);
              case 1:
                return G__13870__1.call(this, result);
              case 2:
                return G__13870__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13870.cljs$core$IFn$_invoke$arity$0 = G__13870__0;
          G__13870.cljs$core$IFn$_invoke$arity$1 = G__13870__1;
          G__13870.cljs$core$IFn$_invoke$arity$2 = G__13870__2;
          return G__13870;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4663__auto___13871 = size;
            var i_13872 = 0;
            while (true) {
              if (i_13872 < n__4663__auto___13871) {
                cljs.core.chunk_append(b, function() {
                  var G__13866 = idx + i_13872;
                  var G__13867 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13872);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13866, G__13867) : f.call(null, G__13866, G__13867);
                }());
                var G__13873 = i_13872 + 1;
                i_13872 = G__13873;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__13868 = idx;
              var G__13869 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13868, G__13869) : f.call(null, G__13868, G__13869);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13892 = null;
        var G__13892__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13892__1 = function(result) {
          var G__13886 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13886) : rf.call(null, G__13886);
        };
        var G__13892__2 = function(result, input) {
          var v = function() {
            var G__13887 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13887) : f.call(null, G__13887);
          }();
          if (v == null) {
            return result;
          } else {
            var G__13888 = result;
            var G__13889 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13888, G__13889) : rf.call(null, G__13888, G__13889);
          }
        };
        G__13892 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13892__0.call(this);
            case 1:
              return G__13892__1.call(this, result);
            case 2:
              return G__13892__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13892.cljs$core$IFn$_invoke$arity$0 = G__13892__0;
        G__13892.cljs$core$IFn$_invoke$arity$1 = G__13892__1;
        G__13892.cljs$core$IFn$_invoke$arity$2 = G__13892__2;
        return G__13892;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4663__auto___13893 = size;
          var i_13894 = 0;
          while (true) {
            if (i_13894 < n__4663__auto___13893) {
              var x_13895 = function() {
                var G__13890 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13894);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13890) : f.call(null, G__13890);
              }();
              if (x_13895 == null) {
              } else {
                cljs.core.chunk_append(b, x_13895);
              }
              var G__13896 = i_13894 + 1;
              i_13894 = G__13896;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__13891 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13891) : f.call(null, G__13891);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__13897 = this$__$1;
  return goog.getUid(G__13897);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__13898 = cljs.core.seq(self__.watches);
  var chunk__13899 = null;
  var count__13900 = 0;
  var i__13901 = 0;
  while (true) {
    if (i__13901 < count__13900) {
      var vec__13902 = chunk__13899.cljs$core$IIndexed$_nth$arity$2(null, i__13901);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13902, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13902, 1, null);
      var G__13903_13912 = key;
      var G__13904_13913 = this$__$1;
      var G__13905_13914 = oldval;
      var G__13906_13915 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13903_13912, G__13904_13913, G__13905_13914, G__13906_13915) : f.call(null, G__13903_13912, G__13904_13913, G__13905_13914, G__13906_13915);
      var G__13916 = seq__13898;
      var G__13917 = chunk__13899;
      var G__13918 = count__13900;
      var G__13919 = i__13901 + 1;
      seq__13898 = G__13916;
      chunk__13899 = G__13917;
      count__13900 = G__13918;
      i__13901 = G__13919;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13898);
      if (temp__4126__auto__) {
        var seq__13898__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13898__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__13898__$1);
          var G__13920 = cljs.core.chunk_rest(seq__13898__$1);
          var G__13921 = c__4563__auto__;
          var G__13922 = cljs.core.count(c__4563__auto__);
          var G__13923 = 0;
          seq__13898 = G__13920;
          chunk__13899 = G__13921;
          count__13900 = G__13922;
          i__13901 = G__13923;
          continue;
        } else {
          var vec__13907 = cljs.core.first(seq__13898__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13907, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13907, 1, null);
          var G__13908_13924 = key;
          var G__13909_13925 = this$__$1;
          var G__13910_13926 = oldval;
          var G__13911_13927 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13908_13924, G__13909_13925, G__13910_13926, G__13911_13927) : f.call(null, G__13908_13924, G__13909_13925, G__13910_13926, G__13911_13927);
          var G__13928 = cljs.core.next(seq__13898__$1);
          var G__13929 = null;
          var G__13930 = 0;
          var G__13931 = 0;
          seq__13898 = G__13928;
          chunk__13899 = G__13929;
          count__13900 = G__13930;
          i__13901 = G__13931;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__13935__delegate = function(x, p__13932) {
      var map__13934 = p__13932;
      var map__13934__$1 = cljs.core.seq_QMARK_(map__13934) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13934) : map__13934;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13934__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13934__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__13935 = function(x, var_args) {
      var p__13932 = null;
      if (arguments.length > 1) {
        var G__13936__i = 0, G__13936__a = new Array(arguments.length - 1);
        while (G__13936__i < G__13936__a.length) {
          G__13936__a[G__13936__i] = arguments[G__13936__i + 1];
          ++G__13936__i;
        }
        p__13932 = new cljs.core.IndexedSeq(G__13936__a, 0);
      }
      return G__13935__delegate.call(this, x, p__13932);
    };
    G__13935.cljs$lang$maxFixedArity = 1;
    G__13935.cljs$lang$applyTo = function(arglist__13937) {
      var x = cljs.core.first(arglist__13937);
      var p__13932 = cljs.core.rest(arglist__13937);
      return G__13935__delegate(x, p__13932);
    };
    G__13935.cljs$core$IFn$_invoke$arity$variadic = G__13935__delegate;
    return G__13935;
  }();
  atom = function(x, var_args) {
    var p__13932 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__13938 = null;
        if (arguments.length > 1) {
          var G__13939__i = 0, G__13939__a = new Array(arguments.length - 1);
          while (G__13939__i < G__13939__a.length) {
            G__13939__a[G__13939__i] = arguments[G__13939__i + 1];
            ++G__13939__i;
          }
          G__13938 = new cljs.core.IndexedSeq(G__13939__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13938);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__13942 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13942) : validate.call(null, G__13942);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__13943 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13943) : cljs.core.pr_str.call(null, G__13943);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13950 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13950) : f.call(null, G__13950);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13951 = a.state;
        var G__13952 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13951, G__13952) : f.call(null, G__13951, G__13952);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13953 = a.state;
        var G__13954 = x;
        var G__13955 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13953, G__13954, G__13955) : f.call(null, G__13953, G__13954, G__13955);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__13956__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__13956 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13957__i = 0, G__13957__a = new Array(arguments.length - 4);
        while (G__13957__i < G__13957__a.length) {
          G__13957__a[G__13957__i] = arguments[G__13957__i + 4];
          ++G__13957__i;
        }
        more = new cljs.core.IndexedSeq(G__13957__a, 0);
      }
      return G__13956__delegate.call(this, a, f, x, y, more);
    };
    G__13956.cljs$lang$maxFixedArity = 4;
    G__13956.cljs$lang$applyTo = function(arglist__13958) {
      var a = cljs.core.first(arglist__13958);
      arglist__13958 = cljs.core.next(arglist__13958);
      var f = cljs.core.first(arglist__13958);
      arglist__13958 = cljs.core.next(arglist__13958);
      var x = cljs.core.first(arglist__13958);
      arglist__13958 = cljs.core.next(arglist__13958);
      var y = cljs.core.first(arglist__13958);
      var more = cljs.core.rest(arglist__13958);
      return G__13956__delegate(a, f, x, y, more);
    };
    G__13956.cljs$core$IFn$_invoke$arity$variadic = G__13956__delegate;
    return G__13956;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__13959 = null;
        if (arguments.length > 4) {
          var G__13960__i = 0, G__13960__a = new Array(arguments.length - 4);
          while (G__13960__i < G__13960__a.length) {
            G__13960__a[G__13960__i] = arguments[G__13960__i + 4];
            ++G__13960__i;
          }
          G__13959 = new cljs.core.IndexedSeq(G__13960__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__13959);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__14027 = null;
          var G__14027__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14027__1 = function(result) {
            var G__13994 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13994) : rf.call(null, G__13994);
          };
          var G__14027__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__13995 = i;
              var G__13996 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13995, G__13996) : f.call(null, G__13995, G__13996);
            }();
            if (v == null) {
              return result;
            } else {
              var G__13997 = result;
              var G__13998 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13997, G__13998) : rf.call(null, G__13997, G__13998);
            }
          };
          G__14027 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14027__0.call(this);
              case 1:
                return G__14027__1.call(this, result);
              case 2:
                return G__14027__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14027.cljs$core$IFn$_invoke$arity$0 = G__14027__0;
          G__14027.cljs$core$IFn$_invoke$arity$1 = G__14027__1;
          G__14027.cljs$core$IFn$_invoke$arity$2 = G__14027__2;
          return G__14027;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4663__auto___14028 = size;
            var i_14029 = 0;
            while (true) {
              if (i_14029 < n__4663__auto___14028) {
                var x_14030 = function() {
                  var G__14023 = idx + i_14029;
                  var G__14024 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14029);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14023, G__14024) : f.call(null, G__14023, G__14024);
                }();
                if (x_14030 == null) {
                } else {
                  cljs.core.chunk_append(b, x_14030);
                }
                var G__14031 = i_14029 + 1;
                i_14029 = G__14031;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__14025 = idx;
              var G__14026 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14025, G__14026) : f.call(null, G__14025, G__14026);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__14245 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14245) : p.call(null, G__14245);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14247 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14247) : p.call(null, G__14247);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var G__14248 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14248) : p.call(null, G__14248);
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14250 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14250) : p.call(null, G__14250);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__14252 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14252) : p.call(null, G__14252);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var G__14253 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14253) : p.call(null, G__14253);
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__14422__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__14422 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14423__i = 0, G__14423__a = new Array(arguments.length - 3);
            while (G__14423__i < G__14423__a.length) {
              G__14423__a[G__14423__i] = arguments[G__14423__i + 3];
              ++G__14423__i;
            }
            args = new cljs.core.IndexedSeq(G__14423__a, 0);
          }
          return G__14422__delegate.call(this, x, y, z, args);
        };
        G__14422.cljs$lang$maxFixedArity = 3;
        G__14422.cljs$lang$applyTo = function(arglist__14424) {
          var x = cljs.core.first(arglist__14424);
          arglist__14424 = cljs.core.next(arglist__14424);
          var y = cljs.core.first(arglist__14424);
          arglist__14424 = cljs.core.next(arglist__14424);
          var z = cljs.core.first(arglist__14424);
          var args = cljs.core.rest(arglist__14424);
          return G__14422__delegate(x, y, z, args);
        };
        G__14422.cljs$core$IFn$_invoke$arity$variadic = G__14422__delegate;
        return G__14422;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__14425 = null;
            if (arguments.length > 3) {
              var G__14426__i = 0, G__14426__a = new Array(arguments.length - 3);
              while (G__14426__i < G__14426__a.length) {
                G__14426__a[G__14426__i] = arguments[G__14426__i + 3];
                ++G__14426__i;
              }
              G__14425 = new cljs.core.IndexedSeq(G__14426__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14425);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14285 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14285) : p1.call(null, G__14285);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var G__14286 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14286) : p2.call(null, G__14286);
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14288 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14288) : p1.call(null, G__14288);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__14290 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14290) : p1.call(null, G__14290);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__14292 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14292) : p2.call(null, G__14292);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var G__14293 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14293) : p2.call(null, G__14293);
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14295 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14295) : p1.call(null, G__14295);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__14297 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14297) : p1.call(null, G__14297);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__14299 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14299) : p1.call(null, G__14299);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var and__3764__auto____$3 = function() {
                  var G__14301 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14301) : p2.call(null, G__14301);
                }();
                if (cljs.core.truth_(and__3764__auto____$3)) {
                  var and__3764__auto____$4 = function() {
                    var G__14303 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14303) : p2.call(null, G__14303);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$4)) {
                    var G__14304 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14304) : p2.call(null, G__14304);
                  } else {
                    return and__3764__auto____$4;
                  }
                } else {
                  return and__3764__auto____$3;
                }
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__14427__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__14032_SHARP_) {
            var and__3764__auto__ = function() {
              var G__14309 = p1__14032_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14309) : p1.call(null, G__14309);
            }();
            if (cljs.core.truth_(and__3764__auto__)) {
              var G__14310 = p1__14032_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14310) : p2.call(null, G__14310);
            } else {
              return and__3764__auto__;
            }
          }, args));
        };
        var G__14427 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14428__i = 0, G__14428__a = new Array(arguments.length - 3);
            while (G__14428__i < G__14428__a.length) {
              G__14428__a[G__14428__i] = arguments[G__14428__i + 3];
              ++G__14428__i;
            }
            args = new cljs.core.IndexedSeq(G__14428__a, 0);
          }
          return G__14427__delegate.call(this, x, y, z, args);
        };
        G__14427.cljs$lang$maxFixedArity = 3;
        G__14427.cljs$lang$applyTo = function(arglist__14429) {
          var x = cljs.core.first(arglist__14429);
          arglist__14429 = cljs.core.next(arglist__14429);
          var y = cljs.core.first(arglist__14429);
          arglist__14429 = cljs.core.next(arglist__14429);
          var z = cljs.core.first(arglist__14429);
          var args = cljs.core.rest(arglist__14429);
          return G__14427__delegate(x, y, z, args);
        };
        G__14427.cljs$core$IFn$_invoke$arity$variadic = G__14427__delegate;
        return G__14427;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__14430 = null;
            if (arguments.length > 3) {
              var G__14431__i = 0, G__14431__a = new Array(arguments.length - 3);
              while (G__14431__i < G__14431__a.length) {
                G__14431__a[G__14431__i] = arguments[G__14431__i + 3];
                ++G__14431__i;
              }
              G__14430 = new cljs.core.IndexedSeq(G__14431__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14430);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14356 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14356) : p1.call(null, G__14356);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__14358 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14358) : p2.call(null, G__14358);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var G__14359 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14359) : p3.call(null, G__14359);
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14361 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14361) : p1.call(null, G__14361);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__14363 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14363) : p2.call(null, G__14363);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__14365 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14365) : p3.call(null, G__14365);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var and__3764__auto____$3 = function() {
                  var G__14367 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14367) : p1.call(null, G__14367);
                }();
                if (cljs.core.truth_(and__3764__auto____$3)) {
                  var and__3764__auto____$4 = function() {
                    var G__14369 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14369) : p2.call(null, G__14369);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$4)) {
                    var G__14370 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14370) : p3.call(null, G__14370);
                  } else {
                    return and__3764__auto____$4;
                  }
                } else {
                  return and__3764__auto____$3;
                }
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__14372 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14372) : p1.call(null, G__14372);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__14374 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14374) : p2.call(null, G__14374);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__14376 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14376) : p3.call(null, G__14376);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var and__3764__auto____$3 = function() {
                  var G__14378 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14378) : p1.call(null, G__14378);
                }();
                if (cljs.core.truth_(and__3764__auto____$3)) {
                  var and__3764__auto____$4 = function() {
                    var G__14380 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14380) : p2.call(null, G__14380);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$4)) {
                    var and__3764__auto____$5 = function() {
                      var G__14382 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14382) : p3.call(null, G__14382);
                    }();
                    if (cljs.core.truth_(and__3764__auto____$5)) {
                      var and__3764__auto____$6 = function() {
                        var G__14384 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14384) : p1.call(null, G__14384);
                      }();
                      if (cljs.core.truth_(and__3764__auto____$6)) {
                        var and__3764__auto____$7 = function() {
                          var G__14386 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14386) : p2.call(null, G__14386);
                        }();
                        if (cljs.core.truth_(and__3764__auto____$7)) {
                          var G__14387 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14387) : p3.call(null, G__14387);
                        } else {
                          return and__3764__auto____$7;
                        }
                      } else {
                        return and__3764__auto____$6;
                      }
                    } else {
                      return and__3764__auto____$5;
                    }
                  } else {
                    return and__3764__auto____$4;
                  }
                } else {
                  return and__3764__auto____$3;
                }
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__14432__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__14033_SHARP_) {
            var and__3764__auto__ = function() {
              var G__14394 = p1__14033_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14394) : p1.call(null, G__14394);
            }();
            if (cljs.core.truth_(and__3764__auto__)) {
              var and__3764__auto____$1 = function() {
                var G__14396 = p1__14033_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14396) : p2.call(null, G__14396);
              }();
              if (cljs.core.truth_(and__3764__auto____$1)) {
                var G__14397 = p1__14033_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14397) : p3.call(null, G__14397);
              } else {
                return and__3764__auto____$1;
              }
            } else {
              return and__3764__auto__;
            }
          }, args));
        };
        var G__14432 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14433__i = 0, G__14433__a = new Array(arguments.length - 3);
            while (G__14433__i < G__14433__a.length) {
              G__14433__a[G__14433__i] = arguments[G__14433__i + 3];
              ++G__14433__i;
            }
            args = new cljs.core.IndexedSeq(G__14433__a, 0);
          }
          return G__14432__delegate.call(this, x, y, z, args);
        };
        G__14432.cljs$lang$maxFixedArity = 3;
        G__14432.cljs$lang$applyTo = function(arglist__14434) {
          var x = cljs.core.first(arglist__14434);
          arglist__14434 = cljs.core.next(arglist__14434);
          var y = cljs.core.first(arglist__14434);
          arglist__14434 = cljs.core.next(arglist__14434);
          var z = cljs.core.first(arglist__14434);
          var args = cljs.core.rest(arglist__14434);
          return G__14432__delegate(x, y, z, args);
        };
        G__14432.cljs$core$IFn$_invoke$arity$variadic = G__14432__delegate;
        return G__14432;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__14435 = null;
            if (arguments.length > 3) {
              var G__14436__i = 0, G__14436__a = new Array(arguments.length - 3);
              while (G__14436__i < G__14436__a.length) {
                G__14436__a[G__14436__i] = arguments[G__14436__i + 3];
                ++G__14436__i;
              }
              G__14435 = new cljs.core.IndexedSeq(G__14436__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14435);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__14437__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14034_SHARP_) {
                var G__14413 = x;
                return p1__14034_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14034_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14413) : p1__14034_SHARP_.call(null, G__14413);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14035_SHARP_) {
                var and__3764__auto__ = function() {
                  var G__14415 = x;
                  return p1__14035_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14035_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14415) : p1__14035_SHARP_.call(null, G__14415);
                }();
                if (cljs.core.truth_(and__3764__auto__)) {
                  var G__14416 = y;
                  return p1__14035_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14035_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14416) : p1__14035_SHARP_.call(null, G__14416);
                } else {
                  return and__3764__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14036_SHARP_) {
                var and__3764__auto__ = function() {
                  var G__14418 = x;
                  return p1__14036_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14036_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14418) : p1__14036_SHARP_.call(null, G__14418);
                }();
                if (cljs.core.truth_(and__3764__auto__)) {
                  var and__3764__auto____$1 = function() {
                    var G__14420 = y;
                    return p1__14036_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14036_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14420) : p1__14036_SHARP_.call(null, G__14420);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$1)) {
                    var G__14421 = z;
                    return p1__14036_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14036_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14421) : p1__14036_SHARP_.call(null, G__14421);
                  } else {
                    return and__3764__auto____$1;
                  }
                } else {
                  return and__3764__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__14438__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__14037_SHARP_) {
                  return cljs.core.every_QMARK_(p1__14037_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__14438 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14439__i = 0, G__14439__a = new Array(arguments.length - 3);
                while (G__14439__i < G__14439__a.length) {
                  G__14439__a[G__14439__i] = arguments[G__14439__i + 3];
                  ++G__14439__i;
                }
                args = new cljs.core.IndexedSeq(G__14439__a, 0);
              }
              return G__14438__delegate.call(this, x, y, z, args);
            };
            G__14438.cljs$lang$maxFixedArity = 3;
            G__14438.cljs$lang$applyTo = function(arglist__14440) {
              var x = cljs.core.first(arglist__14440);
              arglist__14440 = cljs.core.next(arglist__14440);
              var y = cljs.core.first(arglist__14440);
              arglist__14440 = cljs.core.next(arglist__14440);
              var z = cljs.core.first(arglist__14440);
              var args = cljs.core.rest(arglist__14440);
              return G__14438__delegate(x, y, z, args);
            };
            G__14438.cljs$core$IFn$_invoke$arity$variadic = G__14438__delegate;
            return G__14438;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__14441 = null;
                if (arguments.length > 3) {
                  var G__14442__i = 0, G__14442__a = new Array(arguments.length - 3);
                  while (G__14442__i < G__14442__a.length) {
                    G__14442__a[G__14442__i] = arguments[G__14442__i + 3];
                    ++G__14442__i;
                  }
                  G__14441 = new cljs.core.IndexedSeq(G__14442__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14441);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__14437 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14443__i = 0, G__14443__a = new Array(arguments.length - 3);
        while (G__14443__i < G__14443__a.length) {
          G__14443__a[G__14443__i] = arguments[G__14443__i + 3];
          ++G__14443__i;
        }
        ps = new cljs.core.IndexedSeq(G__14443__a, 0);
      }
      return G__14437__delegate.call(this, p1, p2, p3, ps);
    };
    G__14437.cljs$lang$maxFixedArity = 3;
    G__14437.cljs$lang$applyTo = function(arglist__14444) {
      var p1 = cljs.core.first(arglist__14444);
      arglist__14444 = cljs.core.next(arglist__14444);
      var p2 = cljs.core.first(arglist__14444);
      arglist__14444 = cljs.core.next(arglist__14444);
      var p3 = cljs.core.first(arglist__14444);
      var ps = cljs.core.rest(arglist__14444);
      return G__14437__delegate(p1, p2, p3, ps);
    };
    G__14437.cljs$core$IFn$_invoke$arity$variadic = G__14437__delegate;
    return G__14437;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__14445 = null;
        if (arguments.length > 3) {
          var G__14446__i = 0, G__14446__a = new Array(arguments.length - 3);
          while (G__14446__i < G__14446__a.length) {
            G__14446__a[G__14446__i] = arguments[G__14446__i + 3];
            ++G__14446__i;
          }
          G__14445 = new cljs.core.IndexedSeq(G__14446__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14445);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__14652 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14652) : p.call(null, G__14652);
      };
      var sp1__2 = function(x, y) {
        var or__3776__auto__ = function() {
          var G__14654 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14654) : p.call(null, G__14654);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var G__14655 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14655) : p.call(null, G__14655);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3776__auto__ = function() {
          var G__14657 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14657) : p.call(null, G__14657);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__14659 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14659) : p.call(null, G__14659);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var G__14660 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14660) : p.call(null, G__14660);
          }
        }
      };
      var sp1__4 = function() {
        var G__14821__delegate = function(x, y, z, args) {
          var or__3776__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__14821 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14822__i = 0, G__14822__a = new Array(arguments.length - 3);
            while (G__14822__i < G__14822__a.length) {
              G__14822__a[G__14822__i] = arguments[G__14822__i + 3];
              ++G__14822__i;
            }
            args = new cljs.core.IndexedSeq(G__14822__a, 0);
          }
          return G__14821__delegate.call(this, x, y, z, args);
        };
        G__14821.cljs$lang$maxFixedArity = 3;
        G__14821.cljs$lang$applyTo = function(arglist__14823) {
          var x = cljs.core.first(arglist__14823);
          arglist__14823 = cljs.core.next(arglist__14823);
          var y = cljs.core.first(arglist__14823);
          arglist__14823 = cljs.core.next(arglist__14823);
          var z = cljs.core.first(arglist__14823);
          var args = cljs.core.rest(arglist__14823);
          return G__14821__delegate(x, y, z, args);
        };
        G__14821.cljs$core$IFn$_invoke$arity$variadic = G__14821__delegate;
        return G__14821;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__14824 = null;
            if (arguments.length > 3) {
              var G__14825__i = 0, G__14825__a = new Array(arguments.length - 3);
              while (G__14825__i < G__14825__a.length) {
                G__14825__a[G__14825__i] = arguments[G__14825__i + 3];
                ++G__14825__i;
              }
              G__14824 = new cljs.core.IndexedSeq(G__14825__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14824);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3776__auto__ = function() {
          var G__14692 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14692) : p1.call(null, G__14692);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var G__14693 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14693) : p2.call(null, G__14693);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3776__auto__ = function() {
          var G__14695 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14695) : p1.call(null, G__14695);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__14697 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14697) : p1.call(null, G__14697);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__14699 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14699) : p2.call(null, G__14699);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var G__14700 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14700) : p2.call(null, G__14700);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3776__auto__ = function() {
          var G__14702 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14702) : p1.call(null, G__14702);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__14704 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14704) : p1.call(null, G__14704);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__14706 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14706) : p1.call(null, G__14706);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var or__3776__auto____$3 = function() {
                var G__14708 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14708) : p2.call(null, G__14708);
              }();
              if (cljs.core.truth_(or__3776__auto____$3)) {
                return or__3776__auto____$3;
              } else {
                var or__3776__auto____$4 = function() {
                  var G__14710 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14710) : p2.call(null, G__14710);
                }();
                if (cljs.core.truth_(or__3776__auto____$4)) {
                  return or__3776__auto____$4;
                } else {
                  var G__14711 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14711) : p2.call(null, G__14711);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14826__delegate = function(x, y, z, args) {
          var or__3776__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.some(function(or__3776__auto__) {
              return function(p1__14447_SHARP_) {
                var or__3776__auto____$1 = function() {
                  var G__14713 = p1__14447_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14713) : p1.call(null, G__14713);
                }();
                if (cljs.core.truth_(or__3776__auto____$1)) {
                  return or__3776__auto____$1;
                } else {
                  var G__14714 = p1__14447_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14714) : p2.call(null, G__14714);
                }
              };
            }(or__3776__auto__), args);
          }
        };
        var G__14826 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14827__i = 0, G__14827__a = new Array(arguments.length - 3);
            while (G__14827__i < G__14827__a.length) {
              G__14827__a[G__14827__i] = arguments[G__14827__i + 3];
              ++G__14827__i;
            }
            args = new cljs.core.IndexedSeq(G__14827__a, 0);
          }
          return G__14826__delegate.call(this, x, y, z, args);
        };
        G__14826.cljs$lang$maxFixedArity = 3;
        G__14826.cljs$lang$applyTo = function(arglist__14828) {
          var x = cljs.core.first(arglist__14828);
          arglist__14828 = cljs.core.next(arglist__14828);
          var y = cljs.core.first(arglist__14828);
          arglist__14828 = cljs.core.next(arglist__14828);
          var z = cljs.core.first(arglist__14828);
          var args = cljs.core.rest(arglist__14828);
          return G__14826__delegate(x, y, z, args);
        };
        G__14826.cljs$core$IFn$_invoke$arity$variadic = G__14826__delegate;
        return G__14826;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__14829 = null;
            if (arguments.length > 3) {
              var G__14830__i = 0, G__14830__a = new Array(arguments.length - 3);
              while (G__14830__i < G__14830__a.length) {
                G__14830__a[G__14830__i] = arguments[G__14830__i + 3];
                ++G__14830__i;
              }
              G__14829 = new cljs.core.IndexedSeq(G__14830__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14829);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3776__auto__ = function() {
          var G__14760 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14760) : p1.call(null, G__14760);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__14762 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14762) : p2.call(null, G__14762);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var G__14763 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14763) : p3.call(null, G__14763);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3776__auto__ = function() {
          var G__14765 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14765) : p1.call(null, G__14765);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__14767 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14767) : p2.call(null, G__14767);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__14769 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14769) : p3.call(null, G__14769);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var or__3776__auto____$3 = function() {
                var G__14771 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14771) : p1.call(null, G__14771);
              }();
              if (cljs.core.truth_(or__3776__auto____$3)) {
                return or__3776__auto____$3;
              } else {
                var or__3776__auto____$4 = function() {
                  var G__14773 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14773) : p2.call(null, G__14773);
                }();
                if (cljs.core.truth_(or__3776__auto____$4)) {
                  return or__3776__auto____$4;
                } else {
                  var G__14774 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14774) : p3.call(null, G__14774);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3776__auto__ = function() {
          var G__14776 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14776) : p1.call(null, G__14776);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__14778 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14778) : p2.call(null, G__14778);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__14780 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14780) : p3.call(null, G__14780);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var or__3776__auto____$3 = function() {
                var G__14782 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14782) : p1.call(null, G__14782);
              }();
              if (cljs.core.truth_(or__3776__auto____$3)) {
                return or__3776__auto____$3;
              } else {
                var or__3776__auto____$4 = function() {
                  var G__14784 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14784) : p2.call(null, G__14784);
                }();
                if (cljs.core.truth_(or__3776__auto____$4)) {
                  return or__3776__auto____$4;
                } else {
                  var or__3776__auto____$5 = function() {
                    var G__14786 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14786) : p3.call(null, G__14786);
                  }();
                  if (cljs.core.truth_(or__3776__auto____$5)) {
                    return or__3776__auto____$5;
                  } else {
                    var or__3776__auto____$6 = function() {
                      var G__14788 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14788) : p1.call(null, G__14788);
                    }();
                    if (cljs.core.truth_(or__3776__auto____$6)) {
                      return or__3776__auto____$6;
                    } else {
                      var or__3776__auto____$7 = function() {
                        var G__14790 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14790) : p2.call(null, G__14790);
                      }();
                      if (cljs.core.truth_(or__3776__auto____$7)) {
                        return or__3776__auto____$7;
                      } else {
                        var G__14791 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14791) : p3.call(null, G__14791);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14831__delegate = function(x, y, z, args) {
          var or__3776__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.some(function(or__3776__auto__) {
              return function(p1__14448_SHARP_) {
                var or__3776__auto____$1 = function() {
                  var G__14793 = p1__14448_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14793) : p1.call(null, G__14793);
                }();
                if (cljs.core.truth_(or__3776__auto____$1)) {
                  return or__3776__auto____$1;
                } else {
                  var or__3776__auto____$2 = function() {
                    var G__14795 = p1__14448_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14795) : p2.call(null, G__14795);
                  }();
                  if (cljs.core.truth_(or__3776__auto____$2)) {
                    return or__3776__auto____$2;
                  } else {
                    var G__14796 = p1__14448_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14796) : p3.call(null, G__14796);
                  }
                }
              };
            }(or__3776__auto__), args);
          }
        };
        var G__14831 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14832__i = 0, G__14832__a = new Array(arguments.length - 3);
            while (G__14832__i < G__14832__a.length) {
              G__14832__a[G__14832__i] = arguments[G__14832__i + 3];
              ++G__14832__i;
            }
            args = new cljs.core.IndexedSeq(G__14832__a, 0);
          }
          return G__14831__delegate.call(this, x, y, z, args);
        };
        G__14831.cljs$lang$maxFixedArity = 3;
        G__14831.cljs$lang$applyTo = function(arglist__14833) {
          var x = cljs.core.first(arglist__14833);
          arglist__14833 = cljs.core.next(arglist__14833);
          var y = cljs.core.first(arglist__14833);
          arglist__14833 = cljs.core.next(arglist__14833);
          var z = cljs.core.first(arglist__14833);
          var args = cljs.core.rest(arglist__14833);
          return G__14831__delegate(x, y, z, args);
        };
        G__14831.cljs$core$IFn$_invoke$arity$variadic = G__14831__delegate;
        return G__14831;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__14834 = null;
            if (arguments.length > 3) {
              var G__14835__i = 0, G__14835__a = new Array(arguments.length - 3);
              while (G__14835__i < G__14835__a.length) {
                G__14835__a[G__14835__i] = arguments[G__14835__i + 3];
                ++G__14835__i;
              }
              G__14834 = new cljs.core.IndexedSeq(G__14835__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14834);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__14836__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14449_SHARP_) {
                var G__14812 = x;
                return p1__14449_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14449_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14812) : p1__14449_SHARP_.call(null, G__14812);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14450_SHARP_) {
                var or__3776__auto__ = function() {
                  var G__14814 = x;
                  return p1__14450_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14450_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14814) : p1__14450_SHARP_.call(null, G__14814);
                }();
                if (cljs.core.truth_(or__3776__auto__)) {
                  return or__3776__auto__;
                } else {
                  var G__14815 = y;
                  return p1__14450_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14450_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14815) : p1__14450_SHARP_.call(null, G__14815);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14451_SHARP_) {
                var or__3776__auto__ = function() {
                  var G__14817 = x;
                  return p1__14451_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14451_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14817) : p1__14451_SHARP_.call(null, G__14817);
                }();
                if (cljs.core.truth_(or__3776__auto__)) {
                  return or__3776__auto__;
                } else {
                  var or__3776__auto____$1 = function() {
                    var G__14819 = y;
                    return p1__14451_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14451_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14819) : p1__14451_SHARP_.call(null, G__14819);
                  }();
                  if (cljs.core.truth_(or__3776__auto____$1)) {
                    return or__3776__auto____$1;
                  } else {
                    var G__14820 = z;
                    return p1__14451_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14451_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14820) : p1__14451_SHARP_.call(null, G__14820);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__14837__delegate = function(x, y, z, args) {
              var or__3776__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3776__auto__)) {
                return or__3776__auto__;
              } else {
                return cljs.core.some(function(or__3776__auto__, ps__$1) {
                  return function(p1__14452_SHARP_) {
                    return cljs.core.some(p1__14452_SHARP_, args);
                  };
                }(or__3776__auto__, ps__$1), ps__$1);
              }
            };
            var G__14837 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14838__i = 0, G__14838__a = new Array(arguments.length - 3);
                while (G__14838__i < G__14838__a.length) {
                  G__14838__a[G__14838__i] = arguments[G__14838__i + 3];
                  ++G__14838__i;
                }
                args = new cljs.core.IndexedSeq(G__14838__a, 0);
              }
              return G__14837__delegate.call(this, x, y, z, args);
            };
            G__14837.cljs$lang$maxFixedArity = 3;
            G__14837.cljs$lang$applyTo = function(arglist__14839) {
              var x = cljs.core.first(arglist__14839);
              arglist__14839 = cljs.core.next(arglist__14839);
              var y = cljs.core.first(arglist__14839);
              arglist__14839 = cljs.core.next(arglist__14839);
              var z = cljs.core.first(arglist__14839);
              var args = cljs.core.rest(arglist__14839);
              return G__14837__delegate(x, y, z, args);
            };
            G__14837.cljs$core$IFn$_invoke$arity$variadic = G__14837__delegate;
            return G__14837;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__14840 = null;
                if (arguments.length > 3) {
                  var G__14841__i = 0, G__14841__a = new Array(arguments.length - 3);
                  while (G__14841__i < G__14841__a.length) {
                    G__14841__a[G__14841__i] = arguments[G__14841__i + 3];
                    ++G__14841__i;
                  }
                  G__14840 = new cljs.core.IndexedSeq(G__14841__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14840);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__14836 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14842__i = 0, G__14842__a = new Array(arguments.length - 3);
        while (G__14842__i < G__14842__a.length) {
          G__14842__a[G__14842__i] = arguments[G__14842__i + 3];
          ++G__14842__i;
        }
        ps = new cljs.core.IndexedSeq(G__14842__a, 0);
      }
      return G__14836__delegate.call(this, p1, p2, p3, ps);
    };
    G__14836.cljs$lang$maxFixedArity = 3;
    G__14836.cljs$lang$applyTo = function(arglist__14843) {
      var p1 = cljs.core.first(arglist__14843);
      arglist__14843 = cljs.core.next(arglist__14843);
      var p2 = cljs.core.first(arglist__14843);
      arglist__14843 = cljs.core.next(arglist__14843);
      var p3 = cljs.core.first(arglist__14843);
      var ps = cljs.core.rest(arglist__14843);
      return G__14836__delegate(p1, p2, p3, ps);
    };
    G__14836.cljs$core$IFn$_invoke$arity$variadic = G__14836__delegate;
    return G__14836;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__14844 = null;
        if (arguments.length > 3) {
          var G__14845__i = 0, G__14845__a = new Array(arguments.length - 3);
          while (G__14845__i < G__14845__a.length) {
            G__14845__a[G__14845__i] = arguments[G__14845__i + 3];
            ++G__14845__i;
          }
          G__14844 = new cljs.core.IndexedSeq(G__14845__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14844);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__14900 = null;
        var G__14900__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14900__1 = function(result) {
          var G__14886 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14886) : rf.call(null, G__14886);
        };
        var G__14900__2 = function(result, input) {
          var G__14887 = result;
          var G__14888 = function() {
            var G__14889 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14889) : f.call(null, G__14889);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14887, G__14888) : rf.call(null, G__14887, G__14888);
        };
        var G__14900__3 = function() {
          var G__14901__delegate = function(result, input, inputs) {
            var G__14890 = result;
            var G__14891 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14890, G__14891) : rf.call(null, G__14890, G__14891);
          };
          var G__14901 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__14902__i = 0, G__14902__a = new Array(arguments.length - 2);
              while (G__14902__i < G__14902__a.length) {
                G__14902__a[G__14902__i] = arguments[G__14902__i + 2];
                ++G__14902__i;
              }
              inputs = new cljs.core.IndexedSeq(G__14902__a, 0);
            }
            return G__14901__delegate.call(this, result, input, inputs);
          };
          G__14901.cljs$lang$maxFixedArity = 2;
          G__14901.cljs$lang$applyTo = function(arglist__14903) {
            var result = cljs.core.first(arglist__14903);
            arglist__14903 = cljs.core.next(arglist__14903);
            var input = cljs.core.first(arglist__14903);
            var inputs = cljs.core.rest(arglist__14903);
            return G__14901__delegate(result, input, inputs);
          };
          G__14901.cljs$core$IFn$_invoke$arity$variadic = G__14901__delegate;
          return G__14901;
        }();
        G__14900 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__14900__0.call(this);
            case 1:
              return G__14900__1.call(this, result);
            case 2:
              return G__14900__2.call(this, result, input);
            default:
              var G__14904 = null;
              if (arguments.length > 2) {
                var G__14905__i = 0, G__14905__a = new Array(arguments.length - 2);
                while (G__14905__i < G__14905__a.length) {
                  G__14905__a[G__14905__i] = arguments[G__14905__i + 2];
                  ++G__14905__i;
                }
                G__14904 = new cljs.core.IndexedSeq(G__14905__a, 0);
              }
              return G__14900__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__14904);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14900.cljs$lang$maxFixedArity = 2;
        G__14900.cljs$lang$applyTo = G__14900__3.cljs$lang$applyTo;
        G__14900.cljs$core$IFn$_invoke$arity$0 = G__14900__0;
        G__14900.cljs$core$IFn$_invoke$arity$1 = G__14900__1;
        G__14900.cljs$core$IFn$_invoke$arity$2 = G__14900__2;
        G__14900.cljs$core$IFn$_invoke$arity$variadic = G__14900__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__14900;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4663__auto___14906 = size;
          var i_14907 = 0;
          while (true) {
            if (i_14907 < n__4663__auto___14906) {
              cljs.core.chunk_append(b, function() {
                var G__14892 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14907);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14892) : f.call(null, G__14892);
              }());
              var G__14908 = i_14907 + 1;
              i_14907 = G__14908;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__14893 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14893) : f.call(null, G__14893);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__14894 = cljs.core.first(s1);
          var G__14895 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14894, G__14895) : f.call(null, G__14894, G__14895);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__14896 = cljs.core.first(s1);
          var G__14897 = cljs.core.first(s2);
          var G__14898 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14896, G__14897, G__14898) : f.call(null, G__14896, G__14897, G__14898);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__14909__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__14846_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__14846_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__14909 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14910__i = 0, G__14910__a = new Array(arguments.length - 4);
        while (G__14910__i < G__14910__a.length) {
          G__14910__a[G__14910__i] = arguments[G__14910__i + 4];
          ++G__14910__i;
        }
        colls = new cljs.core.IndexedSeq(G__14910__a, 0);
      }
      return G__14909__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14909.cljs$lang$maxFixedArity = 4;
    G__14909.cljs$lang$applyTo = function(arglist__14911) {
      var f = cljs.core.first(arglist__14911);
      arglist__14911 = cljs.core.next(arglist__14911);
      var c1 = cljs.core.first(arglist__14911);
      arglist__14911 = cljs.core.next(arglist__14911);
      var c2 = cljs.core.first(arglist__14911);
      arglist__14911 = cljs.core.next(arglist__14911);
      var c3 = cljs.core.first(arglist__14911);
      var colls = cljs.core.rest(arglist__14911);
      return G__14909__delegate(f, c1, c2, c3, colls);
    };
    G__14909.cljs$core$IFn$_invoke$arity$variadic = G__14909__delegate;
    return G__14909;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__14912 = null;
        if (arguments.length > 4) {
          var G__14913__i = 0, G__14913__a = new Array(arguments.length - 4);
          while (G__14913__i < G__14913__a.length) {
            G__14913__a[G__14913__i] = arguments[G__14913__i + 4];
            ++G__14913__i;
          }
          G__14912 = new cljs.core.IndexedSeq(G__14913__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14912);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14922 = null;
          var G__14922__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14922__1 = function(result) {
            var G__14919 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14919) : rf.call(null, G__14919);
          };
          var G__14922__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__14920 = result;
              var G__14921 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14920, G__14921) : rf.call(null, G__14920, G__14921);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__14922 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14922__0.call(this);
              case 1:
                return G__14922__1.call(this, result);
              case 2:
                return G__14922__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14922.cljs$core$IFn$_invoke$arity$0 = G__14922__0;
          G__14922.cljs$core$IFn$_invoke$arity$1 = G__14922__1;
          G__14922.cljs$core$IFn$_invoke$arity$2 = G__14922__2;
          return G__14922;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14929 = null;
          var G__14929__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14929__1 = function(result) {
            var G__14926 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14926) : rf.call(null, G__14926);
          };
          var G__14929__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__14927 = result;
              var G__14928 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14927, G__14928) : rf.call(null, G__14927, G__14928);
            }
          };
          G__14929 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14929__0.call(this);
              case 1:
                return G__14929__1.call(this, result);
              case 2:
                return G__14929__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14929.cljs$core$IFn$_invoke$arity$0 = G__14929__0;
          G__14929.cljs$core$IFn$_invoke$arity$1 = G__14929__1;
          G__14929.cljs$core$IFn$_invoke$arity$2 = G__14929__2;
          return G__14929;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__14930 = n__$1 - 1;
          var G__14931 = cljs.core.rest(s);
          n__$1 = G__14930;
          coll__$1 = G__14931;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__14934 = cljs.core.next(s);
      var G__14935 = cljs.core.next(lead);
      s = G__14934;
      lead = G__14935;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__14948 = null;
          var G__14948__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14948__1 = function(result) {
            var G__14942 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14942) : rf.call(null, G__14942);
          };
          var G__14948__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3764__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3764__auto__)) {
                var G__14943 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14943) : pred.call(null, G__14943);
              } else {
                return and__3764__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__14944 = result;
              var G__14945 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14944, G__14945) : rf.call(null, G__14944, G__14945);
            }
          };
          G__14948 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14948__0.call(this);
              case 1:
                return G__14948__1.call(this, result);
              case 2:
                return G__14948__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14948.cljs$core$IFn$_invoke$arity$0 = G__14948__0;
          G__14948.cljs$core$IFn$_invoke$arity$1 = G__14948__1;
          G__14948.cljs$core$IFn$_invoke$arity$2 = G__14948__2;
          return G__14948;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3764__auto__ = s;
          if (and__3764__auto__) {
            var G__14947 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14947) : pred__$1.call(null, G__14947);
          } else {
            return and__3764__auto__;
          }
        }())) {
          var G__14949 = pred__$1;
          var G__14950 = cljs.core.rest(s);
          pred__$1 = G__14949;
          coll__$1 = G__14950;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__14959 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14959) : f.call(null, G__14959);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__14962__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__14962 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__14963__i = 0, G__14963__a = new Array(arguments.length - 2);
        while (G__14963__i < G__14963__a.length) {
          G__14963__a[G__14963__i] = arguments[G__14963__i + 2];
          ++G__14963__i;
        }
        colls = new cljs.core.IndexedSeq(G__14963__a, 0);
      }
      return G__14962__delegate.call(this, c1, c2, colls);
    };
    G__14962.cljs$lang$maxFixedArity = 2;
    G__14962.cljs$lang$applyTo = function(arglist__14964) {
      var c1 = cljs.core.first(arglist__14964);
      arglist__14964 = cljs.core.next(arglist__14964);
      var c2 = cljs.core.first(arglist__14964);
      var colls = cljs.core.rest(arglist__14964);
      return G__14962__delegate(c1, c2, colls);
    };
    G__14962.cljs$core$IFn$_invoke$arity$variadic = G__14962__delegate;
    return G__14962;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__14965 = null;
        if (arguments.length > 2) {
          var G__14966__i = 0, G__14966__a = new Array(arguments.length - 2);
          while (G__14966__i < G__14966__a.length) {
            G__14966__a[G__14966__i] = arguments[G__14966__i + 2];
            ++G__14966__i;
          }
          G__14965 = new cljs.core.IndexedSeq(G__14966__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__14965);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__14981 = null;
          var G__14981__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14981__1 = function(result) {
            var G__14974 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14974) : rf.call(null, G__14974);
          };
          var G__14981__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__14975 = result;
                var G__14976 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14975, G__14976) : rf.call(null, G__14975, G__14976);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__14977 = sepr;
                var G__14978 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14977, G__14978) : rf.call(null, G__14977, G__14978);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__14979 = result;
              var G__14980 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14979, G__14980) : rf.call(null, G__14979, G__14980);
            }
          };
          G__14981 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14981__0.call(this);
              case 1:
                return G__14981__1.call(this, result);
              case 2:
                return G__14981__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14981.cljs$core$IFn$_invoke$arity$0 = G__14981__0;
          G__14981.cljs$core$IFn$_invoke$arity$1 = G__14981__1;
          G__14981.cljs$core$IFn$_invoke$arity$2 = G__14981__2;
          return G__14981;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__14990__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__14990 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__14991__i = 0, G__14991__a = new Array(arguments.length - 1);
        while (G__14991__i < G__14991__a.length) {
          G__14991__a[G__14991__i] = arguments[G__14991__i + 1];
          ++G__14991__i;
        }
        colls = new cljs.core.IndexedSeq(G__14991__a, 0);
      }
      return G__14990__delegate.call(this, f, colls);
    };
    G__14990.cljs$lang$maxFixedArity = 1;
    G__14990.cljs$lang$applyTo = function(arglist__14992) {
      var f = cljs.core.first(arglist__14992);
      var colls = cljs.core.rest(arglist__14992);
      return G__14990__delegate(f, colls);
    };
    G__14990.cljs$core$IFn$_invoke$arity$variadic = G__14990__delegate;
    return G__14990;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__14993 = null;
        if (arguments.length > 1) {
          var G__14994__i = 0, G__14994__a = new Array(arguments.length - 1);
          while (G__14994__i < G__14994__a.length) {
            G__14994__a[G__14994__i] = arguments[G__14994__i + 1];
            ++G__14994__i;
          }
          G__14993 = new cljs.core.IndexedSeq(G__14994__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14993);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15013 = null;
        var G__15013__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15013__1 = function(result) {
          var G__15007 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15007) : rf.call(null, G__15007);
        };
        var G__15013__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15008 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15008) : pred.call(null, G__15008);
          }())) {
            var G__15009 = result;
            var G__15010 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15009, G__15010) : rf.call(null, G__15009, G__15010);
          } else {
            return result;
          }
        };
        G__15013 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15013__0.call(this);
            case 1:
              return G__15013__1.call(this, result);
            case 2:
              return G__15013__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15013.cljs$core$IFn$_invoke$arity$0 = G__15013__0;
        G__15013.cljs$core$IFn$_invoke$arity$1 = G__15013__1;
        G__15013.cljs$core$IFn$_invoke$arity$2 = G__15013__2;
        return G__15013;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4663__auto___15014 = size;
          var i_15015 = 0;
          while (true) {
            if (i_15015 < n__4663__auto___15014) {
              if (cljs.core.truth_(function() {
                var G__15011 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15015);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15011) : pred.call(null, G__15011);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15015));
              } else {
              }
              var G__15016 = i_15015 + 1;
              i_15015 = G__15016;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__15012 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15012) : pred.call(null, G__15012);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__15023 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15023) : branch_QMARK_.call(null, G__15023);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__15024 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15024) : children.call(null, G__15024);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__15025_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__15025_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__15028 = to;
        if (G__15028) {
          var bit__4450__auto__ = G__15028.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4450__auto__ || G__15028.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__15029 = to;
      if (G__15029) {
        var bit__4450__auto__ = G__15029.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4450__auto__ || G__15029.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__15031 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15031) : f.call(null, G__15031);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__15032__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__15032 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__15033__i = 0, G__15033__a = new Array(arguments.length - 4);
        while (G__15033__i < G__15033__a.length) {
          G__15033__a[G__15033__i] = arguments[G__15033__i + 4];
          ++G__15033__i;
        }
        colls = new cljs.core.IndexedSeq(G__15033__a, 0);
      }
      return G__15032__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__15032.cljs$lang$maxFixedArity = 4;
    G__15032.cljs$lang$applyTo = function(arglist__15034) {
      var f = cljs.core.first(arglist__15034);
      arglist__15034 = cljs.core.next(arglist__15034);
      var c1 = cljs.core.first(arglist__15034);
      arglist__15034 = cljs.core.next(arglist__15034);
      var c2 = cljs.core.first(arglist__15034);
      arglist__15034 = cljs.core.next(arglist__15034);
      var c3 = cljs.core.first(arglist__15034);
      var colls = cljs.core.rest(arglist__15034);
      return G__15032__delegate(f, c1, c2, c3, colls);
    };
    G__15032.cljs$core$IFn$_invoke$arity$variadic = G__15032__delegate;
    return G__15032;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__15035 = null;
        if (arguments.length > 4) {
          var G__15036__i = 0, G__15036__a = new Array(arguments.length - 4);
          while (G__15036__i < G__15036__a.length) {
            G__15036__a[G__15036__i] = arguments[G__15036__i + 4];
            ++G__15036__i;
          }
          G__15035 = new cljs.core.IndexedSeq(G__15036__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__15035);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__15038 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15038) : pred.call(null, G__15038);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__15053 = m__$1;
          if (G__15053) {
            var bit__4457__auto__ = G__15053.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4457__auto__ || G__15053.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__15053.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__15053);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__15053);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__15054 = sentinel;
            var G__15055 = m__$2;
            var G__15056 = cljs.core.next(ks__$1);
            sentinel = G__15054;
            m__$1 = G__15055;
            ks__$1 = G__15056;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__15057, v) {
  var vec__15062 = p__15057;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15062, 0, null);
  var ks = cljs.core.nthnext(vec__15062, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__15063, f) {
    var vec__15101 = p__15063;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15101, 0, null);
    var ks = cljs.core.nthnext(vec__15101, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15102 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15102) : f.call(null, G__15102);
      }());
    }
  };
  var update_in__4 = function(m, p__15064, f, a) {
    var vec__15103 = p__15064;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15103, 0, null);
    var ks = cljs.core.nthnext(vec__15103, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15104 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__15105 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15104, G__15105) : f.call(null, G__15104, G__15105);
      }());
    }
  };
  var update_in__5 = function(m, p__15065, f, a, b) {
    var vec__15106 = p__15065;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15106, 0, null);
    var ks = cljs.core.nthnext(vec__15106, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15107 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__15108 = a;
        var G__15109 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15107, G__15108, G__15109) : f.call(null, G__15107, G__15108, G__15109);
      }());
    }
  };
  var update_in__6 = function(m, p__15066, f, a, b, c) {
    var vec__15110 = p__15066;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15110, 0, null);
    var ks = cljs.core.nthnext(vec__15110, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__15111 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__15112 = a;
        var G__15113 = b;
        var G__15114 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15111, G__15112, G__15113, G__15114) : f.call(null, G__15111, G__15112, G__15113, G__15114);
      }());
    }
  };
  var update_in__7 = function() {
    var G__15116__delegate = function(m, p__15067, f, a, b, c, args) {
      var vec__15115 = p__15067;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15115, 0, null);
      var ks = cljs.core.nthnext(vec__15115, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__15116 = function(m, p__15067, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__15117__i = 0, G__15117__a = new Array(arguments.length - 6);
        while (G__15117__i < G__15117__a.length) {
          G__15117__a[G__15117__i] = arguments[G__15117__i + 6];
          ++G__15117__i;
        }
        args = new cljs.core.IndexedSeq(G__15117__a, 0);
      }
      return G__15116__delegate.call(this, m, p__15067, f, a, b, c, args);
    };
    G__15116.cljs$lang$maxFixedArity = 6;
    G__15116.cljs$lang$applyTo = function(arglist__15118) {
      var m = cljs.core.first(arglist__15118);
      arglist__15118 = cljs.core.next(arglist__15118);
      var p__15067 = cljs.core.first(arglist__15118);
      arglist__15118 = cljs.core.next(arglist__15118);
      var f = cljs.core.first(arglist__15118);
      arglist__15118 = cljs.core.next(arglist__15118);
      var a = cljs.core.first(arglist__15118);
      arglist__15118 = cljs.core.next(arglist__15118);
      var b = cljs.core.first(arglist__15118);
      arglist__15118 = cljs.core.next(arglist__15118);
      var c = cljs.core.first(arglist__15118);
      var args = cljs.core.rest(arglist__15118);
      return G__15116__delegate(m, p__15067, f, a, b, c, args);
    };
    G__15116.cljs$core$IFn$_invoke$arity$variadic = G__15116__delegate;
    return G__15116;
  }();
  update_in = function(m, p__15067, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__15067, f);
      case 4:
        return update_in__4.call(this, m, p__15067, f, a);
      case 5:
        return update_in__5.call(this, m, p__15067, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__15067, f, a, b, c);
      default:
        var G__15119 = null;
        if (arguments.length > 6) {
          var G__15120__i = 0, G__15120__a = new Array(arguments.length - 6);
          while (G__15120__i < G__15120__a.length) {
            G__15120__a[G__15120__i] = arguments[G__15120__i + 6];
            ++G__15120__i;
          }
          G__15119 = new cljs.core.IndexedSeq(G__15120__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__15067, f, a, b, c, G__15119);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15131 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15131) : f.call(null, G__15131);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15132 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15133 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15132, G__15133) : f.call(null, G__15132, G__15133);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15134 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15135 = x;
      var G__15136 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15134, G__15135, G__15136) : f.call(null, G__15134, G__15135, G__15136);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__15137 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__15138 = x;
      var G__15139 = y;
      var G__15140 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15137, G__15138, G__15139, G__15140) : f.call(null, G__15137, G__15138, G__15139, G__15140);
    }());
  };
  var update__7 = function() {
    var G__15141__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__15141 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__15142__i = 0, G__15142__a = new Array(arguments.length - 6);
        while (G__15142__i < G__15142__a.length) {
          G__15142__a[G__15142__i] = arguments[G__15142__i + 6];
          ++G__15142__i;
        }
        more = new cljs.core.IndexedSeq(G__15142__a, 0);
      }
      return G__15141__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__15141.cljs$lang$maxFixedArity = 6;
    G__15141.cljs$lang$applyTo = function(arglist__15143) {
      var m = cljs.core.first(arglist__15143);
      arglist__15143 = cljs.core.next(arglist__15143);
      var k = cljs.core.first(arglist__15143);
      arglist__15143 = cljs.core.next(arglist__15143);
      var f = cljs.core.first(arglist__15143);
      arglist__15143 = cljs.core.next(arglist__15143);
      var x = cljs.core.first(arglist__15143);
      arglist__15143 = cljs.core.next(arglist__15143);
      var y = cljs.core.first(arglist__15143);
      arglist__15143 = cljs.core.next(arglist__15143);
      var z = cljs.core.first(arglist__15143);
      var more = cljs.core.rest(arglist__15143);
      return G__15141__delegate(m, k, f, x, y, z, more);
    };
    G__15141.cljs$core$IFn$_invoke$arity$variadic = G__15141__delegate;
    return G__15141;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__15144 = null;
        if (arguments.length > 6) {
          var G__15145__i = 0, G__15145__a = new Array(arguments.length - 6);
          while (G__15145__i < G__15145__a.length) {
            G__15145__a[G__15145__i] = arguments[G__15145__i + 6];
            ++G__15145__i;
          }
          G__15144 = new cljs.core.IndexedSeq(G__15145__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__15144);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__15146 = ll - 5;
      var G__15147 = r;
      ll = G__15146;
      ret = G__15147;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__15152 = cljs.core.pv_aget(node, 0);
      var G__15153 = level - 5;
      node = G__15152;
      level = G__15153;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__15154 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__15155 = level - 5;
        node = G__15154;
        level = G__15155;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15165 = init__$2;
              var G__15166 = j + i;
              var G__15167 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15165, G__15166, G__15167) : f.call(null, G__15165, G__15166, G__15167);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15178 = j + 1;
              var G__15179 = init__$3;
              j = G__15178;
              init__$2 = G__15179;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15168 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15168) : cljs.core.deref.call(null, G__15168);
      } else {
        var G__15180 = i + len;
        var G__15181 = init__$2;
        i = G__15180;
        init__$1 = G__15181;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__15169 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15169) : cljs.core.tv_editable_root.call(null, G__15169);
  }(), function() {
    var G__15170 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15170) : cljs.core.tv_editable_tail.call(null, G__15170);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__15171 = init__$2;
              var G__15172 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15171, G__15172) : f.call(null, G__15171, G__15172);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__15182 = j + 1;
              var G__15183 = init__$3;
              j = G__15182;
              init__$2 = G__15183;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15173 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15173) : cljs.core.deref.call(null, G__15173);
      } else {
        var G__15184 = i + len;
        var G__15185 = init__$2;
        i = G__15184;
        init__$1 = G__15185;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__15174 = coll__$1;
      var G__15175 = cljs.core.first_array_for_longvec(coll__$1);
      var G__15176 = 0;
      var G__15177 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15174, G__15175, G__15176, G__15177) : cljs.core.chunked_seq.call(null, G__15174, G__15175, G__15176, G__15177);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4663__auto___15186 = len;
    var i_15187 = 0;
    while (true) {
      if (i_15187 < n__4663__auto___15186) {
        new_tail[i_15187] = self__.tail[i_15187];
        var G__15188 = i_15187 + 1;
        i_15187 = G__15188;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__15189 = null;
  var G__15189__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15189__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15189 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15189__2.call(this, self__, k);
      case 3:
        return G__15189__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15189.cljs$core$IFn$_invoke$arity$2 = G__15189__2;
  G__15189.cljs$core$IFn$_invoke$arity$3 = G__15189__3;
  return G__15189;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args15164) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15164)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__15190 = i + 1;
        var G__15191 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__15190;
        out = G__15191;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__15192__i = 0, G__15192__a = new Array(arguments.length - 0);
      while (G__15192__i < G__15192__a.length) {
        G__15192__a[G__15192__i] = arguments[G__15192__i + 0];
        ++G__15192__i;
      }
      args = new cljs.core.IndexedSeq(G__15192__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__15193) {
    var args = cljs.core.seq(arglist__15193);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15194 = self__.vec;
      var G__15195 = self__.node;
      var G__15196 = self__.i;
      var G__15197 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15194, G__15195, G__15196, G__15197) : cljs.core.chunked_seq.call(null, G__15194, G__15195, G__15196, G__15197);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15198 = self__.vec;
    var G__15199 = self__.i + self__.off;
    var G__15200 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15198, G__15199, G__15200) : cljs.core.subvec.call(null, G__15198, G__15199, G__15200);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__15201 = self__.vec;
    var G__15202 = self__.i + self__.off;
    var G__15203 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15201, G__15202, G__15203) : cljs.core.subvec.call(null, G__15201, G__15202, G__15203);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__15204 = self__.vec;
      var G__15205 = self__.node;
      var G__15206 = self__.i;
      var G__15207 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15204, G__15205, G__15206, G__15207) : cljs.core.chunked_seq.call(null, G__15204, G__15205, G__15206, G__15207);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15208 = self__.vec;
    var G__15209 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15210 = end;
    var G__15211 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15208, G__15209, G__15210, G__15211) : cljs.core.chunked_seq.call(null, G__15208, G__15209, G__15210, G__15211);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__15212 = self__.vec;
  var G__15213 = self__.node;
  var G__15214 = self__.i;
  var G__15215 = self__.off;
  var G__15216 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15212, G__15213, G__15214, G__15215, G__15216) : cljs.core.chunked_seq.call(null, G__15212, G__15213, G__15214, G__15215, G__15216);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15217 = self__.vec;
    var G__15218 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15219 = end;
    var G__15220 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15217, G__15218, G__15219, G__15220) : cljs.core.chunked_seq.call(null, G__15217, G__15218, G__15219, G__15220);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__15222 = self__.meta;
  var G__15223 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__15224 = self__.start;
  var G__15225 = function() {
    var x__4093__auto__ = self__.end;
    var y__4094__auto__ = v_pos + 1;
    return x__4093__auto__ > y__4094__auto__ ? x__4093__auto__ : y__4094__auto__;
  }();
  var G__15226 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15222, G__15223, G__15224, G__15225, G__15226) : cljs.core.build_subvec.call(null, G__15222, G__15223, G__15224, G__15225, G__15226);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__15227 = self__.meta;
    var G__15228 = self__.v;
    var G__15229 = self__.start;
    var G__15230 = self__.end - 1;
    var G__15231 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15227, G__15228, G__15229, G__15230, G__15231) : cljs.core.build_subvec.call(null, G__15227, G__15228, G__15229, G__15230, G__15231);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__15233 = meta__$1;
  var G__15234 = self__.v;
  var G__15235 = self__.start;
  var G__15236 = self__.end;
  var G__15237 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15233, G__15234, G__15235, G__15236, G__15237) : cljs.core.build_subvec.call(null, G__15233, G__15234, G__15235, G__15236, G__15237);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__15238 = self__.meta;
  var G__15239 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__15240 = self__.start;
  var G__15241 = self__.end + 1;
  var G__15242 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15238, G__15239, G__15240, G__15241, G__15242) : cljs.core.build_subvec.call(null, G__15238, G__15239, G__15240, G__15241, G__15242);
};
cljs.core.Subvec.prototype.call = function() {
  var G__15243 = null;
  var G__15243__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15243__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15243 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15243__2.call(this, self__, k);
      case 3:
        return G__15243__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15243.cljs$core$IFn$_invoke$arity$2 = G__15243__2;
  G__15243.cljs$core$IFn$_invoke$arity$3 = G__15243__3;
  return G__15243;
}();
cljs.core.Subvec.prototype.apply = function(self__, args15221) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15221)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__15244 = meta;
      var G__15245 = v.v;
      var G__15246 = v.start + start;
      var G__15247 = v.start + end;
      var G__15248 = __hash;
      meta = G__15244;
      v = G__15245;
      start = G__15246;
      end = G__15247;
      __hash = G__15248;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj15255 = {};
    return obj15255;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__15263 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__15264 = level - 5;
        node = G__15263;
        level = G__15264;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__15268 = null;
  var G__15268__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15268__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15268 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15268__2.call(this, self__, k);
      case 3:
        return G__15268__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15268.cljs$core$IFn$_invoke$arity$2 = G__15268__2;
  G__15268.cljs$core$IFn$_invoke$arity$3 = G__15268__3;
  return G__15268;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args15265) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15265)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3776__auto__ = self__.front;
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3776__auto__ = self__.rear;
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__15269 = i + incr;
        i = G__15269;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__15270 = i + 1;
      var G__15271 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__15270;
      out = G__15271;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj15275 = {};
    return obj15275;
  }();
  var l = ks.length;
  var i_15276 = 0;
  while (true) {
    if (i_15276 < l) {
      var k_15277 = ks[i_15276];
      new_obj[k_15277] = obj[k_15277];
      var G__15278 = i_15276 + 1;
      i_15276 = G__15278;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = function() {
      var G__15282 = k;
      return goog.isString(G__15282);
    }();
    if (cljs.core.truth_(and__3764__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3764__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__15283 = init__$1;
        var G__15284 = k;
        var G__15285 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15283, G__15284, G__15285) : f.call(null, G__15283, G__15284, G__15285);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15286 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15286) : cljs.core.deref.call(null, G__15286);
      } else {
        var G__15292 = cljs.core.rest(keys__$1);
        var G__15293 = init__$2;
        keys__$1 = G__15292;
        init__$1 = G__15293;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = function() {
      var G__15288 = k;
      return goog.isString(G__15288);
    }();
    if (cljs.core.truth_(and__3764__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3764__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__15289 = k;
    return goog.isString(G__15289);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = function() {
      var G__15291 = k;
      return goog.isString(G__15291);
    }();
    if (cljs.core.truth_(and__3764__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3764__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__15279_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15279_SHARP_, self__.strobj[p1__15279_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__15294 = null;
  var G__15294__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15294__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15294 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15294__2.call(this, self__, k);
      case 3:
        return G__15294__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15294.cljs$core$IFn$_invoke$arity$2 = G__15294__2;
  G__15294.cljs$core$IFn$_invoke$arity$3 = G__15294__3;
  return G__15294;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args15280) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15280)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj15296 = {};
  return obj15296;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__15297 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15297, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15297, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__15298 = i + 2;
        i = G__15298;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__15299 = i + 2;
        i = G__15299;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__15300 = i + 2;
        i = G__15300;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__15301 = i + 2;
        i = G__15301;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__15302 = i + 2;
        i = G__15302;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3776__auto__ = function() {
        var G__15306 = k;
        return goog.isString(G__15306);
      }();
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_15307 = 0;
  while (true) {
    if (i_15307 < l) {
      narr[i_15307] = arr[i_15307];
      var G__15308 = i_15307 + 1;
      i_15307 = G__15308;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15310 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15310) : cljs.core.keys.call(null, G__15310);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15311 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15311) : cljs.core.vals.call(null, G__15311);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15312 = cljs.core.seq(coll);
  var chunk__15313 = null;
  var count__15314 = 0;
  var i__15315 = 0;
  while (true) {
    if (i__15315 < count__15314) {
      var vec__15316 = chunk__15313.cljs$core$IIndexed$_nth$arity$2(null, i__15315);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15316, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15316, 1, null);
      var G__15317_15330 = v;
      var G__15318_15331 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15317_15330, G__15318_15331) : f.call(null, G__15317_15330, G__15318_15331);
      var G__15332 = seq__15312;
      var G__15333 = chunk__15313;
      var G__15334 = count__15314;
      var G__15335 = i__15315 + 1;
      seq__15312 = G__15332;
      chunk__15313 = G__15333;
      count__15314 = G__15334;
      i__15315 = G__15335;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15312);
      if (temp__4126__auto__) {
        var seq__15312__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15312__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__15312__$1);
          var G__15336 = cljs.core.chunk_rest(seq__15312__$1);
          var G__15337 = c__4563__auto__;
          var G__15338 = cljs.core.count(c__4563__auto__);
          var G__15339 = 0;
          seq__15312 = G__15336;
          chunk__15313 = G__15337;
          count__15314 = G__15338;
          i__15315 = G__15339;
          continue;
        } else {
          var vec__15319 = cljs.core.first(seq__15312__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15319, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15319, 1, null);
          var G__15320_15340 = v;
          var G__15321_15341 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15320_15340, G__15321_15341) : f.call(null, G__15320_15340, G__15321_15341);
          var G__15342 = cljs.core.next(seq__15312__$1);
          var G__15343 = null;
          var G__15344 = 0;
          var G__15345 = 0;
          seq__15312 = G__15342;
          chunk__15313 = G__15343;
          count__15314 = G__15344;
          i__15315 = G__15345;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__15322 = init__$1;
        var G__15323 = self__.arr[i];
        var G__15324 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15322, G__15323, G__15324) : f.call(null, G__15322, G__15323, G__15324);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15325 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15325) : cljs.core.deref.call(null, G__15325);
      } else {
        var G__15346 = i + 2;
        var G__15347 = init__$2;
        i = G__15346;
        init__$1 = G__15347;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__15326 = other;
    if (G__15326) {
      var bit__4450__auto__ = G__15326.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4450__auto__ || G__15326.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__15348 = i + 2;
              i = G__15348;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj15328 = {};
    return obj15328;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__15349 = s + 2;
            var G__15350 = d;
            s = G__15349;
            d = G__15350;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__15351 = s + 2;
            var G__15352 = d + 2;
            s = G__15351;
            d = G__15352;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__15329 = cljs.core.aclone(self__.arr);
        G__15329[idx + 1] = v;
        return G__15329;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15353 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15354 = cljs.core.next(es);
          ret = G__15353;
          es = G__15354;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15355 = null;
  var G__15355__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15355__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15355 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15355__2.call(this, self__, k);
      case 3:
        return G__15355__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15355.cljs$core$IFn$_invoke$arity$2 = G__15355__2;
  G__15355.cljs$core$IFn$_invoke$arity$3 = G__15355__3;
  return G__15355;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args15309) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15309)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15356 = i + 2;
        var G__15357 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__15356;
        ret = G__15357;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15358_15366 = self__.arr;
      G__15358_15366.pop();
      G__15358_15366.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__15359 = self__.len;
          var G__15360 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15359, G__15360) : cljs.core.array__GT_transient_hash_map.call(null, G__15359, G__15360);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__15361 = o;
      if (G__15361) {
        var bit__4457__auto__ = G__15361.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4457__auto__ || G__15361.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15361.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15361);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15361);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__15362 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15362) : cljs.core.key.call(null, G__15362);
      }(), function() {
        var G__15363 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15363) : cljs.core.val.call(null, G__15363);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15367 = cljs.core.next(es);
          var G__15368 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__15364 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15364) : cljs.core.key.call(null, G__15364);
          }(), function() {
            var G__15365 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15365) : cljs.core.val.call(null, G__15365);
          }());
          es = G__15367;
          tcoll__$2 = G__15368;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15369 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__15370 = i + 2;
      out = G__15369;
      i = G__15370;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__15373 = cljs.core.aclone(arr);
    G__15373[i] = a;
    return G__15373;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__15374 = cljs.core.aclone(arr);
    G__15374[i] = a;
    G__15374[j] = b;
    return G__15374;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__15379 = init__$1;
          var G__15380 = k;
          var G__15381 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15379, G__15380, G__15381) : f.call(null, G__15379, G__15380, G__15381);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15382 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15382) : cljs.core.deref.call(null, G__15382);
      } else {
        var G__15383 = i + 2;
        var G__15384 = init__$2;
        i = G__15383;
        init__$1 = G__15384;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15385 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15385) : cljs.core.create_inode_seq.call(null, G__15385);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15399 = 0;
        var j_15400 = 0;
        while (true) {
          if (i_15399 < 32) {
            if ((self__.bitmap >>> i_15399 & 1) === 0) {
              var G__15401 = i_15399 + 1;
              var G__15402 = j_15400;
              i_15399 = G__15401;
              j_15400 = G__15402;
              continue;
            } else {
              nodes[i_15399] = !(self__.arr[j_15400] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_15400]), self__.arr[j_15400], self__.arr[j_15400 + 1], added_leaf_QMARK_) : self__.arr[j_15400 + 1];
              var G__15403 = i_15399 + 1;
              var G__15404 = j_15400 + 2;
              i_15399 = G__15403;
              j_15400 = G__15404;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__15386 = edit__$1;
          var G__15387 = shift + 5;
          var G__15388 = key_or_nil;
          var G__15389 = val_or_node;
          var G__15390 = hash;
          var G__15391 = key;
          var G__15392 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15386, G__15387, G__15388, G__15389, G__15390, G__15391, G__15392) : cljs.core.create_node.call(null, G__15386, G__15387, G__15388, G__15389, G__15390, G__15391, G__15392);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15405 = 0;
      var j_15406 = 0;
      while (true) {
        if (i_15405 < 32) {
          if ((self__.bitmap >>> i_15405 & 1) === 0) {
            var G__15407 = i_15405 + 1;
            var G__15408 = j_15406;
            i_15405 = G__15407;
            j_15406 = G__15408;
            continue;
          } else {
            nodes[i_15405] = !(self__.arr[j_15406] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_15406]), self__.arr[j_15406], self__.arr[j_15406 + 1], added_leaf_QMARK_) : self__.arr[j_15406 + 1];
            var G__15409 = i_15405 + 1;
            var G__15410 = j_15406 + 2;
            i_15405 = G__15409;
            j_15406 = G__15410;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__15393 = shift + 5;
          var G__15394 = key_or_nil;
          var G__15395 = val_or_node;
          var G__15396 = hash;
          var G__15397 = key;
          var G__15398 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15393, G__15394, G__15395, G__15396, G__15397, G__15398) : cljs.core.create_node.call(null, G__15393, G__15394, G__15395, G__15396, G__15397, G__15398);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15411 = i + 1;
        var G__15412 = j + 2;
        var G__15413 = bitmap | 1 << i;
        i = G__15411;
        j = G__15412;
        bitmap = G__15413;
        continue;
      } else {
        var G__15414 = i + 1;
        var G__15415 = j;
        var G__15416 = bitmap;
        i = G__15414;
        j = G__15415;
        bitmap = G__15416;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15417 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15417) : cljs.core.create_array_node_seq.call(null, G__15417);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__15418 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15418) : cljs.core.deref.call(null, G__15418);
        } else {
          var G__15419 = i + 1;
          var G__15420 = init__$2;
          i = G__15419;
          init__$1 = G__15420;
          continue;
        }
      } else {
        var G__15421 = i + 1;
        var G__15422 = init__$1;
        i = G__15421;
        init__$1 = G__15422;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__15423 = i + 2;
        i = G__15423;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15424 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15424) : cljs.core.create_inode_seq.call(null, G__15424);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__15425 = self__.nodes;
    var G__15426 = self__.i + 2;
    var G__15427 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15425, G__15426, G__15427) : cljs.core.create_inode_seq.call(null, G__15425, G__15426, G__15427);
  } else {
    var G__15428 = self__.nodes;
    var G__15429 = self__.i;
    var G__15430 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15428, G__15429, G__15430) : cljs.core.create_inode_seq.call(null, G__15428, G__15429, G__15430);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__15434 = j + 2;
                j = G__15434;
                continue;
              }
            } else {
              var G__15435 = j + 2;
              j = G__15435;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__15436 = null;
  var G__15437 = self__.nodes;
  var G__15438 = self__.i;
  var G__15439 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15436, G__15437, G__15438, G__15439) : cljs.core.create_array_node_seq.call(null, G__15436, G__15437, G__15438, G__15439);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__15444 = j + 1;
              j = G__15444;
              continue;
            }
          } else {
            var G__15445 = j + 1;
            j = G__15445;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15447 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15447) : cljs.core.keys.call(null, G__15447);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15448 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15448) : cljs.core.vals.call(null, G__15448);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15449 = cljs.core.seq(coll);
  var chunk__15450 = null;
  var count__15451 = 0;
  var i__15452 = 0;
  while (true) {
    if (i__15452 < count__15451) {
      var vec__15453 = chunk__15450.cljs$core$IIndexed$_nth$arity$2(null, i__15452);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15453, 1, null);
      var G__15454_15465 = v;
      var G__15455_15466 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15454_15465, G__15455_15466) : f.call(null, G__15454_15465, G__15455_15466);
      var G__15467 = seq__15449;
      var G__15468 = chunk__15450;
      var G__15469 = count__15451;
      var G__15470 = i__15452 + 1;
      seq__15449 = G__15467;
      chunk__15450 = G__15468;
      count__15451 = G__15469;
      i__15452 = G__15470;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15449);
      if (temp__4126__auto__) {
        var seq__15449__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15449__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__15449__$1);
          var G__15471 = cljs.core.chunk_rest(seq__15449__$1);
          var G__15472 = c__4563__auto__;
          var G__15473 = cljs.core.count(c__4563__auto__);
          var G__15474 = 0;
          seq__15449 = G__15471;
          chunk__15450 = G__15472;
          count__15451 = G__15473;
          i__15452 = G__15474;
          continue;
        } else {
          var vec__15456 = cljs.core.first(seq__15449__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15456, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15456, 1, null);
          var G__15457_15475 = v;
          var G__15458_15476 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15457_15475, G__15458_15476) : f.call(null, G__15457_15475, G__15458_15476);
          var G__15477 = cljs.core.next(seq__15449__$1);
          var G__15478 = null;
          var G__15479 = 0;
          var G__15480 = 0;
          seq__15449 = G__15477;
          chunk__15450 = G__15478;
          count__15451 = G__15479;
          i__15452 = G__15480;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__15459 = init;
    var G__15460 = null;
    var G__15461 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15459, G__15460, G__15461) : f.call(null, G__15459, G__15460, G__15461);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15462 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15462) : cljs.core.deref.call(null, G__15462);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15464 = {};
    return obj15464;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15481 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15482 = cljs.core.next(es);
          ret = G__15481;
          es = G__15482;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15483 = null;
  var G__15483__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15483__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15483 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15483__2.call(this, self__, k);
      case 3:
        return G__15483__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15483.cljs$core$IFn$_invoke$arity$2 = G__15483__2;
  G__15483.cljs$core$IFn$_invoke$arity$3 = G__15483__3;
  return G__15483;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15446) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15446)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15484 = i + 2;
      var G__15485 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__15484;
      ret = G__15485;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15486 = i + 1;
      var G__15487 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__15486;
      out = G__15487;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__15488 = o;
      if (G__15488) {
        var bit__4457__auto__ = G__15488.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4457__auto__ || G__15488.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15488.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15488);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15488);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__15489 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15489) : cljs.core.key.call(null, G__15489);
      }(), function() {
        var G__15490 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15490) : cljs.core.val.call(null, G__15490);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15493 = cljs.core.next(es);
          var G__15494 = tcoll__$1.assoc_BANG_(function() {
            var G__15491 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15491) : cljs.core.key.call(null, G__15491);
          }(), function() {
            var G__15492 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15492) : cljs.core.val.call(null, G__15492);
          }());
          es = G__15493;
          tcoll__$1 = G__15494;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15495 = ascending_QMARK_ ? t.left : t.right;
      var G__15496 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__15495;
      stack__$1 = G__15496;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15509 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15509) : cljs.core.deref.call(null, G__15509);
  } else {
    var init__$2 = function() {
      var G__15510 = init__$1;
      var G__15511 = node.key;
      var G__15512 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15510, G__15511, G__15512) : f.call(null, G__15510, G__15511, G__15512);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__15513 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15513) : cljs.core.deref.call(null, G__15513);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__15514 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15514) : cljs.core.deref.call(null, G__15514);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15516 = null;
  var G__15516__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15516__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15516 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15516__2.call(this, self__, k);
      case 3:
        return G__15516__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15516.cljs$core$IFn$_invoke$arity$2 = G__15516__2;
  G__15516.cljs$core$IFn$_invoke$arity$3 = G__15516__3;
  return G__15516;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15515) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15515)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15518 = null;
  var G__15518__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15518__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15518 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15518__2.call(this, self__, k);
      case 3:
        return G__15518__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15518.cljs$core$IFn$_invoke$arity$2 = G__15518__2;
  G__15518.cljs$core$IFn$_invoke$arity$3 = G__15518__3;
  return G__15518;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15517) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15517)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__15531 = k;
      var G__15532 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15531, G__15532) : comp.call(null, G__15531, G__15532);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__15551 = k;
      var G__15552 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15551, G__15552) : comp.call(null, G__15551, G__15552);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__15563 = k;
    var G__15564 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15563, G__15564) : comp.call(null, G__15563, G__15564);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15566 = cljs.core.seq(coll);
  var chunk__15567 = null;
  var count__15568 = 0;
  var i__15569 = 0;
  while (true) {
    if (i__15569 < count__15568) {
      var vec__15570 = chunk__15567.cljs$core$IIndexed$_nth$arity$2(null, i__15569);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15570, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15570, 1, null);
      var G__15571_15583 = v;
      var G__15572_15584 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15571_15583, G__15572_15584) : f.call(null, G__15571_15583, G__15572_15584);
      var G__15585 = seq__15566;
      var G__15586 = chunk__15567;
      var G__15587 = count__15568;
      var G__15588 = i__15569 + 1;
      seq__15566 = G__15585;
      chunk__15567 = G__15586;
      count__15568 = G__15587;
      i__15569 = G__15588;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15566);
      if (temp__4126__auto__) {
        var seq__15566__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15566__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__15566__$1);
          var G__15589 = cljs.core.chunk_rest(seq__15566__$1);
          var G__15590 = c__4563__auto__;
          var G__15591 = cljs.core.count(c__4563__auto__);
          var G__15592 = 0;
          seq__15566 = G__15589;
          chunk__15567 = G__15590;
          count__15568 = G__15591;
          i__15569 = G__15592;
          continue;
        } else {
          var vec__15573 = cljs.core.first(seq__15566__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15573, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15573, 1, null);
          var G__15574_15593 = v;
          var G__15575_15594 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15574_15593, G__15575_15594) : f.call(null, G__15574_15593, G__15575_15594);
          var G__15595 = cljs.core.next(seq__15566__$1);
          var G__15596 = null;
          var G__15597 = 0;
          var G__15598 = 0;
          seq__15566 = G__15595;
          chunk__15567 = G__15596;
          count__15568 = G__15597;
          i__15569 = G__15598;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15576 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15576) : cljs.core.keys.call(null, G__15576);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15577 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15577) : cljs.core.vals.call(null, G__15577);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__15578 = k;
        var G__15579 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15578, G__15579) : self__.comp.call(null, G__15578, G__15579);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15599 = t.left;
          t = G__15599;
          continue;
        } else {
          var G__15600 = t.right;
          t = G__15600;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15601 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15602 = cljs.core.next(es);
          ret = G__15601;
          es = G__15602;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15603 = null;
  var G__15603__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15603__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15603 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15603__2.call(this, self__, k);
      case 3:
        return G__15603__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15603.cljs$core$IFn$_invoke$arity$2 = G__15603__2;
  G__15603.cljs$core$IFn$_invoke$arity$3 = G__15603__3;
  return G__15603;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15565) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15565)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__15580 = k;
          var G__15581 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15580, G__15581) : self__.comp.call(null, G__15580, G__15581);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15604 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15605 = t.left;
              stack = G__15604;
              t = G__15605;
              continue;
            } else {
              var G__15606 = stack;
              var G__15607 = t.right;
              stack = G__15606;
              t = G__15607;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15608 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15609 = t.right;
              stack = G__15608;
              t = G__15609;
              continue;
            } else {
              var G__15610 = stack;
              var G__15611 = t.left;
              stack = G__15610;
              t = G__15611;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__15582 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15582) : cljs.core.key.call(null, G__15582);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__15612 = cljs.core.nnext(in$);
        var G__15613 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15612;
        out = G__15613;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15614__i = 0, G__15614__a = new Array(arguments.length - 0);
      while (G__15614__i < G__15614__a.length) {
        G__15614__a[G__15614__i] = arguments[G__15614__i + 0];
        ++G__15614__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15614__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15615) {
    var keyvals = cljs.core.seq(arglist__15615);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15616__i = 0, G__15616__a = new Array(arguments.length - 0);
      while (G__15616__i < G__15616__a.length) {
        G__15616__a[G__15616__i] = arguments[G__15616__i + 0];
        ++G__15616__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15616__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15617) {
    var keyvals = cljs.core.seq(arglist__15617);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15621 = {};
      return obj15621;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__15622 = cljs.core.nnext(kvs);
        kvs = G__15622;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15623__i = 0, G__15623__a = new Array(arguments.length - 0);
      while (G__15623__i < G__15623__a.length) {
        G__15623__a[G__15623__i] = arguments[G__15623__i + 0];
        ++G__15623__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15623__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15624) {
    var keyvals = cljs.core.seq(arglist__15624);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__15625 = cljs.core.nnext(in$);
        var G__15626 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15625;
        out = G__15626;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15627__i = 0, G__15627__a = new Array(arguments.length - 0);
      while (G__15627__i < G__15627__a.length) {
        G__15627__a[G__15627__i] = arguments[G__15627__i + 0];
        ++G__15627__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15627__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15628) {
    var keyvals = cljs.core.seq(arglist__15628);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__15629 = cljs.core.nnext(in$);
        var G__15630 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15629;
        out = G__15630;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__15631__i = 0, G__15631__a = new Array(arguments.length - 1);
      while (G__15631__i < G__15631__a.length) {
        G__15631__a[G__15631__i] = arguments[G__15631__i + 1];
        ++G__15631__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15631__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15632) {
    var comparator = cljs.core.first(arglist__15632);
    var keyvals = cljs.core.rest(arglist__15632);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15633 = self__.mseq;
    if (G__15633) {
      var bit__4457__auto__ = G__15633.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__15633.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15633.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15633);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15633);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15634 = self__.mseq;
    if (G__15634) {
      var bit__4457__auto__ = G__15634.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__15634.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15634.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15634);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15634);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15635 = self__.mseq;
    if (G__15635) {
      var bit__4457__auto__ = G__15635.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__15635.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15635.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15635);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15635);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15636 = self__.mseq;
    if (G__15636) {
      var bit__4457__auto__ = G__15636.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__15636.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15636.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15636);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15636);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__15637_SHARP_, p2__15638_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3776__auto__ = p1__15637_SHARP_;
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__15638_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__15639__i = 0, G__15639__a = new Array(arguments.length - 0);
      while (G__15639__i < G__15639__a.length) {
        G__15639__a[G__15639__i] = arguments[G__15639__i + 0];
        ++G__15639__i;
      }
      maps = new cljs.core.IndexedSeq(G__15639__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15640) {
    var maps = cljs.core.seq(arglist__15640);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__15643 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__15644 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15643, G__15644) : f.call(null, G__15643, G__15644);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3776__auto__ = m1;
            if (cljs.core.truth_(or__3776__auto__)) {
              return or__3776__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__15645__i = 0, G__15645__a = new Array(arguments.length - 1);
      while (G__15645__i < G__15645__a.length) {
        G__15645__a[G__15645__i] = arguments[G__15645__i + 1];
        ++G__15645__i;
      }
      maps = new cljs.core.IndexedSeq(G__15645__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15646) {
    var f = cljs.core.first(arglist__15646);
    var maps = cljs.core.rest(arglist__15646);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__15647 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__15648 = cljs.core.next(keys);
      ret = G__15647;
      keys = G__15648;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15651 = cljs.core.seq(coll);
  var chunk__15652 = null;
  var count__15653 = 0;
  var i__15654 = 0;
  while (true) {
    if (i__15654 < count__15653) {
      var vec__15655 = chunk__15652.cljs$core$IIndexed$_nth$arity$2(null, i__15654);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15655, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15655, 1, null);
      var G__15656_15661 = v;
      var G__15657_15662 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15656_15661, G__15657_15662) : f.call(null, G__15656_15661, G__15657_15662);
      var G__15663 = seq__15651;
      var G__15664 = chunk__15652;
      var G__15665 = count__15653;
      var G__15666 = i__15654 + 1;
      seq__15651 = G__15663;
      chunk__15652 = G__15664;
      count__15653 = G__15665;
      i__15654 = G__15666;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15651);
      if (temp__4126__auto__) {
        var seq__15651__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15651__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__15651__$1);
          var G__15667 = cljs.core.chunk_rest(seq__15651__$1);
          var G__15668 = c__4563__auto__;
          var G__15669 = cljs.core.count(c__4563__auto__);
          var G__15670 = 0;
          seq__15651 = G__15667;
          chunk__15652 = G__15668;
          count__15653 = G__15669;
          i__15654 = G__15670;
          continue;
        } else {
          var vec__15658 = cljs.core.first(seq__15651__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15658, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15658, 1, null);
          var G__15659_15671 = v;
          var G__15660_15672 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15659_15671, G__15660_15672) : f.call(null, G__15659_15671, G__15660_15672);
          var G__15673 = cljs.core.next(seq__15651__$1);
          var G__15674 = null;
          var G__15675 = 0;
          var G__15676 = 0;
          seq__15651 = G__15673;
          chunk__15652 = G__15674;
          count__15653 = G__15675;
          i__15654 = G__15676;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15649_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15649_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15677 = null;
  var G__15677__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15677__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15677 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15677__2.call(this, self__, k);
      case 3:
        return G__15677__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15677.cljs$core$IFn$_invoke$arity$2 = G__15677__2;
  G__15677.cljs$core$IFn$_invoke$arity$3 = G__15677__3;
  return G__15677;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15650) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15650)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15678 = i + 1;
        var G__15679 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__15678;
        out = G__15679;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15680 = i + 1;
        var G__15681 = cljs.core._conj_BANG_(out, items[i]);
        i = G__15680;
        out = G__15681;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15683 = null;
  var G__15683__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15683__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15683 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15683__2.call(this, self__, k);
      case 3:
        return G__15683__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15683.cljs$core$IFn$_invoke$arity$2 = G__15683__2;
  G__15683.cljs$core$IFn$_invoke$arity$3 = G__15683__3;
  return G__15683;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15682) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15682)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15686 = cljs.core.seq(coll);
  var chunk__15687 = null;
  var count__15688 = 0;
  var i__15689 = 0;
  while (true) {
    if (i__15689 < count__15688) {
      var vec__15690 = chunk__15687.cljs$core$IIndexed$_nth$arity$2(null, i__15689);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15690, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15690, 1, null);
      var G__15691_15696 = v;
      var G__15692_15697 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15691_15696, G__15692_15697) : f.call(null, G__15691_15696, G__15692_15697);
      var G__15698 = seq__15686;
      var G__15699 = chunk__15687;
      var G__15700 = count__15688;
      var G__15701 = i__15689 + 1;
      seq__15686 = G__15698;
      chunk__15687 = G__15699;
      count__15688 = G__15700;
      i__15689 = G__15701;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15686);
      if (temp__4126__auto__) {
        var seq__15686__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15686__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__15686__$1);
          var G__15702 = cljs.core.chunk_rest(seq__15686__$1);
          var G__15703 = c__4563__auto__;
          var G__15704 = cljs.core.count(c__4563__auto__);
          var G__15705 = 0;
          seq__15686 = G__15702;
          chunk__15687 = G__15703;
          count__15688 = G__15704;
          i__15689 = G__15705;
          continue;
        } else {
          var vec__15693 = cljs.core.first(seq__15686__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15693, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15693, 1, null);
          var G__15694_15706 = v;
          var G__15695_15707 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15694_15706, G__15695_15707) : f.call(null, G__15694_15706, G__15695_15707);
          var G__15708 = cljs.core.next(seq__15686__$1);
          var G__15709 = null;
          var G__15710 = 0;
          var G__15711 = 0;
          seq__15686 = G__15708;
          chunk__15687 = G__15709;
          count__15688 = G__15710;
          i__15689 = G__15711;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15684_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15684_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15712 = null;
  var G__15712__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15712__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15712 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15712__2.call(this, self__, k);
      case 3:
        return G__15712__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15712.cljs$core$IFn$_invoke$arity$2 = G__15712__2;
  G__15712.cljs$core$IFn$_invoke$arity$3 = G__15712__3;
  return G__15712;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15685) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15685)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4657__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4657__auto__.length) {
        var G__15713 = i + 1;
        var G__15714 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__15713;
        res = G__15714;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15715 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__15716 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__15715;
          out = G__15716;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__15717__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__15717 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__15718__i = 0, G__15718__a = new Array(arguments.length - 0);
        while (G__15718__i < G__15718__a.length) {
          G__15718__a[G__15718__i] = arguments[G__15718__i + 0];
          ++G__15718__i;
        }
        keys = new cljs.core.IndexedSeq(G__15718__a, 0);
      }
      return G__15717__delegate.call(this, keys);
    };
    G__15717.cljs$lang$maxFixedArity = 0;
    G__15717.cljs$lang$applyTo = function(arglist__15719) {
      var keys = cljs.core.seq(arglist__15719);
      return G__15717__delegate(keys);
    };
    G__15717.cljs$core$IFn$_invoke$arity$variadic = G__15717__delegate;
    return G__15717;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__15720 = null;
        if (arguments.length > 0) {
          var G__15721__i = 0, G__15721__a = new Array(arguments.length - 0);
          while (G__15721__i < G__15721__a.length) {
            G__15721__a[G__15721__i] = arguments[G__15721__i + 0];
            ++G__15721__i;
          }
          G__15720 = new cljs.core.IndexedSeq(G__15721__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15720);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__15722__i = 0, G__15722__a = new Array(arguments.length - 0);
      while (G__15722__i < G__15722__a.length) {
        G__15722__a[G__15722__i] = arguments[G__15722__i + 0];
        ++G__15722__i;
      }
      keys = new cljs.core.IndexedSeq(G__15722__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15723) {
    var keys = cljs.core.seq(arglist__15723);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__15724__i = 0, G__15724__a = new Array(arguments.length - 1);
      while (G__15724__i < G__15724__a.length) {
        G__15724__a[G__15724__i] = arguments[G__15724__i + 1];
        ++G__15724__i;
      }
      keys = new cljs.core.IndexedSeq(G__15724__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15725) {
    var comparator = cljs.core.first(arglist__15725);
    var keys = cljs.core.rest(arglist__15725);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__15726_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__15726_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__15726_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15727_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__15727_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__15727_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__15748 = null;
          var G__15748__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15748__1 = function(result) {
            var G__15738 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15738) : rf.call(null, G__15738);
          };
          var G__15748__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__15739 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15739) : cljs.core.deref.call(null, G__15739);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__15740 = result;
              var G__15741 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15740, G__15741) : rf.call(null, G__15740, G__15741);
            }
          };
          G__15748 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15748__0.call(this);
              case 1:
                return G__15748__1.call(this, result);
              case 2:
                return G__15748__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15748.cljs$core$IFn$_invoke$arity$0 = G__15748__0;
          G__15748.cljs$core$IFn$_invoke$arity$1 = G__15748__1;
          G__15748.cljs$core$IFn$_invoke$arity$2 = G__15748__2;
          return G__15748;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__15746, seen__$1) {
          while (true) {
            var vec__15747 = p__15746;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15747, 0, null);
            var xs__$1 = vec__15747;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__15749 = cljs.core.rest(s);
                var G__15750 = seen__$1;
                p__15746 = G__15749;
                seen__$1 = G__15750;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__15751 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__15752 = cljs.core.next(s__$1);
      ret = G__15751;
      s__$1 = G__15752;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__15754 = x;
    if (G__15754) {
      var bit__4450__auto__ = G__15754.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4450__auto__ || G__15754.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__15755 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__15756 = cljs.core.next(ks);
      var G__15757 = cljs.core.next(vs);
      map = G__15755;
      ks = G__15756;
      vs = G__15757;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__15768 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15768) : k.call(null, G__15768);
    }() > function() {
      var G__15769 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15769) : k.call(null, G__15769);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__15770__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15758_SHARP_, p2__15759_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__15758_SHARP_, p2__15759_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15770 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15771__i = 0, G__15771__a = new Array(arguments.length - 3);
        while (G__15771__i < G__15771__a.length) {
          G__15771__a[G__15771__i] = arguments[G__15771__i + 3];
          ++G__15771__i;
        }
        more = new cljs.core.IndexedSeq(G__15771__a, 0);
      }
      return G__15770__delegate.call(this, k, x, y, more);
    };
    G__15770.cljs$lang$maxFixedArity = 3;
    G__15770.cljs$lang$applyTo = function(arglist__15772) {
      var k = cljs.core.first(arglist__15772);
      arglist__15772 = cljs.core.next(arglist__15772);
      var x = cljs.core.first(arglist__15772);
      arglist__15772 = cljs.core.next(arglist__15772);
      var y = cljs.core.first(arglist__15772);
      var more = cljs.core.rest(arglist__15772);
      return G__15770__delegate(k, x, y, more);
    };
    G__15770.cljs$core$IFn$_invoke$arity$variadic = G__15770__delegate;
    return G__15770;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__15773 = null;
        if (arguments.length > 3) {
          var G__15774__i = 0, G__15774__a = new Array(arguments.length - 3);
          while (G__15774__i < G__15774__a.length) {
            G__15774__a[G__15774__i] = arguments[G__15774__i + 3];
            ++G__15774__i;
          }
          G__15773 = new cljs.core.IndexedSeq(G__15774__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15773);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__15785 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15785) : k.call(null, G__15785);
    }() < function() {
      var G__15786 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15786) : k.call(null, G__15786);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__15787__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15775_SHARP_, p2__15776_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__15775_SHARP_, p2__15776_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15787 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15788__i = 0, G__15788__a = new Array(arguments.length - 3);
        while (G__15788__i < G__15788__a.length) {
          G__15788__a[G__15788__i] = arguments[G__15788__i + 3];
          ++G__15788__i;
        }
        more = new cljs.core.IndexedSeq(G__15788__a, 0);
      }
      return G__15787__delegate.call(this, k, x, y, more);
    };
    G__15787.cljs$lang$maxFixedArity = 3;
    G__15787.cljs$lang$applyTo = function(arglist__15789) {
      var k = cljs.core.first(arglist__15789);
      arglist__15789 = cljs.core.next(arglist__15789);
      var x = cljs.core.first(arglist__15789);
      arglist__15789 = cljs.core.next(arglist__15789);
      var y = cljs.core.first(arglist__15789);
      var more = cljs.core.rest(arglist__15789);
      return G__15787__delegate(k, x, y, more);
    };
    G__15787.cljs$core$IFn$_invoke$arity$variadic = G__15787__delegate;
    return G__15787;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__15790 = null;
        if (arguments.length > 3) {
          var G__15791__i = 0, G__15791__a = new Array(arguments.length - 3);
          while (G__15791__i < G__15791__a.length) {
            G__15791__a[G__15791__i] = arguments[G__15791__i + 3];
            ++G__15791__i;
          }
          G__15790 = new cljs.core.IndexedSeq(G__15791__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15790);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__15808 = null;
          var G__15808__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15808__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15803 = result;
                var G__15804 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15803, G__15804) : rf.call(null, G__15803, G__15804);
              }());
            }();
            var G__15805 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15805) : rf.call(null, G__15805);
          };
          var G__15808__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__15806 = result;
              var G__15807 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15806, G__15807) : rf.call(null, G__15806, G__15807);
            } else {
              return result;
            }
          };
          G__15808 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15808__0.call(this);
              case 1:
                return G__15808__1.call(this, result);
              case 2:
                return G__15808__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15808.cljs$core$IFn$_invoke$arity$0 = G__15808__0;
          G__15808.cljs$core$IFn$_invoke$arity$1 = G__15808__1;
          G__15808.cljs$core$IFn$_invoke$arity$2 = G__15808__2;
          return G__15808;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15821 = null;
        var G__15821__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15821__1 = function(result) {
          var G__15816 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15816) : rf.call(null, G__15816);
        };
        var G__15821__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15817 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15817) : pred.call(null, G__15817);
          }())) {
            var G__15818 = result;
            var G__15819 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15818, G__15819) : rf.call(null, G__15818, G__15819);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__15821 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15821__0.call(this);
            case 1:
              return G__15821__1.call(this, result);
            case 2:
              return G__15821__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15821.cljs$core$IFn$_invoke$arity$0 = G__15821__0;
        G__15821.cljs$core$IFn$_invoke$arity$1 = G__15821__1;
        G__15821.cljs$core$IFn$_invoke$arity$2 = G__15821__2;
        return G__15821;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__15820 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15820) : pred.call(null, G__15820);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test__$1, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__15826 = function() {
      var G__15828 = cljs.core._entry_key(sc, e);
      var G__15829 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15828, G__15829) : comp.call(null, G__15828, G__15829);
    }();
    var G__15827 = 0;
    return test__$1.cljs$core$IFn$_invoke$arity$2 ? test__$1.cljs$core$IFn$_invoke$arity$2(G__15826, G__15827) : test__$1.call(null, G__15826, G__15827);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test__$1, key) {
    var include = cljs.core.mk_bound_fn(sc, test__$1, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test__$1))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15833 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15833, 0, null);
        var s = vec__15833;
        if (cljs.core.truth_(function() {
          var G__15834 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15834) : include.call(null, G__15834);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15835 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15835, 0, null);
      var s = vec__15835;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test__$1, key) {
    var include = cljs.core.mk_bound_fn(sc, test__$1, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test__$1))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15839 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15839, 0, null);
        var s = vec__15839;
        if (cljs.core.truth_(function() {
          var G__15840 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15840) : include.call(null, G__15840);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15841 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15841, 0, null);
      var s = vec__15841;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__15842 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15842) : Math.ceil.call(null, G__15842);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__15843 = ret;
        var G__15844 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15843, G__15844) : f.call(null, G__15843, G__15844);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__15845 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15845) : cljs.core.deref.call(null, G__15845);
      } else {
        var G__15846 = i + self__.step;
        var G__15847 = ret__$1;
        i = G__15846;
        ret = G__15847;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__15865 = null;
          var G__15865__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15865__1 = function(result) {
            var G__15862 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15862) : rf.call(null, G__15862);
          };
          var G__15865__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__15863 = result;
              var G__15864 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15863, G__15864) : rf.call(null, G__15863, G__15864);
            } else {
              return result;
            }
          };
          G__15865 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15865__0.call(this);
              case 1:
                return G__15865__1.call(this, result);
              case 2:
                return G__15865__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15865.cljs$core$IFn$_invoke$arity$0 = G__15865__0;
          G__15865.cljs$core$IFn$_invoke$arity$1 = G__15865__1;
          G__15865.cljs$core$IFn$_invoke$arity$2 = G__15865__2;
          return G__15865;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__15887 = null;
          var G__15887__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15887__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15878 = result;
                var G__15879 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15878, G__15879) : rf.call(null, G__15878, G__15879);
              }());
            }();
            var G__15880 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15880) : rf.call(null, G__15880);
          };
          var G__15887__2 = function(result, input) {
            var pval = function() {
              var G__15881 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15881) : cljs.core.deref.call(null, G__15881);
            }();
            var val = function() {
              var G__15882 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15882) : f.call(null, G__15882);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__15883 = result;
                var G__15884 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15883, G__15884) : rf.call(null, G__15883, G__15884);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__15887 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15887__0.call(this);
              case 1:
                return G__15887__1.call(this, result);
              case 2:
                return G__15887__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15887.cljs$core$IFn$_invoke$arity$0 = G__15887__0;
          G__15887.cljs$core$IFn$_invoke$arity$1 = G__15887__1;
          G__15887.cljs$core$IFn$_invoke$arity$2 = G__15887__2;
          return G__15887;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__15885 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15885) : f.call(null, G__15885);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__15866_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__15886 = p1__15866_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15886) : f.call(null, G__15886);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__15896 = init;
          var G__15897 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15896, G__15897) : f.call(null, G__15896, G__15897);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15992 = null;
      var G__15992__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__15992__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15950 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15950) : f.call(null, G__15950);
        }()], null);
      };
      var G__15992__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15951 = x;
          var G__15952 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15951, G__15952) : f.call(null, G__15951, G__15952);
        }()], null);
      };
      var G__15992__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15953 = x;
          var G__15954 = y;
          var G__15955 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15953, G__15954, G__15955) : f.call(null, G__15953, G__15954, G__15955);
        }()], null);
      };
      var G__15992__4 = function() {
        var G__15993__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__15993 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15994__i = 0, G__15994__a = new Array(arguments.length - 3);
            while (G__15994__i < G__15994__a.length) {
              G__15994__a[G__15994__i] = arguments[G__15994__i + 3];
              ++G__15994__i;
            }
            args = new cljs.core.IndexedSeq(G__15994__a, 0);
          }
          return G__15993__delegate.call(this, x, y, z, args);
        };
        G__15993.cljs$lang$maxFixedArity = 3;
        G__15993.cljs$lang$applyTo = function(arglist__15995) {
          var x = cljs.core.first(arglist__15995);
          arglist__15995 = cljs.core.next(arglist__15995);
          var y = cljs.core.first(arglist__15995);
          arglist__15995 = cljs.core.next(arglist__15995);
          var z = cljs.core.first(arglist__15995);
          var args = cljs.core.rest(arglist__15995);
          return G__15993__delegate(x, y, z, args);
        };
        G__15993.cljs$core$IFn$_invoke$arity$variadic = G__15993__delegate;
        return G__15993;
      }();
      G__15992 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15992__0.call(this);
          case 1:
            return G__15992__1.call(this, x);
          case 2:
            return G__15992__2.call(this, x, y);
          case 3:
            return G__15992__3.call(this, x, y, z);
          default:
            var G__15996 = null;
            if (arguments.length > 3) {
              var G__15997__i = 0, G__15997__a = new Array(arguments.length - 3);
              while (G__15997__i < G__15997__a.length) {
                G__15997__a[G__15997__i] = arguments[G__15997__i + 3];
                ++G__15997__i;
              }
              G__15996 = new cljs.core.IndexedSeq(G__15997__a, 0);
            }
            return G__15992__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15996);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15992.cljs$lang$maxFixedArity = 3;
      G__15992.cljs$lang$applyTo = G__15992__4.cljs$lang$applyTo;
      G__15992.cljs$core$IFn$_invoke$arity$0 = G__15992__0;
      G__15992.cljs$core$IFn$_invoke$arity$1 = G__15992__1;
      G__15992.cljs$core$IFn$_invoke$arity$2 = G__15992__2;
      G__15992.cljs$core$IFn$_invoke$arity$3 = G__15992__3;
      G__15992.cljs$core$IFn$_invoke$arity$variadic = G__15992__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15992;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15998 = null;
      var G__15998__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__15998__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15956 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15956) : f.call(null, G__15956);
        }(), function() {
          var G__15957 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15957) : g.call(null, G__15957);
        }()], null);
      };
      var G__15998__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15958 = x;
          var G__15959 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15958, G__15959) : f.call(null, G__15958, G__15959);
        }(), function() {
          var G__15960 = x;
          var G__15961 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15960, G__15961) : g.call(null, G__15960, G__15961);
        }()], null);
      };
      var G__15998__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15962 = x;
          var G__15963 = y;
          var G__15964 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15962, G__15963, G__15964) : f.call(null, G__15962, G__15963, G__15964);
        }(), function() {
          var G__15965 = x;
          var G__15966 = y;
          var G__15967 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15965, G__15966, G__15967) : g.call(null, G__15965, G__15966, G__15967);
        }()], null);
      };
      var G__15998__4 = function() {
        var G__15999__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__15999 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16000__i = 0, G__16000__a = new Array(arguments.length - 3);
            while (G__16000__i < G__16000__a.length) {
              G__16000__a[G__16000__i] = arguments[G__16000__i + 3];
              ++G__16000__i;
            }
            args = new cljs.core.IndexedSeq(G__16000__a, 0);
          }
          return G__15999__delegate.call(this, x, y, z, args);
        };
        G__15999.cljs$lang$maxFixedArity = 3;
        G__15999.cljs$lang$applyTo = function(arglist__16001) {
          var x = cljs.core.first(arglist__16001);
          arglist__16001 = cljs.core.next(arglist__16001);
          var y = cljs.core.first(arglist__16001);
          arglist__16001 = cljs.core.next(arglist__16001);
          var z = cljs.core.first(arglist__16001);
          var args = cljs.core.rest(arglist__16001);
          return G__15999__delegate(x, y, z, args);
        };
        G__15999.cljs$core$IFn$_invoke$arity$variadic = G__15999__delegate;
        return G__15999;
      }();
      G__15998 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15998__0.call(this);
          case 1:
            return G__15998__1.call(this, x);
          case 2:
            return G__15998__2.call(this, x, y);
          case 3:
            return G__15998__3.call(this, x, y, z);
          default:
            var G__16002 = null;
            if (arguments.length > 3) {
              var G__16003__i = 0, G__16003__a = new Array(arguments.length - 3);
              while (G__16003__i < G__16003__a.length) {
                G__16003__a[G__16003__i] = arguments[G__16003__i + 3];
                ++G__16003__i;
              }
              G__16002 = new cljs.core.IndexedSeq(G__16003__a, 0);
            }
            return G__15998__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16002);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15998.cljs$lang$maxFixedArity = 3;
      G__15998.cljs$lang$applyTo = G__15998__4.cljs$lang$applyTo;
      G__15998.cljs$core$IFn$_invoke$arity$0 = G__15998__0;
      G__15998.cljs$core$IFn$_invoke$arity$1 = G__15998__1;
      G__15998.cljs$core$IFn$_invoke$arity$2 = G__15998__2;
      G__15998.cljs$core$IFn$_invoke$arity$3 = G__15998__3;
      G__15998.cljs$core$IFn$_invoke$arity$variadic = G__15998__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15998;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__16004 = null;
      var G__16004__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__16004__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15968 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15968) : f.call(null, G__15968);
        }(), function() {
          var G__15969 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15969) : g.call(null, G__15969);
        }(), function() {
          var G__15970 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15970) : h.call(null, G__15970);
        }()], null);
      };
      var G__16004__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15971 = x;
          var G__15972 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15971, G__15972) : f.call(null, G__15971, G__15972);
        }(), function() {
          var G__15973 = x;
          var G__15974 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15973, G__15974) : g.call(null, G__15973, G__15974);
        }(), function() {
          var G__15975 = x;
          var G__15976 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15975, G__15976) : h.call(null, G__15975, G__15976);
        }()], null);
      };
      var G__16004__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15977 = x;
          var G__15978 = y;
          var G__15979 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15977, G__15978, G__15979) : f.call(null, G__15977, G__15978, G__15979);
        }(), function() {
          var G__15980 = x;
          var G__15981 = y;
          var G__15982 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15980, G__15981, G__15982) : g.call(null, G__15980, G__15981, G__15982);
        }(), function() {
          var G__15983 = x;
          var G__15984 = y;
          var G__15985 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15983, G__15984, G__15985) : h.call(null, G__15983, G__15984, G__15985);
        }()], null);
      };
      var G__16004__4 = function() {
        var G__16005__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__16005 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16006__i = 0, G__16006__a = new Array(arguments.length - 3);
            while (G__16006__i < G__16006__a.length) {
              G__16006__a[G__16006__i] = arguments[G__16006__i + 3];
              ++G__16006__i;
            }
            args = new cljs.core.IndexedSeq(G__16006__a, 0);
          }
          return G__16005__delegate.call(this, x, y, z, args);
        };
        G__16005.cljs$lang$maxFixedArity = 3;
        G__16005.cljs$lang$applyTo = function(arglist__16007) {
          var x = cljs.core.first(arglist__16007);
          arglist__16007 = cljs.core.next(arglist__16007);
          var y = cljs.core.first(arglist__16007);
          arglist__16007 = cljs.core.next(arglist__16007);
          var z = cljs.core.first(arglist__16007);
          var args = cljs.core.rest(arglist__16007);
          return G__16005__delegate(x, y, z, args);
        };
        G__16005.cljs$core$IFn$_invoke$arity$variadic = G__16005__delegate;
        return G__16005;
      }();
      G__16004 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16004__0.call(this);
          case 1:
            return G__16004__1.call(this, x);
          case 2:
            return G__16004__2.call(this, x, y);
          case 3:
            return G__16004__3.call(this, x, y, z);
          default:
            var G__16008 = null;
            if (arguments.length > 3) {
              var G__16009__i = 0, G__16009__a = new Array(arguments.length - 3);
              while (G__16009__i < G__16009__a.length) {
                G__16009__a[G__16009__i] = arguments[G__16009__i + 3];
                ++G__16009__i;
              }
              G__16008 = new cljs.core.IndexedSeq(G__16009__a, 0);
            }
            return G__16004__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16008);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16004.cljs$lang$maxFixedArity = 3;
      G__16004.cljs$lang$applyTo = G__16004__4.cljs$lang$applyTo;
      G__16004.cljs$core$IFn$_invoke$arity$0 = G__16004__0;
      G__16004.cljs$core$IFn$_invoke$arity$1 = G__16004__1;
      G__16004.cljs$core$IFn$_invoke$arity$2 = G__16004__2;
      G__16004.cljs$core$IFn$_invoke$arity$3 = G__16004__3;
      G__16004.cljs$core$IFn$_invoke$arity$variadic = G__16004__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16004;
    }();
  };
  var juxt__4 = function() {
    var G__16010__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__16011 = null;
          var G__16011__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15898_SHARP_, p2__15899_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15898_SHARP_, function() {
                  return p2__15899_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15899_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15899_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16011__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15900_SHARP_, p2__15901_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15900_SHARP_, function() {
                  var G__15986 = x;
                  return p2__15901_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15901_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15986) : p2__15901_SHARP_.call(null, G__15986);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16011__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15902_SHARP_, p2__15903_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15902_SHARP_, function() {
                  var G__15987 = x;
                  var G__15988 = y;
                  return p2__15903_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15903_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15987, G__15988) : p2__15903_SHARP_.call(null, G__15987, G__15988);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16011__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15904_SHARP_, p2__15905_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15904_SHARP_, function() {
                  var G__15989 = x;
                  var G__15990 = y;
                  var G__15991 = z;
                  return p2__15905_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15905_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15989, G__15990, G__15991) : p2__15905_SHARP_.call(null, G__15989, G__15990, G__15991);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16011__4 = function() {
            var G__16012__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__15906_SHARP_, p2__15907_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15906_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15907_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__16012 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__16013__i = 0, G__16013__a = new Array(arguments.length - 3);
                while (G__16013__i < G__16013__a.length) {
                  G__16013__a[G__16013__i] = arguments[G__16013__i + 3];
                  ++G__16013__i;
                }
                args = new cljs.core.IndexedSeq(G__16013__a, 0);
              }
              return G__16012__delegate.call(this, x, y, z, args);
            };
            G__16012.cljs$lang$maxFixedArity = 3;
            G__16012.cljs$lang$applyTo = function(arglist__16014) {
              var x = cljs.core.first(arglist__16014);
              arglist__16014 = cljs.core.next(arglist__16014);
              var y = cljs.core.first(arglist__16014);
              arglist__16014 = cljs.core.next(arglist__16014);
              var z = cljs.core.first(arglist__16014);
              var args = cljs.core.rest(arglist__16014);
              return G__16012__delegate(x, y, z, args);
            };
            G__16012.cljs$core$IFn$_invoke$arity$variadic = G__16012__delegate;
            return G__16012;
          }();
          G__16011 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__16011__0.call(this);
              case 1:
                return G__16011__1.call(this, x);
              case 2:
                return G__16011__2.call(this, x, y);
              case 3:
                return G__16011__3.call(this, x, y, z);
              default:
                var G__16015 = null;
                if (arguments.length > 3) {
                  var G__16016__i = 0, G__16016__a = new Array(arguments.length - 3);
                  while (G__16016__i < G__16016__a.length) {
                    G__16016__a[G__16016__i] = arguments[G__16016__i + 3];
                    ++G__16016__i;
                  }
                  G__16015 = new cljs.core.IndexedSeq(G__16016__a, 0);
                }
                return G__16011__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16015);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16011.cljs$lang$maxFixedArity = 3;
          G__16011.cljs$lang$applyTo = G__16011__4.cljs$lang$applyTo;
          G__16011.cljs$core$IFn$_invoke$arity$0 = G__16011__0;
          G__16011.cljs$core$IFn$_invoke$arity$1 = G__16011__1;
          G__16011.cljs$core$IFn$_invoke$arity$2 = G__16011__2;
          G__16011.cljs$core$IFn$_invoke$arity$3 = G__16011__3;
          G__16011.cljs$core$IFn$_invoke$arity$variadic = G__16011__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__16011;
        }();
      }(fs__$1);
    };
    var G__16010 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__16017__i = 0, G__16017__a = new Array(arguments.length - 3);
        while (G__16017__i < G__16017__a.length) {
          G__16017__a[G__16017__i] = arguments[G__16017__i + 3];
          ++G__16017__i;
        }
        fs = new cljs.core.IndexedSeq(G__16017__a, 0);
      }
      return G__16010__delegate.call(this, f, g, h, fs);
    };
    G__16010.cljs$lang$maxFixedArity = 3;
    G__16010.cljs$lang$applyTo = function(arglist__16018) {
      var f = cljs.core.first(arglist__16018);
      arglist__16018 = cljs.core.next(arglist__16018);
      var g = cljs.core.first(arglist__16018);
      arglist__16018 = cljs.core.next(arglist__16018);
      var h = cljs.core.first(arglist__16018);
      var fs = cljs.core.rest(arglist__16018);
      return G__16010__delegate(f, g, h, fs);
    };
    G__16010.cljs$core$IFn$_invoke$arity$variadic = G__16010__delegate;
    return G__16010;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__16019 = null;
        if (arguments.length > 3) {
          var G__16020__i = 0, G__16020__a = new Array(arguments.length - 3);
          while (G__16020__i < G__16020__a.length) {
            G__16020__a[G__16020__i] = arguments[G__16020__i + 3];
            ++G__16020__i;
          }
          G__16019 = new cljs.core.IndexedSeq(G__16020__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__16019);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__16021 = cljs.core.next(coll);
        coll = G__16021;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__16022 = n - 1;
        var G__16023 = cljs.core.next(coll);
        n = G__16022;
        coll = G__16023;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__16027 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16027, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16027, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16027, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_16035 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__16036_16042 = cljs.core.first(coll);
        var G__16037_16043 = writer;
        var G__16038_16044 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16036_16042, G__16037_16043, G__16038_16044) : print_one.call(null, G__16036_16042, G__16037_16043, G__16038_16044);
      } else {
      }
      var coll_16045__$1 = cljs.core.next(coll);
      var n_16046 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_16045__$1 && (n_16046 == null || !(n_16046 === 0))) {
          cljs.core._write(writer, sep);
          var G__16039_16047 = cljs.core.first(coll_16045__$1);
          var G__16040_16048 = writer;
          var G__16041_16049 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16039_16047, G__16040_16048, G__16041_16049) : print_one.call(null, G__16039_16047, G__16040_16048, G__16041_16049);
          var G__16050 = cljs.core.next(coll_16045__$1);
          var G__16051 = n_16046 - 1;
          coll_16045__$1 = G__16050;
          n_16046 = G__16051;
          continue;
        } else {
          if (cljs.core.seq(coll_16045__$1) && n_16046 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16035;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__16056 = cljs.core.seq(ss);
    var chunk__16057 = null;
    var count__16058 = 0;
    var i__16059 = 0;
    while (true) {
      if (i__16059 < count__16058) {
        var s = chunk__16057.cljs$core$IIndexed$_nth$arity$2(null, i__16059);
        cljs.core._write(writer, s);
        var G__16060 = seq__16056;
        var G__16061 = chunk__16057;
        var G__16062 = count__16058;
        var G__16063 = i__16059 + 1;
        seq__16056 = G__16060;
        chunk__16057 = G__16061;
        count__16058 = G__16062;
        i__16059 = G__16063;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__16056);
        if (temp__4126__auto__) {
          var seq__16056__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__16056__$1)) {
            var c__4563__auto__ = cljs.core.chunk_first(seq__16056__$1);
            var G__16064 = cljs.core.chunk_rest(seq__16056__$1);
            var G__16065 = c__4563__auto__;
            var G__16066 = cljs.core.count(c__4563__auto__);
            var G__16067 = 0;
            seq__16056 = G__16064;
            chunk__16057 = G__16065;
            count__16058 = G__16066;
            i__16059 = G__16067;
            continue;
          } else {
            var s = cljs.core.first(seq__16056__$1);
            cljs.core._write(writer, s);
            var G__16068 = cljs.core.next(seq__16056__$1);
            var G__16069 = null;
            var G__16070 = 0;
            var G__16071 = 0;
            seq__16056 = G__16068;
            chunk__16057 = G__16069;
            count__16058 = G__16070;
            i__16059 = G__16071;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__16072__i = 0, G__16072__a = new Array(arguments.length - 1);
      while (G__16072__i < G__16072__a.length) {
        G__16072__a[G__16072__i] = arguments[G__16072__i + 1];
        ++G__16072__i;
      }
      ss = new cljs.core.IndexedSeq(G__16072__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__16073) {
    var writer = cljs.core.first(arglist__16073);
    var ss = cljs.core.rest(arglist__16073);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj16075 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj16075;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__16078 = '[\\\\"\b\f\n\r\t]';
    var G__16079 = "g";
    return RegExp(G__16078, G__16079);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3764__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3764__auto__)) {
          var and__3764__auto____$1 = function() {
            var G__16093 = obj;
            if (G__16093) {
              var bit__4457__auto__ = G__16093.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4457__auto__ || G__16093.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__16093.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__16093);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__16093);
            }
          }();
          if (and__3764__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3764__auto____$1;
          }
        } else {
          return and__3764__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__16094 = obj;
            if (G__16094) {
              var bit__4450__auto__ = G__16094.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4450__auto__ || G__16094.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__16095 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__16096 = pr_writer;
                var G__16097 = writer;
                var G__16098 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16095, G__16096, G__16097, G__16098) : cljs.core.print_map.call(null, G__16095, G__16096, G__16097, G__16098);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__16099 = obj;
                    return goog.isString(G__16099);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__16101 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__16101;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__16100 = obj;
                            if (G__16100) {
                              var bit__4457__auto__ = G__16100.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4457__auto__ || G__16100.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__16100.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__16100);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__16100);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__16106 = cljs.core.seq(cljs.core.next(objs));
  var chunk__16107 = null;
  var count__16108 = 0;
  var i__16109 = 0;
  while (true) {
    if (i__16109 < count__16108) {
      var obj = chunk__16107.cljs$core$IIndexed$_nth$arity$2(null, i__16109);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__16110 = seq__16106;
      var G__16111 = chunk__16107;
      var G__16112 = count__16108;
      var G__16113 = i__16109 + 1;
      seq__16106 = G__16110;
      chunk__16107 = G__16111;
      count__16108 = G__16112;
      i__16109 = G__16113;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__16106);
      if (temp__4126__auto__) {
        var seq__16106__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16106__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__16106__$1);
          var G__16114 = cljs.core.chunk_rest(seq__16106__$1);
          var G__16115 = c__4563__auto__;
          var G__16116 = cljs.core.count(c__4563__auto__);
          var G__16117 = 0;
          seq__16106 = G__16114;
          chunk__16107 = G__16115;
          count__16108 = G__16116;
          i__16109 = G__16117;
          continue;
        } else {
          var obj = cljs.core.first(seq__16106__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__16118 = cljs.core.next(seq__16106__$1);
          var G__16119 = null;
          var G__16120 = 0;
          var G__16121 = 0;
          seq__16106 = G__16118;
          chunk__16107 = G__16119;
          count__16108 = G__16120;
          i__16109 = G__16121;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16122__i = 0, G__16122__a = new Array(arguments.length - 0);
      while (G__16122__i < G__16122__a.length) {
        G__16122__a[G__16122__i] = arguments[G__16122__i + 0];
        ++G__16122__i;
      }
      objs = new cljs.core.IndexedSeq(G__16122__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__16123) {
    var objs = cljs.core.seq(arglist__16123);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16124__i = 0, G__16124__a = new Array(arguments.length - 0);
      while (G__16124__i < G__16124__a.length) {
        G__16124__a[G__16124__i] = arguments[G__16124__i + 0];
        ++G__16124__i;
      }
      objs = new cljs.core.IndexedSeq(G__16124__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__16125) {
    var objs = cljs.core.seq(arglist__16125);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16126__i = 0, G__16126__a = new Array(arguments.length - 0);
      while (G__16126__i < G__16126__a.length) {
        G__16126__a[G__16126__i] = arguments[G__16126__i + 0];
        ++G__16126__i;
      }
      objs = new cljs.core.IndexedSeq(G__16126__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__16127) {
    var objs = cljs.core.seq(arglist__16127);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16128__i = 0, G__16128__a = new Array(arguments.length - 0);
      while (G__16128__i < G__16128__a.length) {
        G__16128__a[G__16128__i] = arguments[G__16128__i + 0];
        ++G__16128__i;
      }
      objs = new cljs.core.IndexedSeq(G__16128__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__16129) {
    var objs = cljs.core.seq(arglist__16129);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16130__i = 0, G__16130__a = new Array(arguments.length - 0);
      while (G__16130__i < G__16130__a.length) {
        G__16130__a[G__16130__i] = arguments[G__16130__i + 0];
        ++G__16130__i;
      }
      objs = new cljs.core.IndexedSeq(G__16130__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__16131) {
    var objs = cljs.core.seq(arglist__16131);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16132__i = 0, G__16132__a = new Array(arguments.length - 0);
      while (G__16132__i < G__16132__a.length) {
        G__16132__a[G__16132__i] = arguments[G__16132__i + 0];
        ++G__16132__i;
      }
      objs = new cljs.core.IndexedSeq(G__16132__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__16133) {
    var objs = cljs.core.seq(arglist__16133);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16134__i = 0, G__16134__a = new Array(arguments.length - 0);
      while (G__16134__i < G__16134__a.length) {
        G__16134__a[G__16134__i] = arguments[G__16134__i + 0];
        ++G__16134__i;
      }
      objs = new cljs.core.IndexedSeq(G__16134__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__16135) {
    var objs = cljs.core.seq(arglist__16135);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__16136__i = 0, G__16136__a = new Array(arguments.length - 0);
      while (G__16136__i < G__16136__a.length) {
        G__16136__a[G__16136__i] = arguments[G__16136__i + 0];
        ++G__16136__i;
      }
      objs = new cljs.core.IndexedSeq(G__16136__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__16137) {
    var objs = cljs.core.seq(arglist__16137);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__16144_16150 = cljs.core.key(e);
    var G__16145_16151 = w;
    var G__16146_16152 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16144_16150, G__16145_16151, G__16146_16152) : print_one.call(null, G__16144_16150, G__16145_16151, G__16146_16152);
    cljs.core._write(w, " ");
    var G__16147 = cljs.core.val(e);
    var G__16148 = w;
    var G__16149 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16147, G__16148, G__16149) : print_one.call(null, G__16147, G__16148, G__16149);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__16153__i = 0, G__16153__a = new Array(arguments.length - 2);
      while (G__16153__i < G__16153__a.length) {
        G__16153__a[G__16153__i] = arguments[G__16153__i + 2];
        ++G__16153__i;
      }
      args = new cljs.core.IndexedSeq(G__16153__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__16154) {
    var iref = cljs.core.first(arglist__16154);
    arglist__16154 = cljs.core.next(arglist__16154);
    var f = cljs.core.first(arglist__16154);
    var args = cljs.core.rest(arglist__16154);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__16157 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16157) : cljs.core.atom.call(null, G__16157);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__16159 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16159) : cljs.core.deref.call(null, G__16159);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__16160_SHARP_, p2__16161_SHARP_) {
    var ret = function() {
      var G__16164 = p1__16160_SHARP_;
      var G__16165 = p2__16161_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16164, G__16165) : rf.call(null, G__16164, G__16165);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__16168 = null;
      var G__16168__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16168__1 = function(result) {
        var G__16167 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16167) : rf.call(null, G__16167);
      };
      var G__16168__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__16168 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16168__0.call(this);
          case 1:
            return G__16168__1.call(this, result);
          case 2:
            return G__16168__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16168.cljs$core$IFn$_invoke$arity$0 = G__16168__0;
      G__16168.cljs$core$IFn$_invoke$arity$1 = G__16168__1;
      G__16168.cljs$core$IFn$_invoke$arity$2 = G__16168__2;
      return G__16168;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__16177 = null;
          var G__16177__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__16177__1 = function(result) {
            var G__16173 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16173) : rf.call(null, G__16173);
          };
          var G__16177__2 = function(result, input) {
            var prior = function() {
              var G__16174 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16174) : cljs.core.deref.call(null, G__16174);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__16175 = result;
              var G__16176 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16175, G__16176) : rf.call(null, G__16175, G__16176);
            }
          };
          G__16177 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__16177__0.call(this);
              case 1:
                return G__16177__1.call(this, result);
              case 2:
                return G__16177__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16177.cljs$core$IFn$_invoke$arity$0 = G__16177__0;
          G__16177.cljs$core$IFn$_invoke$arity$1 = G__16177__1;
          G__16177.cljs$core$IFn$_invoke$arity$2 = G__16177__2;
          return G__16177;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16179_SHARP_, p2__16178_SHARP_) {
    var G__16181 = p2__16178_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16181) : proc.call(null, G__16181);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj16183 = {};
  return obj16183;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._clj__GT_js[function() {
        var G__16187 = x__4420__auto__;
        return goog.typeOf(G__16187);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._key__GT_js[function() {
        var G__16191 = x__4420__auto__;
        return goog.typeOf(G__16191);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__16194 = k;
    if (G__16194) {
      var bit__4457__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3776__auto__ = bit__4457__auto__;
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          return G__16194.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__16194.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16194);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16194);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__16195 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16195) : cljs.core.clj__GT_js.call(null, G__16195);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__16211 = x;
      if (G__16211) {
        var bit__4457__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3776__auto__ = bit__4457__auto__;
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return G__16211.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__16211.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16211);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__16211);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj16213 = {};
              return obj16213;
            }();
            var seq__16214_16224 = cljs.core.seq(x);
            var chunk__16215_16225 = null;
            var count__16216_16226 = 0;
            var i__16217_16227 = 0;
            while (true) {
              if (i__16217_16227 < count__16216_16226) {
                var vec__16218_16228 = chunk__16215_16225.cljs$core$IIndexed$_nth$arity$2(null, i__16217_16227);
                var k_16229 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16218_16228, 0, null);
                var v_16230 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16218_16228, 1, null);
                m[cljs.core.key__GT_js(k_16229)] = clj__GT_js(v_16230);
                var G__16231 = seq__16214_16224;
                var G__16232 = chunk__16215_16225;
                var G__16233 = count__16216_16226;
                var G__16234 = i__16217_16227 + 1;
                seq__16214_16224 = G__16231;
                chunk__16215_16225 = G__16232;
                count__16216_16226 = G__16233;
                i__16217_16227 = G__16234;
                continue;
              } else {
                var temp__4126__auto___16235 = cljs.core.seq(seq__16214_16224);
                if (temp__4126__auto___16235) {
                  var seq__16214_16236__$1 = temp__4126__auto___16235;
                  if (cljs.core.chunked_seq_QMARK_(seq__16214_16236__$1)) {
                    var c__4563__auto___16237 = cljs.core.chunk_first(seq__16214_16236__$1);
                    var G__16238 = cljs.core.chunk_rest(seq__16214_16236__$1);
                    var G__16239 = c__4563__auto___16237;
                    var G__16240 = cljs.core.count(c__4563__auto___16237);
                    var G__16241 = 0;
                    seq__16214_16224 = G__16238;
                    chunk__16215_16225 = G__16239;
                    count__16216_16226 = G__16240;
                    i__16217_16227 = G__16241;
                    continue;
                  } else {
                    var vec__16219_16242 = cljs.core.first(seq__16214_16236__$1);
                    var k_16243 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16219_16242, 0, null);
                    var v_16244 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16219_16242, 1, null);
                    m[cljs.core.key__GT_js(k_16243)] = clj__GT_js(v_16244);
                    var G__16245 = cljs.core.next(seq__16214_16236__$1);
                    var G__16246 = null;
                    var G__16247 = 0;
                    var G__16248 = 0;
                    seq__16214_16224 = G__16245;
                    chunk__16215_16225 = G__16246;
                    count__16216_16226 = G__16247;
                    i__16217_16227 = G__16248;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__16220_16249 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__16221_16250 = null;
              var count__16222_16251 = 0;
              var i__16223_16252 = 0;
              while (true) {
                if (i__16223_16252 < count__16222_16251) {
                  var x_16253__$1 = chunk__16221_16250.cljs$core$IIndexed$_nth$arity$2(null, i__16223_16252);
                  arr.push(x_16253__$1);
                  var G__16254 = seq__16220_16249;
                  var G__16255 = chunk__16221_16250;
                  var G__16256 = count__16222_16251;
                  var G__16257 = i__16223_16252 + 1;
                  seq__16220_16249 = G__16254;
                  chunk__16221_16250 = G__16255;
                  count__16222_16251 = G__16256;
                  i__16223_16252 = G__16257;
                  continue;
                } else {
                  var temp__4126__auto___16258 = cljs.core.seq(seq__16220_16249);
                  if (temp__4126__auto___16258) {
                    var seq__16220_16259__$1 = temp__4126__auto___16258;
                    if (cljs.core.chunked_seq_QMARK_(seq__16220_16259__$1)) {
                      var c__4563__auto___16260 = cljs.core.chunk_first(seq__16220_16259__$1);
                      var G__16261 = cljs.core.chunk_rest(seq__16220_16259__$1);
                      var G__16262 = c__4563__auto___16260;
                      var G__16263 = cljs.core.count(c__4563__auto___16260);
                      var G__16264 = 0;
                      seq__16220_16249 = G__16261;
                      chunk__16221_16250 = G__16262;
                      count__16222_16251 = G__16263;
                      i__16223_16252 = G__16264;
                      continue;
                    } else {
                      var x_16265__$1 = cljs.core.first(seq__16220_16259__$1);
                      arr.push(x_16265__$1);
                      var G__16266 = cljs.core.next(seq__16220_16259__$1);
                      var G__16267 = null;
                      var G__16268 = 0;
                      var G__16269 = 0;
                      seq__16220_16249 = G__16266;
                      chunk__16221_16250 = G__16267;
                      count__16222_16251 = G__16268;
                      i__16223_16252 = G__16269;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj16271 = {};
  return obj16271;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._js__GT_clj[function() {
        var G__16275 = x__4420__auto__;
        return goog.typeOf(G__16275);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__16332__delegate = function(x, opts) {
      var map__16305 = opts;
      var map__16305__$1 = cljs.core.seq_QMARK_(map__16305) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__16305) : map__16305;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16305__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__16305, map__16305__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__16321 = x__$1;
            if (G__16321) {
              var bit__4457__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3776__auto__ = bit__4457__auto__;
                if (cljs.core.truth_(or__3776__auto__)) {
                  return or__3776__auto__;
                } else {
                  return G__16321.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__16321.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16321);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16321);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4532__auto__ = function(map__16305, map__16305__$1, keywordize_keys, keyfn) {
                        return function iter__16322(s__16323) {
                          return new cljs.core.LazySeq(null, function(map__16305, map__16305__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__16323__$1 = s__16323;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__16323__$1);
                                if (temp__4126__auto__) {
                                  var s__16323__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__16323__$2)) {
                                    var c__4530__auto__ = cljs.core.chunk_first(s__16323__$2);
                                    var size__4531__auto__ = cljs.core.count(c__4530__auto__);
                                    var b__16325 = cljs.core.chunk_buffer(size__4531__auto__);
                                    if (function() {
                                      var i__16324 = 0;
                                      while (true) {
                                        if (i__16324 < size__4531__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4530__auto__, i__16324);
                                          cljs.core.chunk_append(b__16325, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__16330 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16330) : keyfn.call(null, G__16330);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__16333 = i__16324 + 1;
                                          i__16324 = G__16333;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16325), iter__16322(cljs.core.chunk_rest(s__16323__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16325), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__16323__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__16331 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16331) : keyfn.call(null, G__16331);
                                    }(), thisfn(x__$1[k])], null), iter__16322(cljs.core.rest(s__16323__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__16305, map__16305__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__16305, map__16305__$1, keywordize_keys, keyfn);
                      return iter__4532__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__16305, map__16305__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__16332 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__16334__i = 0, G__16334__a = new Array(arguments.length - 1);
        while (G__16334__i < G__16334__a.length) {
          G__16334__a[G__16334__i] = arguments[G__16334__i + 1];
          ++G__16334__i;
        }
        opts = new cljs.core.IndexedSeq(G__16334__a, 0);
      }
      return G__16332__delegate.call(this, x, opts);
    };
    G__16332.cljs$lang$maxFixedArity = 1;
    G__16332.cljs$lang$applyTo = function(arglist__16335) {
      var x = cljs.core.first(arglist__16335);
      var opts = cljs.core.rest(arglist__16335);
      return G__16332__delegate(x, opts);
    };
    G__16332.cljs$core$IFn$_invoke$arity$variadic = G__16332__delegate;
    return G__16332;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__16336 = null;
        if (arguments.length > 1) {
          var G__16337__i = 0, G__16337__a = new Array(arguments.length - 1);
          while (G__16337__i < G__16337__a.length) {
            G__16337__a[G__16337__i] = arguments[G__16337__i + 1];
            ++G__16337__i;
          }
          G__16336 = new cljs.core.IndexedSeq(G__16337__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16336);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__16340 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16340) : cljs.core.atom.call(null, G__16340);
  }();
  return function(mem) {
    return function() {
      var G__16342__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__16341 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16341) : cljs.core.deref.call(null, G__16341);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__16342 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__16343__i = 0, G__16343__a = new Array(arguments.length - 0);
          while (G__16343__i < G__16343__a.length) {
            G__16343__a[G__16343__i] = arguments[G__16343__i + 0];
            ++G__16343__i;
          }
          args = new cljs.core.IndexedSeq(G__16343__a, 0);
        }
        return G__16342__delegate.call(this, args);
      };
      G__16342.cljs$lang$maxFixedArity = 0;
      G__16342.cljs$lang$applyTo = function(arglist__16344) {
        var args = cljs.core.seq(arglist__16344);
        return G__16342__delegate(args);
      };
      G__16342.cljs$core$IFn$_invoke$arity$variadic = G__16342__delegate;
      return G__16342;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__16346 = ret;
        f = G__16346;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__16347__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__16347 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__16348__i = 0, G__16348__a = new Array(arguments.length - 1);
        while (G__16348__i < G__16348__a.length) {
          G__16348__a[G__16348__i] = arguments[G__16348__i + 1];
          ++G__16348__i;
        }
        args = new cljs.core.IndexedSeq(G__16348__a, 0);
      }
      return G__16347__delegate.call(this, f, args);
    };
    G__16347.cljs$lang$maxFixedArity = 1;
    G__16347.cljs$lang$applyTo = function(arglist__16349) {
      var f = cljs.core.first(arglist__16349);
      var args = cljs.core.rest(arglist__16349);
      return G__16347__delegate(f, args);
    };
    G__16347.cljs$core$IFn$_invoke$arity$variadic = G__16347__delegate;
    return G__16347;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__16350 = null;
        if (arguments.length > 1) {
          var G__16351__i = 0, G__16351__a = new Array(arguments.length - 1);
          while (G__16351__i < G__16351__a.length) {
            G__16351__a[G__16351__i] = arguments[G__16351__i + 1];
            ++G__16351__i;
          }
          G__16350 = new cljs.core.IndexedSeq(G__16351__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16350);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__16354 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16354) : Math.floor.call(null, G__16354);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__16356 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16356) : f.call(null, G__16356);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__16358 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16358) : cljs.core.atom.call(null, G__16358);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__16359__i = 0, G__16359__a = new Array(arguments.length - 1);
      while (G__16359__i < G__16359__a.length) {
        G__16359__a[G__16359__i] = arguments[G__16359__i + 1];
        ++G__16359__i;
      }
      args = new cljs.core.IndexedSeq(G__16359__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__16360) {
    var f = cljs.core.first(arglist__16360);
    var args = cljs.core.rest(arglist__16360);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16425 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16425) : cljs.core.deref.call(null, G__16425);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3776__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3776__auto__) {
      return or__3776__auto__;
    } else {
      var or__3776__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3776__auto____$1) {
        return or__3776__auto____$1;
      } else {
        var and__3764__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3764__auto__) {
          var and__3764__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3764__auto____$1) {
            var and__3764__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3764__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__16450 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__16448 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16448) : child.call(null, G__16448);
                  }(), function() {
                    var G__16449 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16449) : parent.call(null, G__16449);
                  }());
                  var G__16451 = i + 1;
                  ret = G__16450;
                  i = G__16451;
                  continue;
                }
                break;
              }
            } else {
              return and__3764__auto____$2;
            }
          } else {
            return and__3764__auto____$1;
          }
        } else {
          return and__3764__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16455 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16455) : cljs.core.deref.call(null, G__16455);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16459 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16459) : cljs.core.deref.call(null, G__16459);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16463 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16463) : cljs.core.deref.call(null, G__16463);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__16472 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16472) : targets.call(null, G__16472);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__16473 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16473) : sources.call(null, G__16473);
        }()));
      };
    }(tp, td, ta);
    var or__3776__auto__ = cljs.core.contains_QMARK_(function() {
      var G__16477 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16477) : tp.call(null, G__16477);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__16478 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16478) : ta.call(null, G__16478);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__16479 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16479) : ta.call(null, G__16479);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__16486 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16486) : parentMap.call(null, G__16486);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16487 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16487) : parentMap.call(null, G__16487);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__16480_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__16480_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16480_SHARP_), cljs.core.second(p1__16480_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__16488 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16488) : parentMap.call(null, G__16488);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__16481_SHARP_, p2__16482_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__16481_SHARP_, p2__16482_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__16491 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16491) : cljs.core.deref.call(null, G__16491);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__16492 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16492) : cljs.core.deref.call(null, G__16492);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__16508 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16508) : cljs.core.deref.call(null, G__16508);
  }().call(null, x);
  var or__3776__auto__ = cljs.core.truth_(function() {
    var and__3764__auto__ = xprefs;
    if (cljs.core.truth_(and__3764__auto__)) {
      var G__16510 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16510) : xprefs.call(null, G__16510);
    } else {
      return and__3764__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    var or__3776__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__16511 = cljs.core.rest(ps);
          ps = G__16511;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3776__auto____$1)) {
      return or__3776__auto____$1;
    } else {
      var or__3776__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__16512 = cljs.core.rest(ps);
            ps = G__16512;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3776__auto____$2)) {
        return or__3776__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3776__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__16526) {
    var vec__16527 = p__16526;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16527, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16527, 1, null);
    var e = vec__16527;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16528 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16528) : cljs.core.deref.call(null, G__16528);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3776__auto__ = be == null;
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__16529 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16529) : cljs.core.deref.call(null, G__16529);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16530 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16530) : cljs.core.deref.call(null, G__16530);
    }(), function() {
      var G__16531 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16531) : cljs.core.deref.call(null, G__16531);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj16533 = {};
  return obj16533;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._reset[function() {
        var G__16537 = x__4420__auto__;
        return goog.typeOf(G__16537);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._reset["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._add_method[function() {
        var G__16541 = x__4420__auto__;
        return goog.typeOf(G__16541);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._add_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._remove_method[function() {
        var G__16545 = x__4420__auto__;
        return goog.typeOf(G__16545);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._remove_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._prefer_method[function() {
        var G__16549 = x__4420__auto__;
        return goog.typeOf(G__16549);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._get_method[function() {
        var G__16553 = x__4420__auto__;
        return goog.typeOf(G__16553);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._get_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._methods[function() {
        var G__16557 = x__4420__auto__;
        return goog.typeOf(G__16557);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._methods["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._prefers[function() {
        var G__16561 = x__4420__auto__;
        return goog.typeOf(G__16561);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._prefers["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__16563 = this$__$1;
  return goog.getUid(G__16563);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16564 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16564) : cljs.core.deref.call(null, G__16564);
  }(), function() {
    var G__16565 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16565) : cljs.core.deref.call(null, G__16565);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__16566 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16566) : cljs.core.deref.call(null, G__16566);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__16567 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16567) : cljs.core.deref.call(null, G__16567);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16568 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16568) : cljs.core.deref.call(null, G__16568);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16569 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16569) : cljs.core.deref.call(null, G__16569);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__17410 = null;
  var G__17410__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__17410__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16570 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16570) : self__.dispatch_fn.call(null, G__16570);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16571 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16571) : target_fn.call(null, G__16571);
  };
  var G__17410__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16572 = a;
      var G__16573 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16572, G__16573) : self__.dispatch_fn.call(null, G__16572, G__16573);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16574 = a;
    var G__16575 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16574, G__16575) : target_fn.call(null, G__16574, G__16575);
  };
  var G__17410__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16576 = a;
      var G__16577 = b;
      var G__16578 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16576, G__16577, G__16578) : self__.dispatch_fn.call(null, G__16576, G__16577, G__16578);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16579 = a;
    var G__16580 = b;
    var G__16581 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16579, G__16580, G__16581) : target_fn.call(null, G__16579, G__16580, G__16581);
  };
  var G__17410__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16582 = a;
      var G__16583 = b;
      var G__16584 = c;
      var G__16585 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16582, G__16583, G__16584, G__16585) : self__.dispatch_fn.call(null, G__16582, G__16583, G__16584, G__16585);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16586 = a;
    var G__16587 = b;
    var G__16588 = c;
    var G__16589 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16586, G__16587, G__16588, G__16589) : target_fn.call(null, G__16586, G__16587, G__16588, G__16589);
  };
  var G__17410__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16590 = a;
      var G__16591 = b;
      var G__16592 = c;
      var G__16593 = d;
      var G__16594 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16590, G__16591, G__16592, G__16593, G__16594) : self__.dispatch_fn.call(null, G__16590, G__16591, G__16592, G__16593, G__16594);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16595 = a;
    var G__16596 = b;
    var G__16597 = c;
    var G__16598 = d;
    var G__16599 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16595, G__16596, G__16597, G__16598, G__16599) : target_fn.call(null, G__16595, G__16596, G__16597, G__16598, G__16599);
  };
  var G__17410__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16600 = a;
      var G__16601 = b;
      var G__16602 = c;
      var G__16603 = d;
      var G__16604 = e;
      var G__16605 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16600, G__16601, G__16602, G__16603, G__16604, G__16605) : self__.dispatch_fn.call(null, G__16600, G__16601, G__16602, G__16603, G__16604, G__16605);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16606 = a;
    var G__16607 = b;
    var G__16608 = c;
    var G__16609 = d;
    var G__16610 = e;
    var G__16611 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16606, G__16607, G__16608, G__16609, G__16610, G__16611) : target_fn.call(null, G__16606, G__16607, G__16608, G__16609, G__16610, G__16611);
  };
  var G__17410__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16612 = a;
      var G__16613 = b;
      var G__16614 = c;
      var G__16615 = d;
      var G__16616 = e;
      var G__16617 = f;
      var G__16618 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618) : self__.dispatch_fn.call(null, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16619 = a;
    var G__16620 = b;
    var G__16621 = c;
    var G__16622 = d;
    var G__16623 = e;
    var G__16624 = f;
    var G__16625 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16619, G__16620, G__16621, G__16622, G__16623, G__16624, G__16625) : target_fn.call(null, G__16619, G__16620, G__16621, G__16622, G__16623, G__16624, G__16625);
  };
  var G__17410__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16626 = a;
      var G__16627 = b;
      var G__16628 = c;
      var G__16629 = d;
      var G__16630 = e;
      var G__16631 = f;
      var G__16632 = g;
      var G__16633 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633) : self__.dispatch_fn.call(null, G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16634 = a;
    var G__16635 = b;
    var G__16636 = c;
    var G__16637 = d;
    var G__16638 = e;
    var G__16639 = f;
    var G__16640 = g;
    var G__16641 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16634, G__16635, G__16636, G__16637, G__16638, G__16639, G__16640, G__16641) : target_fn.call(null, G__16634, G__16635, G__16636, G__16637, G__16638, G__16639, G__16640, G__16641);
  };
  var G__17410__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16642 = a;
      var G__16643 = b;
      var G__16644 = c;
      var G__16645 = d;
      var G__16646 = e;
      var G__16647 = f;
      var G__16648 = g;
      var G__16649 = h;
      var G__16650 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650) : self__.dispatch_fn.call(null, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16651 = a;
    var G__16652 = b;
    var G__16653 = c;
    var G__16654 = d;
    var G__16655 = e;
    var G__16656 = f;
    var G__16657 = g;
    var G__16658 = h;
    var G__16659 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659) : target_fn.call(null, G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659);
  };
  var G__17410__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16660 = a;
      var G__16661 = b;
      var G__16662 = c;
      var G__16663 = d;
      var G__16664 = e;
      var G__16665 = f;
      var G__16666 = g;
      var G__16667 = h;
      var G__16668 = i;
      var G__16669 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669) : self__.dispatch_fn.call(null, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16670 = a;
    var G__16671 = b;
    var G__16672 = c;
    var G__16673 = d;
    var G__16674 = e;
    var G__16675 = f;
    var G__16676 = g;
    var G__16677 = h;
    var G__16678 = i;
    var G__16679 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679) : target_fn.call(null, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679);
  };
  var G__17410__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16680 = a;
      var G__16681 = b;
      var G__16682 = c;
      var G__16683 = d;
      var G__16684 = e;
      var G__16685 = f;
      var G__16686 = g;
      var G__16687 = h;
      var G__16688 = i;
      var G__16689 = j;
      var G__16690 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690) : self__.dispatch_fn.call(null, G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16691 = a;
    var G__16692 = b;
    var G__16693 = c;
    var G__16694 = d;
    var G__16695 = e;
    var G__16696 = f;
    var G__16697 = g;
    var G__16698 = h;
    var G__16699 = i;
    var G__16700 = j;
    var G__16701 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701) : target_fn.call(null, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701);
  };
  var G__17410__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16702 = a;
      var G__16703 = b;
      var G__16704 = c;
      var G__16705 = d;
      var G__16706 = e;
      var G__16707 = f;
      var G__16708 = g;
      var G__16709 = h;
      var G__16710 = i;
      var G__16711 = j;
      var G__16712 = k;
      var G__16713 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709, G__16710, G__16711, G__16712, G__16713) : self__.dispatch_fn.call(null, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709, G__16710, G__16711, G__16712, G__16713);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16714 = a;
    var G__16715 = b;
    var G__16716 = c;
    var G__16717 = d;
    var G__16718 = e;
    var G__16719 = f;
    var G__16720 = g;
    var G__16721 = h;
    var G__16722 = i;
    var G__16723 = j;
    var G__16724 = k;
    var G__16725 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722, G__16723, G__16724, G__16725) : target_fn.call(null, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722, G__16723, G__16724, G__16725);
  };
  var G__17410__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16726 = a;
      var G__16727 = b;
      var G__16728 = c;
      var G__16729 = d;
      var G__16730 = e;
      var G__16731 = f;
      var G__16732 = g;
      var G__16733 = h;
      var G__16734 = i;
      var G__16735 = j;
      var G__16736 = k;
      var G__16737 = l;
      var G__16738 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738) : self__.dispatch_fn.call(null, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16739 = a;
    var G__16740 = b;
    var G__16741 = c;
    var G__16742 = d;
    var G__16743 = e;
    var G__16744 = f;
    var G__16745 = g;
    var G__16746 = h;
    var G__16747 = i;
    var G__16748 = j;
    var G__16749 = k;
    var G__16750 = l;
    var G__16751 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16739, G__16740, G__16741, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750, G__16751) : target_fn.call(null, G__16739, G__16740, G__16741, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750, G__16751);
  };
  var G__17410__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16752 = a;
      var G__16753 = b;
      var G__16754 = c;
      var G__16755 = d;
      var G__16756 = e;
      var G__16757 = f;
      var G__16758 = g;
      var G__16759 = h;
      var G__16760 = i;
      var G__16761 = j;
      var G__16762 = k;
      var G__16763 = l;
      var G__16764 = m;
      var G__16765 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765) : self__.dispatch_fn.call(null, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16766 = a;
    var G__16767 = b;
    var G__16768 = c;
    var G__16769 = d;
    var G__16770 = e;
    var G__16771 = f;
    var G__16772 = g;
    var G__16773 = h;
    var G__16774 = i;
    var G__16775 = j;
    var G__16776 = k;
    var G__16777 = l;
    var G__16778 = m;
    var G__16779 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774, G__16775, G__16776, G__16777, G__16778, G__16779) : target_fn.call(null, G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774, G__16775, G__16776, G__16777, G__16778, G__16779);
  };
  var G__17410__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16780 = a;
      var G__16781 = b;
      var G__16782 = c;
      var G__16783 = d;
      var G__16784 = e;
      var G__16785 = f;
      var G__16786 = g;
      var G__16787 = h;
      var G__16788 = i;
      var G__16789 = j;
      var G__16790 = k;
      var G__16791 = l;
      var G__16792 = m;
      var G__16793 = n;
      var G__16794 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16780, G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791, G__16792, G__16793, G__16794) : self__.dispatch_fn.call(null, G__16780, G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791, G__16792, G__16793, G__16794);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16795 = a;
    var G__16796 = b;
    var G__16797 = c;
    var G__16798 = d;
    var G__16799 = e;
    var G__16800 = f;
    var G__16801 = g;
    var G__16802 = h;
    var G__16803 = i;
    var G__16804 = j;
    var G__16805 = k;
    var G__16806 = l;
    var G__16807 = m;
    var G__16808 = n;
    var G__16809 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16795, G__16796, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809) : target_fn.call(null, G__16795, G__16796, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809);
  };
  var G__17410__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16810 = a;
      var G__16811 = b;
      var G__16812 = c;
      var G__16813 = d;
      var G__16814 = e;
      var G__16815 = f;
      var G__16816 = g;
      var G__16817 = h;
      var G__16818 = i;
      var G__16819 = j;
      var G__16820 = k;
      var G__16821 = l;
      var G__16822 = m;
      var G__16823 = n;
      var G__16824 = o;
      var G__16825 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825) : self__.dispatch_fn.call(null, G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16826 = a;
    var G__16827 = b;
    var G__16828 = c;
    var G__16829 = d;
    var G__16830 = e;
    var G__16831 = f;
    var G__16832 = g;
    var G__16833 = h;
    var G__16834 = i;
    var G__16835 = j;
    var G__16836 = k;
    var G__16837 = l;
    var G__16838 = m;
    var G__16839 = n;
    var G__16840 = o;
    var G__16841 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16826, G__16827, G__16828, G__16829, G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841) : target_fn.call(null, G__16826, G__16827, G__16828, G__16829, G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841);
  };
  var G__17410__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16842 = a;
      var G__16843 = b;
      var G__16844 = c;
      var G__16845 = d;
      var G__16846 = e;
      var G__16847 = f;
      var G__16848 = g;
      var G__16849 = h;
      var G__16850 = i;
      var G__16851 = j;
      var G__16852 = k;
      var G__16853 = l;
      var G__16854 = m;
      var G__16855 = n;
      var G__16856 = o;
      var G__16857 = p;
      var G__16858 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858) : self__.dispatch_fn.call(null, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16859 = a;
    var G__16860 = b;
    var G__16861 = c;
    var G__16862 = d;
    var G__16863 = e;
    var G__16864 = f;
    var G__16865 = g;
    var G__16866 = h;
    var G__16867 = i;
    var G__16868 = j;
    var G__16869 = k;
    var G__16870 = l;
    var G__16871 = m;
    var G__16872 = n;
    var G__16873 = o;
    var G__16874 = p;
    var G__16875 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875) : target_fn.call(null, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875);
  };
  var G__17410__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16876 = a;
      var G__16877 = b;
      var G__16878 = c;
      var G__16879 = d;
      var G__16880 = e;
      var G__16881 = f;
      var G__16882 = g;
      var G__16883 = h;
      var G__16884 = i;
      var G__16885 = j;
      var G__16886 = k;
      var G__16887 = l;
      var G__16888 = m;
      var G__16889 = n;
      var G__16890 = o;
      var G__16891 = p;
      var G__16892 = q;
      var G__16893 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884, G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893) : self__.dispatch_fn.call(null, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884, G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16894 = a;
    var G__16895 = b;
    var G__16896 = c;
    var G__16897 = d;
    var G__16898 = e;
    var G__16899 = f;
    var G__16900 = g;
    var G__16901 = h;
    var G__16902 = i;
    var G__16903 = j;
    var G__16904 = k;
    var G__16905 = l;
    var G__16906 = m;
    var G__16907 = n;
    var G__16908 = o;
    var G__16909 = p;
    var G__16910 = q;
    var G__16911 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911) : target_fn.call(null, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911);
  };
  var G__17410__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16912 = a;
      var G__16913 = b;
      var G__16914 = c;
      var G__16915 = d;
      var G__16916 = e;
      var G__16917 = f;
      var G__16918 = g;
      var G__16919 = h;
      var G__16920 = i;
      var G__16921 = j;
      var G__16922 = k;
      var G__16923 = l;
      var G__16924 = m;
      var G__16925 = n;
      var G__16926 = o;
      var G__16927 = p;
      var G__16928 = q;
      var G__16929 = r;
      var G__16930 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930) : self__.dispatch_fn.call(null, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, 
      G__16929, G__16930);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16931 = a;
    var G__16932 = b;
    var G__16933 = c;
    var G__16934 = d;
    var G__16935 = e;
    var G__16936 = f;
    var G__16937 = g;
    var G__16938 = h;
    var G__16939 = i;
    var G__16940 = j;
    var G__16941 = k;
    var G__16942 = l;
    var G__16943 = m;
    var G__16944 = n;
    var G__16945 = o;
    var G__16946 = p;
    var G__16947 = q;
    var G__16948 = r;
    var G__16949 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949) : target_fn.call(null, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949);
  };
  var G__17410__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16950 = a;
      var G__16951 = b;
      var G__16952 = c;
      var G__16953 = d;
      var G__16954 = e;
      var G__16955 = f;
      var G__16956 = g;
      var G__16957 = h;
      var G__16958 = i;
      var G__16959 = j;
      var G__16960 = k;
      var G__16961 = l;
      var G__16962 = m;
      var G__16963 = n;
      var G__16964 = o;
      var G__16965 = p;
      var G__16966 = q;
      var G__16967 = r;
      var G__16968 = s;
      var G__16969 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969) : self__.dispatch_fn.call(null, G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, 
      G__16966, G__16967, G__16968, G__16969);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16970 = a;
    var G__16971 = b;
    var G__16972 = c;
    var G__16973 = d;
    var G__16974 = e;
    var G__16975 = f;
    var G__16976 = g;
    var G__16977 = h;
    var G__16978 = i;
    var G__16979 = j;
    var G__16980 = k;
    var G__16981 = l;
    var G__16982 = m;
    var G__16983 = n;
    var G__16984 = o;
    var G__16985 = p;
    var G__16986 = q;
    var G__16987 = r;
    var G__16988 = s;
    var G__16989 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16970, G__16971, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989) : target_fn.call(null, G__16970, G__16971, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, 
    G__16989);
  };
  var G__17410__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__17410 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17410__1.call(this, self__);
      case 2:
        return G__17410__2.call(this, self__, a);
      case 3:
        return G__17410__3.call(this, self__, a, b);
      case 4:
        return G__17410__4.call(this, self__, a, b, c);
      case 5:
        return G__17410__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17410__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17410__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17410__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17410__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17410__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17410__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17410__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17410__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17410__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17410__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17410__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17410__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17410__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17410__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17410__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17410__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17410__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17410.cljs$core$IFn$_invoke$arity$1 = G__17410__1;
  G__17410.cljs$core$IFn$_invoke$arity$2 = G__17410__2;
  G__17410.cljs$core$IFn$_invoke$arity$3 = G__17410__3;
  G__17410.cljs$core$IFn$_invoke$arity$4 = G__17410__4;
  G__17410.cljs$core$IFn$_invoke$arity$5 = G__17410__5;
  G__17410.cljs$core$IFn$_invoke$arity$6 = G__17410__6;
  G__17410.cljs$core$IFn$_invoke$arity$7 = G__17410__7;
  G__17410.cljs$core$IFn$_invoke$arity$8 = G__17410__8;
  G__17410.cljs$core$IFn$_invoke$arity$9 = G__17410__9;
  G__17410.cljs$core$IFn$_invoke$arity$10 = G__17410__10;
  G__17410.cljs$core$IFn$_invoke$arity$11 = G__17410__11;
  G__17410.cljs$core$IFn$_invoke$arity$12 = G__17410__12;
  G__17410.cljs$core$IFn$_invoke$arity$13 = G__17410__13;
  G__17410.cljs$core$IFn$_invoke$arity$14 = G__17410__14;
  G__17410.cljs$core$IFn$_invoke$arity$15 = G__17410__15;
  G__17410.cljs$core$IFn$_invoke$arity$16 = G__17410__16;
  G__17410.cljs$core$IFn$_invoke$arity$17 = G__17410__17;
  G__17410.cljs$core$IFn$_invoke$arity$18 = G__17410__18;
  G__17410.cljs$core$IFn$_invoke$arity$19 = G__17410__19;
  G__17410.cljs$core$IFn$_invoke$arity$20 = G__17410__20;
  G__17410.cljs$core$IFn$_invoke$arity$21 = G__17410__21;
  G__17410.cljs$core$IFn$_invoke$arity$22 = G__17410__22;
  return G__17410;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args16562) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16562)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16990 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16990) : self__.dispatch_fn.call(null, G__16990);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16991 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16991) : target_fn.call(null, G__16991);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16992 = a;
    var G__16993 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16992, G__16993) : self__.dispatch_fn.call(null, G__16992, G__16993);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16994 = a;
  var G__16995 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16994, G__16995) : target_fn.call(null, G__16994, G__16995);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16996 = a;
    var G__16997 = b;
    var G__16998 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16996, G__16997, G__16998) : self__.dispatch_fn.call(null, G__16996, G__16997, G__16998);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16999 = a;
  var G__17000 = b;
  var G__17001 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16999, G__17000, G__17001) : target_fn.call(null, G__16999, G__17000, G__17001);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17002 = a;
    var G__17003 = b;
    var G__17004 = c;
    var G__17005 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17002, G__17003, G__17004, G__17005) : self__.dispatch_fn.call(null, G__17002, G__17003, G__17004, G__17005);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17006 = a;
  var G__17007 = b;
  var G__17008 = c;
  var G__17009 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17006, G__17007, G__17008, G__17009) : target_fn.call(null, G__17006, G__17007, G__17008, G__17009);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17010 = a;
    var G__17011 = b;
    var G__17012 = c;
    var G__17013 = d;
    var G__17014 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17010, G__17011, G__17012, G__17013, G__17014) : self__.dispatch_fn.call(null, G__17010, G__17011, G__17012, G__17013, G__17014);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17015 = a;
  var G__17016 = b;
  var G__17017 = c;
  var G__17018 = d;
  var G__17019 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17015, G__17016, G__17017, G__17018, G__17019) : target_fn.call(null, G__17015, G__17016, G__17017, G__17018, G__17019);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17020 = a;
    var G__17021 = b;
    var G__17022 = c;
    var G__17023 = d;
    var G__17024 = e;
    var G__17025 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17020, G__17021, G__17022, G__17023, G__17024, G__17025) : self__.dispatch_fn.call(null, G__17020, G__17021, G__17022, G__17023, G__17024, G__17025);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17026 = a;
  var G__17027 = b;
  var G__17028 = c;
  var G__17029 = d;
  var G__17030 = e;
  var G__17031 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17026, G__17027, G__17028, G__17029, G__17030, G__17031) : target_fn.call(null, G__17026, G__17027, G__17028, G__17029, G__17030, G__17031);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17032 = a;
    var G__17033 = b;
    var G__17034 = c;
    var G__17035 = d;
    var G__17036 = e;
    var G__17037 = f;
    var G__17038 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17032, G__17033, G__17034, G__17035, G__17036, G__17037, G__17038) : self__.dispatch_fn.call(null, G__17032, G__17033, G__17034, G__17035, G__17036, G__17037, G__17038);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17039 = a;
  var G__17040 = b;
  var G__17041 = c;
  var G__17042 = d;
  var G__17043 = e;
  var G__17044 = f;
  var G__17045 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17039, G__17040, G__17041, G__17042, G__17043, G__17044, G__17045) : target_fn.call(null, G__17039, G__17040, G__17041, G__17042, G__17043, G__17044, G__17045);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17046 = a;
    var G__17047 = b;
    var G__17048 = c;
    var G__17049 = d;
    var G__17050 = e;
    var G__17051 = f;
    var G__17052 = g;
    var G__17053 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17046, G__17047, G__17048, G__17049, G__17050, G__17051, G__17052, G__17053) : self__.dispatch_fn.call(null, G__17046, G__17047, G__17048, G__17049, G__17050, G__17051, G__17052, G__17053);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17054 = a;
  var G__17055 = b;
  var G__17056 = c;
  var G__17057 = d;
  var G__17058 = e;
  var G__17059 = f;
  var G__17060 = g;
  var G__17061 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17054, G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061) : target_fn.call(null, G__17054, G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17062 = a;
    var G__17063 = b;
    var G__17064 = c;
    var G__17065 = d;
    var G__17066 = e;
    var G__17067 = f;
    var G__17068 = g;
    var G__17069 = h;
    var G__17070 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, G__17070) : self__.dispatch_fn.call(null, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, G__17070);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17071 = a;
  var G__17072 = b;
  var G__17073 = c;
  var G__17074 = d;
  var G__17075 = e;
  var G__17076 = f;
  var G__17077 = g;
  var G__17078 = h;
  var G__17079 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079) : target_fn.call(null, G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17080 = a;
    var G__17081 = b;
    var G__17082 = c;
    var G__17083 = d;
    var G__17084 = e;
    var G__17085 = f;
    var G__17086 = g;
    var G__17087 = h;
    var G__17088 = i;
    var G__17089 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089) : self__.dispatch_fn.call(null, G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17090 = a;
  var G__17091 = b;
  var G__17092 = c;
  var G__17093 = d;
  var G__17094 = e;
  var G__17095 = f;
  var G__17096 = g;
  var G__17097 = h;
  var G__17098 = i;
  var G__17099 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17090, G__17091, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098, G__17099) : target_fn.call(null, G__17090, G__17091, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098, G__17099);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17100 = a;
    var G__17101 = b;
    var G__17102 = c;
    var G__17103 = d;
    var G__17104 = e;
    var G__17105 = f;
    var G__17106 = g;
    var G__17107 = h;
    var G__17108 = i;
    var G__17109 = j;
    var G__17110 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108, G__17109, G__17110) : self__.dispatch_fn.call(null, G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108, G__17109, G__17110);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17111 = a;
  var G__17112 = b;
  var G__17113 = c;
  var G__17114 = d;
  var G__17115 = e;
  var G__17116 = f;
  var G__17117 = g;
  var G__17118 = h;
  var G__17119 = i;
  var G__17120 = j;
  var G__17121 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121) : target_fn.call(null, G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17122 = a;
    var G__17123 = b;
    var G__17124 = c;
    var G__17125 = d;
    var G__17126 = e;
    var G__17127 = f;
    var G__17128 = g;
    var G__17129 = h;
    var G__17130 = i;
    var G__17131 = j;
    var G__17132 = k;
    var G__17133 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129, G__17130, G__17131, G__17132, G__17133) : self__.dispatch_fn.call(null, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129, G__17130, G__17131, G__17132, G__17133);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17134 = a;
  var G__17135 = b;
  var G__17136 = c;
  var G__17137 = d;
  var G__17138 = e;
  var G__17139 = f;
  var G__17140 = g;
  var G__17141 = h;
  var G__17142 = i;
  var G__17143 = j;
  var G__17144 = k;
  var G__17145 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145) : target_fn.call(null, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17146 = a;
    var G__17147 = b;
    var G__17148 = c;
    var G__17149 = d;
    var G__17150 = e;
    var G__17151 = f;
    var G__17152 = g;
    var G__17153 = h;
    var G__17154 = i;
    var G__17155 = j;
    var G__17156 = k;
    var G__17157 = l;
    var G__17158 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17146, G__17147, G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158) : self__.dispatch_fn.call(null, G__17146, G__17147, G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17159 = a;
  var G__17160 = b;
  var G__17161 = c;
  var G__17162 = d;
  var G__17163 = e;
  var G__17164 = f;
  var G__17165 = g;
  var G__17166 = h;
  var G__17167 = i;
  var G__17168 = j;
  var G__17169 = k;
  var G__17170 = l;
  var G__17171 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17159, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167, G__17168, G__17169, G__17170, G__17171) : target_fn.call(null, G__17159, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167, G__17168, G__17169, G__17170, G__17171);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17172 = a;
    var G__17173 = b;
    var G__17174 = c;
    var G__17175 = d;
    var G__17176 = e;
    var G__17177 = f;
    var G__17178 = g;
    var G__17179 = h;
    var G__17180 = i;
    var G__17181 = j;
    var G__17182 = k;
    var G__17183 = l;
    var G__17184 = m;
    var G__17185 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184, G__17185) : self__.dispatch_fn.call(null, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184, G__17185);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17186 = a;
  var G__17187 = b;
  var G__17188 = c;
  var G__17189 = d;
  var G__17190 = e;
  var G__17191 = f;
  var G__17192 = g;
  var G__17193 = h;
  var G__17194 = i;
  var G__17195 = j;
  var G__17196 = k;
  var G__17197 = l;
  var G__17198 = m;
  var G__17199 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198, G__17199) : target_fn.call(null, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198, G__17199);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17200 = a;
    var G__17201 = b;
    var G__17202 = c;
    var G__17203 = d;
    var G__17204 = e;
    var G__17205 = f;
    var G__17206 = g;
    var G__17207 = h;
    var G__17208 = i;
    var G__17209 = j;
    var G__17210 = k;
    var G__17211 = l;
    var G__17212 = m;
    var G__17213 = n;
    var G__17214 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213, G__17214) : self__.dispatch_fn.call(null, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213, G__17214);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17215 = a;
  var G__17216 = b;
  var G__17217 = c;
  var G__17218 = d;
  var G__17219 = e;
  var G__17220 = f;
  var G__17221 = g;
  var G__17222 = h;
  var G__17223 = i;
  var G__17224 = j;
  var G__17225 = k;
  var G__17226 = l;
  var G__17227 = m;
  var G__17228 = n;
  var G__17229 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229) : target_fn.call(null, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17230 = a;
    var G__17231 = b;
    var G__17232 = c;
    var G__17233 = d;
    var G__17234 = e;
    var G__17235 = f;
    var G__17236 = g;
    var G__17237 = h;
    var G__17238 = i;
    var G__17239 = j;
    var G__17240 = k;
    var G__17241 = l;
    var G__17242 = m;
    var G__17243 = n;
    var G__17244 = o;
    var G__17245 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245) : self__.dispatch_fn.call(null, G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17246 = a;
  var G__17247 = b;
  var G__17248 = c;
  var G__17249 = d;
  var G__17250 = e;
  var G__17251 = f;
  var G__17252 = g;
  var G__17253 = h;
  var G__17254 = i;
  var G__17255 = j;
  var G__17256 = k;
  var G__17257 = l;
  var G__17258 = m;
  var G__17259 = n;
  var G__17260 = o;
  var G__17261 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17246, G__17247, G__17248, G__17249, G__17250, G__17251, G__17252, G__17253, G__17254, G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261) : target_fn.call(null, G__17246, G__17247, G__17248, G__17249, G__17250, G__17251, G__17252, G__17253, G__17254, G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17262 = a;
    var G__17263 = b;
    var G__17264 = c;
    var G__17265 = d;
    var G__17266 = e;
    var G__17267 = f;
    var G__17268 = g;
    var G__17269 = h;
    var G__17270 = i;
    var G__17271 = j;
    var G__17272 = k;
    var G__17273 = l;
    var G__17274 = m;
    var G__17275 = n;
    var G__17276 = o;
    var G__17277 = p;
    var G__17278 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17262, G__17263, G__17264, G__17265, G__17266, G__17267, G__17268, G__17269, G__17270, G__17271, G__17272, G__17273, G__17274, G__17275, G__17276, G__17277, G__17278) : self__.dispatch_fn.call(null, G__17262, G__17263, G__17264, G__17265, G__17266, G__17267, G__17268, G__17269, G__17270, G__17271, G__17272, G__17273, G__17274, G__17275, G__17276, G__17277, G__17278);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17279 = a;
  var G__17280 = b;
  var G__17281 = c;
  var G__17282 = d;
  var G__17283 = e;
  var G__17284 = f;
  var G__17285 = g;
  var G__17286 = h;
  var G__17287 = i;
  var G__17288 = j;
  var G__17289 = k;
  var G__17290 = l;
  var G__17291 = m;
  var G__17292 = n;
  var G__17293 = o;
  var G__17294 = p;
  var G__17295 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17279, G__17280, G__17281, G__17282, G__17283, G__17284, G__17285, G__17286, G__17287, G__17288, G__17289, G__17290, G__17291, G__17292, G__17293, G__17294, G__17295) : target_fn.call(null, G__17279, G__17280, G__17281, G__17282, G__17283, G__17284, G__17285, G__17286, G__17287, G__17288, G__17289, G__17290, G__17291, G__17292, G__17293, G__17294, G__17295);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17296 = a;
    var G__17297 = b;
    var G__17298 = c;
    var G__17299 = d;
    var G__17300 = e;
    var G__17301 = f;
    var G__17302 = g;
    var G__17303 = h;
    var G__17304 = i;
    var G__17305 = j;
    var G__17306 = k;
    var G__17307 = l;
    var G__17308 = m;
    var G__17309 = n;
    var G__17310 = o;
    var G__17311 = p;
    var G__17312 = q;
    var G__17313 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17296, G__17297, G__17298, G__17299, G__17300, G__17301, G__17302, G__17303, G__17304, G__17305, G__17306, G__17307, G__17308, G__17309, G__17310, G__17311, G__17312, G__17313) : self__.dispatch_fn.call(null, G__17296, G__17297, G__17298, G__17299, G__17300, G__17301, G__17302, G__17303, G__17304, G__17305, G__17306, G__17307, G__17308, G__17309, G__17310, G__17311, G__17312, G__17313);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17314 = a;
  var G__17315 = b;
  var G__17316 = c;
  var G__17317 = d;
  var G__17318 = e;
  var G__17319 = f;
  var G__17320 = g;
  var G__17321 = h;
  var G__17322 = i;
  var G__17323 = j;
  var G__17324 = k;
  var G__17325 = l;
  var G__17326 = m;
  var G__17327 = n;
  var G__17328 = o;
  var G__17329 = p;
  var G__17330 = q;
  var G__17331 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17314, G__17315, G__17316, G__17317, G__17318, G__17319, G__17320, G__17321, G__17322, G__17323, G__17324, G__17325, G__17326, G__17327, G__17328, G__17329, G__17330, G__17331) : target_fn.call(null, G__17314, G__17315, G__17316, G__17317, G__17318, G__17319, G__17320, G__17321, G__17322, G__17323, G__17324, G__17325, G__17326, G__17327, G__17328, G__17329, G__17330, G__17331);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17332 = a;
    var G__17333 = b;
    var G__17334 = c;
    var G__17335 = d;
    var G__17336 = e;
    var G__17337 = f;
    var G__17338 = g;
    var G__17339 = h;
    var G__17340 = i;
    var G__17341 = j;
    var G__17342 = k;
    var G__17343 = l;
    var G__17344 = m;
    var G__17345 = n;
    var G__17346 = o;
    var G__17347 = p;
    var G__17348 = q;
    var G__17349 = r;
    var G__17350 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17332, G__17333, G__17334, G__17335, G__17336, G__17337, G__17338, G__17339, G__17340, G__17341, G__17342, G__17343, G__17344, G__17345, G__17346, G__17347, G__17348, G__17349, G__17350) : self__.dispatch_fn.call(null, G__17332, G__17333, G__17334, G__17335, G__17336, G__17337, G__17338, G__17339, G__17340, G__17341, G__17342, G__17343, G__17344, G__17345, G__17346, G__17347, G__17348, 
    G__17349, G__17350);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17351 = a;
  var G__17352 = b;
  var G__17353 = c;
  var G__17354 = d;
  var G__17355 = e;
  var G__17356 = f;
  var G__17357 = g;
  var G__17358 = h;
  var G__17359 = i;
  var G__17360 = j;
  var G__17361 = k;
  var G__17362 = l;
  var G__17363 = m;
  var G__17364 = n;
  var G__17365 = o;
  var G__17366 = p;
  var G__17367 = q;
  var G__17368 = r;
  var G__17369 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17351, G__17352, G__17353, G__17354, G__17355, G__17356, G__17357, G__17358, G__17359, G__17360, G__17361, G__17362, G__17363, G__17364, G__17365, G__17366, G__17367, G__17368, G__17369) : target_fn.call(null, G__17351, G__17352, G__17353, G__17354, G__17355, G__17356, G__17357, G__17358, G__17359, G__17360, G__17361, G__17362, G__17363, G__17364, G__17365, G__17366, G__17367, G__17368, G__17369);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17370 = a;
    var G__17371 = b;
    var G__17372 = c;
    var G__17373 = d;
    var G__17374 = e;
    var G__17375 = f;
    var G__17376 = g;
    var G__17377 = h;
    var G__17378 = i;
    var G__17379 = j;
    var G__17380 = k;
    var G__17381 = l;
    var G__17382 = m;
    var G__17383 = n;
    var G__17384 = o;
    var G__17385 = p;
    var G__17386 = q;
    var G__17387 = r;
    var G__17388 = s;
    var G__17389 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17370, G__17371, G__17372, G__17373, G__17374, G__17375, G__17376, G__17377, G__17378, G__17379, G__17380, G__17381, G__17382, G__17383, G__17384, G__17385, G__17386, G__17387, G__17388, G__17389) : self__.dispatch_fn.call(null, G__17370, G__17371, G__17372, G__17373, G__17374, G__17375, G__17376, G__17377, G__17378, G__17379, G__17380, G__17381, G__17382, G__17383, G__17384, G__17385, 
    G__17386, G__17387, G__17388, G__17389);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17390 = a;
  var G__17391 = b;
  var G__17392 = c;
  var G__17393 = d;
  var G__17394 = e;
  var G__17395 = f;
  var G__17396 = g;
  var G__17397 = h;
  var G__17398 = i;
  var G__17399 = j;
  var G__17400 = k;
  var G__17401 = l;
  var G__17402 = m;
  var G__17403 = n;
  var G__17404 = o;
  var G__17405 = p;
  var G__17406 = q;
  var G__17407 = r;
  var G__17408 = s;
  var G__17409 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17390, G__17391, G__17392, G__17393, G__17394, G__17395, G__17396, G__17397, G__17398, G__17399, G__17400, G__17401, G__17402, G__17403, G__17404, G__17405, G__17406, G__17407, G__17408, G__17409) : target_fn.call(null, G__17390, G__17391, G__17392, G__17393, G__17394, G__17395, G__17396, G__17397, G__17398, G__17399, G__17400, G__17401, G__17402, G__17403, G__17404, G__17405, G__17406, G__17407, G__17408, 
  G__17409);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__17411 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__17411);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__17416 = msg;
      return Error(G__17416);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__17421 = x;
      var G__17422 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17421, G__17422) : pred.call(null, G__17421, G__17422);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__17423 = y;
        var G__17424 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17423, G__17424) : pred.call(null, G__17423, G__17424);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test__$1(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("view");
goog.require("cljs.core");
goog.provide("reagent.debug");
goog.require("cljs.core");
goog.provide("utils");
goog.require("cljs.core");
utils.log = function log(data) {
  return console.log(data);
};
utils.get_time = function get_time() {
  return cljs.core.quot.call(null, (new Date).getTime(), 1E3);
};
goog.provide("reagent.interop");
goog.require("cljs.core");
reagent.interop.fvars = {};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__11099 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__11100 = cljs.core.next.call(null, coll__$1);
        sb = G__11099;
        coll__$1 = G__11100;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__11101 = sb;
        var G__11102 = coll__$2;
        sb = G__11101;
        coll__$1 = G__11102;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__11103 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__11103;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__11107 = cljs.core._EQ_;
    var expr__11108 = limit;
    if (cljs.core.truth_(pred__11107.call(null, 1, expr__11108))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__11107.call(null, 2, expr__11108))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__11110 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__11111 = limit__$1 - 1;
            var G__11112 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__11110;
            limit__$1 = G__11111;
            parts = G__11112;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__11113 = index - 1;
        index = G__11113;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___11114 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___11114)) {
        var replacement_11115 = temp__4124__auto___11114;
        buffer.append([cljs.core.str(replacement_11115)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__11116 = index + 1;
      index = G__11116;
      continue;
    }
    break;
  }
};
goog.provide("reagent.impl.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.interop");
goog.require("reagent.debug");
reagent.impl.util.is_client = typeof window !== "undefined" && !(window["document"] == null);
reagent.impl.util.extract_props = function extract_props(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  if (cljs.core.map_QMARK_.call(null, p)) {
    return p;
  } else {
    return null;
  }
};
reagent.impl.util.extract_children = function extract_children(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  var first_child = p == null || cljs.core.map_QMARK_.call(null, p) ? 2 : 1;
  if (cljs.core.count.call(null, v) > first_child) {
    return cljs.core.subvec.call(null, v, first_child);
  } else {
    return null;
  }
};
reagent.impl.util.get_argv = function get_argv(c) {
  return c["props"]["argv"];
};
reagent.impl.util.get_props = function get_props(c) {
  return reagent.impl.util.extract_props.call(null, c["props"]["argv"]);
};
reagent.impl.util.get_children = function get_children(c) {
  return reagent.impl.util.extract_children.call(null, c["props"]["argv"]);
};
reagent.impl.util.reagent_component_QMARK_ = function reagent_component_QMARK_(c) {
  return!(c["props"]["argv"] == null);
};
reagent.impl.util.cached_react_class = function cached_react_class(c) {
  return c["cljsReactClass"];
};
reagent.impl.util.cache_react_class = function cache_react_class(c, constructor) {
  return c["cljsReactClass"] = constructor;
};
reagent.impl.util.memoize_1 = function memoize_1(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function(arg) {
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), arg);
      if (!(v == null)) {
        return v;
      } else {
        var ret = f.call(null, arg);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, arg, ret);
        return ret;
      }
    };
  }(mem);
};
reagent.impl.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
reagent.impl.util.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("");
  }
};
reagent.impl.util.dash_to_camel = function dash_to_camel(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__11257 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__11257, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__11257, 1);
    if (cljs.core.truth_(reagent.impl.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, reagent.impl.util.capitalize, parts));
    }
  }
};
reagent.impl.util.partial_ifn = function(f, args, p) {
  this.f = f;
  this.args = args;
  this.p = p;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 6291457;
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f, self__.args], null));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._EQ_.call(null, self__.f, other.f) && cljs.core._EQ_.call(null, self__.args, other.args);
};
reagent.impl.util.partial_ifn.prototype.call = function() {
  var G__11259__delegate = function(self__, a) {
    var self____$1 = this;
    var _ = self____$1;
    var or__3776__auto___11260 = self__.p;
    if (cljs.core.truth_(or__3776__auto___11260)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__11259 = function(self__, var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 1) {
      var G__11261__i = 0, G__11261__a = new Array(arguments.length - 1);
      while (G__11261__i < G__11261__a.length) {
        G__11261__a[G__11261__i] = arguments[G__11261__i + 1];
        ++G__11261__i;
      }
      a = new cljs.core.IndexedSeq(G__11261__a, 0);
    }
    return G__11259__delegate.call(this, self__, a);
  };
  G__11259.cljs$lang$maxFixedArity = 1;
  G__11259.cljs$lang$applyTo = function(arglist__11262) {
    var self__ = cljs.core.first(arglist__11262);
    var a = cljs.core.rest(arglist__11262);
    return G__11259__delegate(self__, a);
  };
  G__11259.cljs$core$IFn$_invoke$arity$variadic = G__11259__delegate;
  return G__11259;
}();
reagent.impl.util.partial_ifn.prototype.apply = function(self__, args11258) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11258)));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
  var G__11263__delegate = function(a) {
    var _ = this;
    var or__3776__auto___11264 = self__.p;
    if (cljs.core.truth_(or__3776__auto___11264)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__11263 = function(var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 0) {
      var G__11265__i = 0, G__11265__a = new Array(arguments.length - 0);
      while (G__11265__i < G__11265__a.length) {
        G__11265__a[G__11265__i] = arguments[G__11265__i + 0];
        ++G__11265__i;
      }
      a = new cljs.core.IndexedSeq(G__11265__a, 0);
    }
    return G__11263__delegate.call(this, a);
  };
  G__11263.cljs$lang$maxFixedArity = 0;
  G__11263.cljs$lang$applyTo = function(arglist__11266) {
    var a = cljs.core.seq(arglist__11266);
    return G__11263__delegate(a);
  };
  G__11263.cljs$core$IFn$_invoke$arity$variadic = G__11263__delegate;
  return G__11263;
}();
reagent.impl.util.partial_ifn.cljs$lang$type = true;
reagent.impl.util.partial_ifn.cljs$lang$ctorStr = "reagent.impl.util/partial-ifn";
reagent.impl.util.partial_ifn.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write.call(null, writer__4364__auto__, "reagent.impl.util/partial-ifn");
};
reagent.impl.util.__GT_partial_ifn = function __GT_partial_ifn(f, args, p) {
  return new reagent.impl.util.partial_ifn(f, args, p);
};
reagent.impl.util.merge_class = function merge_class(p1, p2) {
  var class$ = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var c1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var c2 = temp__4126__auto____$1;
        return[cljs.core.str(c1), cljs.core.str(" "), cljs.core.str(c2)].join("");
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (class$ == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "class", "class", -2030961996), class$);
  }
};
reagent.impl.util.merge_style = function merge_style(p1, p2) {
  var style = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var s1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var s2 = temp__4126__auto____$1;
        return cljs.core.merge.call(null, s1, s2);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (style == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "style", "style", -496642736), style);
  }
};
reagent.impl.util.merge_props = function merge_props(p1, p2) {
  if (p1 == null) {
    return p2;
  } else {
    if (cljs.core.map_QMARK_.call(null, p1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "p1", "p1", 703771573, null))))].join(""));
    }
    return reagent.impl.util.merge_style.call(null, p1, reagent.impl.util.merge_class.call(null, p1, cljs.core.merge.call(null, p1, p2)));
  }
};
reagent.impl.util._STAR_always_update_STAR_ = false;
if (typeof reagent.impl.util.roots !== "undefined") {
} else {
  reagent.impl.util.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
reagent.impl.util.clear_container = function clear_container(node) {
  try {
    return React["unmountComponentAtNode"](node);
  } catch (e11268) {
    if (e11268 instanceof Object) {
      var e = e11268;
      if (typeof console !== "undefined") {
        console.log("Error unmounting:");
      } else {
      }
      if (typeof console !== "undefined") {
        return console.log(e);
      } else {
        return null;
      }
    } else {
      throw e11268;
    }
  }
};
reagent.impl.util.render_component = function render_component(comp, container, callback) {
  try {
    var _STAR_always_update_STAR_11273 = reagent.impl.util._STAR_always_update_STAR_;
    reagent.impl.util._STAR_always_update_STAR_ = true;
    try {
      return React["render"](comp.call(null), container, function(_STAR_always_update_STAR_11273) {
        return function() {
          var _STAR_always_update_STAR_11274 = reagent.impl.util._STAR_always_update_STAR_;
          reagent.impl.util._STAR_always_update_STAR_ = false;
          try {
            cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.assoc, container, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, container], null));
            if (cljs.core.some_QMARK_.call(null, callback)) {
              return callback.call(null);
            } else {
              return null;
            }
          } finally {
            reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_11274;
          }
        };
      }(_STAR_always_update_STAR_11273));
    } finally {
      reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_11273;
    }
  } catch (e11272) {
    if (e11272 instanceof Object) {
      var e = e11272;
      reagent.impl.util.clear_container.call(null, container);
      throw e;
    } else {
      throw e11272;
    }
  }
};
reagent.impl.util.re_render_component = function re_render_component(comp, container) {
  return reagent.impl.util.render_component.call(null, comp, container, null);
};
reagent.impl.util.unmount_component_at_node = function unmount_component_at_node(container) {
  cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.dissoc, container);
  return React["unmountComponentAtNode"](container);
};
reagent.impl.util.force_update_all = function force_update_all() {
  var seq__11279_11283 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, reagent.impl.util.roots)));
  var chunk__11280_11284 = null;
  var count__11281_11285 = 0;
  var i__11282_11286 = 0;
  while (true) {
    if (i__11282_11286 < count__11281_11285) {
      var v_11287 = cljs.core._nth.call(null, chunk__11280_11284, i__11282_11286);
      cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_11287);
      var G__11288 = seq__11279_11283;
      var G__11289 = chunk__11280_11284;
      var G__11290 = count__11281_11285;
      var G__11291 = i__11282_11286 + 1;
      seq__11279_11283 = G__11288;
      chunk__11280_11284 = G__11289;
      count__11281_11285 = G__11290;
      i__11282_11286 = G__11291;
      continue;
    } else {
      var temp__4126__auto___11292 = cljs.core.seq.call(null, seq__11279_11283);
      if (temp__4126__auto___11292) {
        var seq__11279_11293__$1 = temp__4126__auto___11292;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11279_11293__$1)) {
          var c__4563__auto___11294 = cljs.core.chunk_first.call(null, seq__11279_11293__$1);
          var G__11295 = cljs.core.chunk_rest.call(null, seq__11279_11293__$1);
          var G__11296 = c__4563__auto___11294;
          var G__11297 = cljs.core.count.call(null, c__4563__auto___11294);
          var G__11298 = 0;
          seq__11279_11283 = G__11295;
          chunk__11280_11284 = G__11296;
          count__11281_11285 = G__11297;
          i__11282_11286 = G__11298;
          continue;
        } else {
          var v_11299 = cljs.core.first.call(null, seq__11279_11293__$1);
          cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_11299);
          var G__11300 = cljs.core.next.call(null, seq__11279_11293__$1);
          var G__11301 = null;
          var G__11302 = 0;
          var G__11303 = 0;
          seq__11279_11283 = G__11300;
          chunk__11280_11284 = G__11301;
          count__11281_11285 = G__11302;
          i__11282_11286 = G__11303;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return "Updated";
};
reagent.impl.util.Wrapper = function(state, callback, changed) {
  this.state = state;
  this.callback = callback;
  this.changed = changed;
  this.cljs$lang$protocol_mask$partition0$ = 2149613568;
  this.cljs$lang$protocol_mask$partition1$ = 114688;
};
reagent.impl.util.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  cljs.core._write.call(null, writer, "#\x3cwrap: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.impl.util.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof reagent.impl.util.Wrapper && cljs.core.not.call(null, self__.changed) && cljs.core.not.call(null, other.changed) && cljs.core._EQ_.call(null, self__.state, other.state) && cljs.core._EQ_.call(null, self__.callback, other.callback);
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.impl.util.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, newval) {
  var self__ = this;
  var this$__$1 = this;
  self__.changed = true;
  self__.state = newval;
  self__.callback.call(null, newval);
  return self__.state;
};
reagent.impl.util.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.state;
};
reagent.impl.util.Wrapper.cljs$lang$type = true;
reagent.impl.util.Wrapper.cljs$lang$ctorStr = "reagent.impl.util/Wrapper";
reagent.impl.util.Wrapper.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write.call(null, writer__4364__auto__, "reagent.impl.util/Wrapper");
};
reagent.impl.util.__GT_Wrapper = function __GT_Wrapper(state, callback, changed) {
  return new reagent.impl.util.Wrapper(state, callback, changed);
};
reagent.impl.util.make_wrapper = function make_wrapper(value, callback_fn, args) {
  return new reagent.impl.util.Wrapper(value, new reagent.impl.util.partial_ifn(callback_fn, args, null), false);
};
goog.provide("reagent.ratom");
goog.require("cljs.core");
goog.require("reagent.impl.util");
if (typeof reagent.ratom.debug !== "undefined") {
} else {
  reagent.ratom.debug = false;
}
if (typeof reagent.ratom._running !== "undefined") {
} else {
  reagent.ratom._running = cljs.core.atom.call(null, 0);
}
reagent.ratom.running = function running() {
  return cljs.core.deref.call(null, reagent.ratom._running);
};
reagent.ratom.capture_derefed = function capture_derefed(f, obj) {
  obj.cljsCaptured = null;
  var _STAR_ratom_context_STAR_11154 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = obj;
  try {
    return f.call(null);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_11154;
  }
};
reagent.ratom.captured = function captured(obj) {
  var c = obj.cljsCaptured;
  obj.cljsCaptured = null;
  return c;
};
reagent.ratom.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  var obj = reagent.ratom._STAR_ratom_context_STAR_;
  if (obj == null) {
    return null;
  } else {
    var captured = obj.cljsCaptured;
    return obj.cljsCaptured = cljs.core.conj.call(null, captured == null ? cljs.core.PersistentHashSet.EMPTY : captured, derefable);
  }
};
reagent.ratom.RAtom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.validator == null) {
  } else {
    if (cljs.core.truth_(self__.validator.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
    }
  }
  var old_value = self__.state;
  self__.state = new_value;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  }
  return new_value;
};
reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  return self__.state;
};
reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.RAtom.cljs$lang$type = true;
reagent.ratom.RAtom.cljs$lang$ctorStr = "reagent.ratom/RAtom";
reagent.ratom.RAtom.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write.call(null, writer__4364__auto__, "reagent.ratom/RAtom");
};
reagent.ratom.__GT_RAtom = function __GT_RAtom(state, meta, validator, watches) {
  return new reagent.ratom.RAtom(state, meta, validator, watches);
};
reagent.ratom.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new reagent.ratom.RAtom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__11158__delegate = function(x, p__11155) {
      var map__11157 = p__11155;
      var map__11157__$1 = cljs.core.seq_QMARK_.call(null, map__11157) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11157) : map__11157;
      var validator = cljs.core.get.call(null, map__11157__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__11157__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new reagent.ratom.RAtom(x, meta, validator, null);
    };
    var G__11158 = function(x, var_args) {
      var p__11155 = null;
      if (arguments.length > 1) {
        var G__11159__i = 0, G__11159__a = new Array(arguments.length - 1);
        while (G__11159__i < G__11159__a.length) {
          G__11159__a[G__11159__i] = arguments[G__11159__i + 1];
          ++G__11159__i;
        }
        p__11155 = new cljs.core.IndexedSeq(G__11159__a, 0);
      }
      return G__11158__delegate.call(this, x, p__11155);
    };
    G__11158.cljs$lang$maxFixedArity = 1;
    G__11158.cljs$lang$applyTo = function(arglist__11160) {
      var x = cljs.core.first(arglist__11160);
      var p__11155 = cljs.core.rest(arglist__11160);
      return G__11158__delegate(x, p__11155);
    };
    G__11158.cljs$core$IFn$_invoke$arity$variadic = G__11158__delegate;
    return G__11158;
  }();
  atom = function(x, var_args) {
    var p__11155 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__11161 = null;
        if (arguments.length > 1) {
          var G__11162__i = 0, G__11162__a = new Array(arguments.length - 1);
          while (G__11162__i < G__11162__a.length) {
            G__11162__a[G__11162__i] = arguments[G__11162__i + 1];
            ++G__11162__i;
          }
          G__11161 = new cljs.core.IndexedSeq(G__11162__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11161);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.ratom.peek_at = function peek_at(a, path) {
  var _STAR_ratom_context_STAR_11164 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = null;
  try {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, a), path);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_11164;
  }
};
reagent.ratom.RCursor = function(path, ratom, setf, reaction) {
  this.path = path;
  this.ratom = ratom;
  this.setf = setf;
  this.reaction = reaction;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom, self__.path, self__.setf], null));
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._notify_watches.call(null, self__.ratom, oldval, newval);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._add_watch.call(null, self__.ratom, key, f);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._remove_watch.call(null, self__.ratom, key);
};
reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cCursor: ");
  cljs.core.pr_writer.call(null, self__.path, writer, opts);
  cljs.core._write.call(null, writer, " ");
  cljs.core.pr_writer.call(null, self__.ratom, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path)));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x, y));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x, y, more));
};
reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.setf == null) {
    return cljs.core.swap_BANG_.call(null, self__.ratom, cljs.core.assoc_in, self__.path, new_value);
  } else {
    return self__.setf.call(null, new_value);
  }
};
reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (reagent.ratom._STAR_ratom_context_STAR_ == null) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
  } else {
    if (self__.reaction == null) {
      self__.reaction = reagent.ratom.make_reaction.call(null, function(this$__$1) {
        return function() {
          return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
        };
      }(this$__$1));
    } else {
    }
    return cljs.core.deref.call(null, self__.reaction);
  }
};
reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return other instanceof reagent.ratom.RCursor && cljs.core._EQ_.call(null, self__.path, other.path) && cljs.core._EQ_.call(null, self__.ratom, other.ratom) && cljs.core._EQ_.call(null, self__.setf, other.setf);
};
reagent.ratom.RCursor.cljs$lang$type = true;
reagent.ratom.RCursor.cljs$lang$ctorStr = "reagent.ratom/RCursor";
reagent.ratom.RCursor.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write.call(null, writer__4364__auto__, "reagent.ratom/RCursor");
};
reagent.ratom.__GT_RCursor = function __GT_RCursor(path, ratom, setf, reaction) {
  return new reagent.ratom.RCursor(path, ratom, setf, reaction);
};
reagent.ratom.cursor = function() {
  var cursor = null;
  var cursor__2 = function(path, ra) {
    return new reagent.ratom.RCursor(path, ra, null, null);
  };
  var cursor__4 = function(path, ra, setf, args) {
    return new reagent.ratom.RCursor(path, ra, new reagent.impl.util.partial_ifn(setf, args, null), null);
  };
  cursor = function(path, ra, setf, args) {
    switch(arguments.length) {
      case 2:
        return cursor__2.call(this, path, ra);
      case 4:
        return cursor__4.call(this, path, ra, setf, args);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cursor.cljs$core$IFn$_invoke$arity$2 = cursor__2;
  cursor.cljs$core$IFn$_invoke$arity$4 = cursor__4;
  return cursor;
}();
reagent.ratom.IDisposable = function() {
  var obj11166 = {};
  return obj11166;
}();
reagent.ratom.dispose_BANG_ = function dispose_BANG_(this$) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = reagent.ratom.dispose_BANG_[goog.typeOf(x__4420__auto__)];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = reagent.ratom.dispose_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IRunnable = function() {
  var obj11168 = {};
  return obj11168;
}();
reagent.ratom.run = function run(this$) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.reagent$ratom$IRunnable$run$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.reagent$ratom$IRunnable$run$arity$1(this$);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = reagent.ratom.run[goog.typeOf(x__4420__auto__)];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = reagent.ratom.run["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.run", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IComputedImpl = function() {
  var obj11170 = {};
  return obj11170;
}();
reagent.ratom._update_watching = function _update_watching(this$, derefed) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2(this$, derefed);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = reagent.ratom._update_watching[goog.typeOf(x__4420__auto__)];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = reagent.ratom._update_watching["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-update-watching", this$);
        }
      }
    }().call(null, this$, derefed);
  }
};
reagent.ratom._handle_change = function _handle_change(k, sender, oldval, newval) {
  if (function() {
    var and__3764__auto__ = k;
    if (and__3764__auto__) {
      return k.reagent$ratom$IComputedImpl$_handle_change$arity$4;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return k.reagent$ratom$IComputedImpl$_handle_change$arity$4(k, sender, oldval, newval);
  } else {
    var x__4420__auto__ = k == null ? null : k;
    return function() {
      var or__3776__auto__ = reagent.ratom._handle_change[goog.typeOf(x__4420__auto__)];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = reagent.ratom._handle_change["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-handle-change", k);
        }
      }
    }().call(null, k, sender, oldval, newval);
  }
};
reagent.ratom.call_watches = function call_watches(obs, watches, oldval, newval) {
  return cljs.core.reduce_kv.call(null, function(_, key, f) {
    f.call(null, key, obs, oldval, newval);
    return null;
  }, null, watches);
};
reagent.ratom.Reaction = function(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  this.f = f;
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.active_QMARK_ = active_QMARK_;
  this.watching = watching;
  this.watches = watches;
  this.auto_run = auto_run;
  this.on_set = on_set;
  this.on_dispose = on_dispose;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_handle_change$arity$4 = function(this$, sender, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = self__.active_QMARK_;
    if (cljs.core.truth_(and__3764__auto__)) {
      return cljs.core.not.call(null, self__.dirty_QMARK_) && !(oldval === newval);
    } else {
      return and__3764__auto__;
    }
  }())) {
    self__.dirty_QMARK_ = true;
    return function() {
      var or__3776__auto__ = self__.auto_run;
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        return reagent.ratom.run;
      }
    }().call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_update_watching$arity$2 = function(this$, derefed) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11171_11183 = cljs.core.seq.call(null, derefed);
  var chunk__11172_11184 = null;
  var count__11173_11185 = 0;
  var i__11174_11186 = 0;
  while (true) {
    if (i__11174_11186 < count__11173_11185) {
      var w_11187 = cljs.core._nth.call(null, chunk__11172_11184, i__11174_11186);
      if (cljs.core.contains_QMARK_.call(null, self__.watching, w_11187)) {
      } else {
        cljs.core.add_watch.call(null, w_11187, this$__$1, reagent.ratom._handle_change);
      }
      var G__11188 = seq__11171_11183;
      var G__11189 = chunk__11172_11184;
      var G__11190 = count__11173_11185;
      var G__11191 = i__11174_11186 + 1;
      seq__11171_11183 = G__11188;
      chunk__11172_11184 = G__11189;
      count__11173_11185 = G__11190;
      i__11174_11186 = G__11191;
      continue;
    } else {
      var temp__4126__auto___11192 = cljs.core.seq.call(null, seq__11171_11183);
      if (temp__4126__auto___11192) {
        var seq__11171_11193__$1 = temp__4126__auto___11192;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11171_11193__$1)) {
          var c__4563__auto___11194 = cljs.core.chunk_first.call(null, seq__11171_11193__$1);
          var G__11195 = cljs.core.chunk_rest.call(null, seq__11171_11193__$1);
          var G__11196 = c__4563__auto___11194;
          var G__11197 = cljs.core.count.call(null, c__4563__auto___11194);
          var G__11198 = 0;
          seq__11171_11183 = G__11195;
          chunk__11172_11184 = G__11196;
          count__11173_11185 = G__11197;
          i__11174_11186 = G__11198;
          continue;
        } else {
          var w_11199 = cljs.core.first.call(null, seq__11171_11193__$1);
          if (cljs.core.contains_QMARK_.call(null, self__.watching, w_11199)) {
          } else {
            cljs.core.add_watch.call(null, w_11199, this$__$1, reagent.ratom._handle_change);
          }
          var G__11200 = cljs.core.next.call(null, seq__11171_11193__$1);
          var G__11201 = null;
          var G__11202 = 0;
          var G__11203 = 0;
          seq__11171_11183 = G__11200;
          chunk__11172_11184 = G__11201;
          count__11173_11185 = G__11202;
          i__11174_11186 = G__11203;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__11175_11204 = cljs.core.seq.call(null, self__.watching);
  var chunk__11176_11205 = null;
  var count__11177_11206 = 0;
  var i__11178_11207 = 0;
  while (true) {
    if (i__11178_11207 < count__11177_11206) {
      var w_11208 = cljs.core._nth.call(null, chunk__11176_11205, i__11178_11207);
      if (cljs.core.contains_QMARK_.call(null, derefed, w_11208)) {
      } else {
        cljs.core.remove_watch.call(null, w_11208, this$__$1);
      }
      var G__11209 = seq__11175_11204;
      var G__11210 = chunk__11176_11205;
      var G__11211 = count__11177_11206;
      var G__11212 = i__11178_11207 + 1;
      seq__11175_11204 = G__11209;
      chunk__11176_11205 = G__11210;
      count__11177_11206 = G__11211;
      i__11178_11207 = G__11212;
      continue;
    } else {
      var temp__4126__auto___11213 = cljs.core.seq.call(null, seq__11175_11204);
      if (temp__4126__auto___11213) {
        var seq__11175_11214__$1 = temp__4126__auto___11213;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11175_11214__$1)) {
          var c__4563__auto___11215 = cljs.core.chunk_first.call(null, seq__11175_11214__$1);
          var G__11216 = cljs.core.chunk_rest.call(null, seq__11175_11214__$1);
          var G__11217 = c__4563__auto___11215;
          var G__11218 = cljs.core.count.call(null, c__4563__auto___11215);
          var G__11219 = 0;
          seq__11175_11204 = G__11216;
          chunk__11176_11205 = G__11217;
          count__11177_11206 = G__11218;
          i__11178_11207 = G__11219;
          continue;
        } else {
          var w_11220 = cljs.core.first.call(null, seq__11175_11214__$1);
          if (cljs.core.contains_QMARK_.call(null, derefed, w_11220)) {
          } else {
            cljs.core.remove_watch.call(null, w_11220, this$__$1);
          }
          var G__11221 = cljs.core.next.call(null, seq__11175_11214__$1);
          var G__11222 = null;
          var G__11223 = 0;
          var G__11224 = 0;
          seq__11175_11204 = G__11221;
          chunk__11176_11205 = G__11222;
          count__11177_11206 = G__11223;
          i__11178_11207 = G__11224;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return self__.watching = derefed;
};
reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cReaction "), cljs.core.str(cljs.core.hash.call(null, this$__$1)), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11179_11225 = cljs.core.seq.call(null, self__.watching);
  var chunk__11180_11226 = null;
  var count__11181_11227 = 0;
  var i__11182_11228 = 0;
  while (true) {
    if (i__11182_11228 < count__11181_11227) {
      var w_11229 = cljs.core._nth.call(null, chunk__11180_11226, i__11182_11228);
      cljs.core.remove_watch.call(null, w_11229, this$__$1);
      var G__11230 = seq__11179_11225;
      var G__11231 = chunk__11180_11226;
      var G__11232 = count__11181_11227;
      var G__11233 = i__11182_11228 + 1;
      seq__11179_11225 = G__11230;
      chunk__11180_11226 = G__11231;
      count__11181_11227 = G__11232;
      i__11182_11228 = G__11233;
      continue;
    } else {
      var temp__4126__auto___11234 = cljs.core.seq.call(null, seq__11179_11225);
      if (temp__4126__auto___11234) {
        var seq__11179_11235__$1 = temp__4126__auto___11234;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11179_11235__$1)) {
          var c__4563__auto___11236 = cljs.core.chunk_first.call(null, seq__11179_11235__$1);
          var G__11237 = cljs.core.chunk_rest.call(null, seq__11179_11235__$1);
          var G__11238 = c__4563__auto___11236;
          var G__11239 = cljs.core.count.call(null, c__4563__auto___11236);
          var G__11240 = 0;
          seq__11179_11225 = G__11237;
          chunk__11180_11226 = G__11238;
          count__11181_11227 = G__11239;
          i__11182_11228 = G__11240;
          continue;
        } else {
          var w_11241 = cljs.core.first.call(null, seq__11179_11235__$1);
          cljs.core.remove_watch.call(null, w_11241, this$__$1);
          var G__11242 = cljs.core.next.call(null, seq__11179_11235__$1);
          var G__11243 = null;
          var G__11244 = 0;
          var G__11245 = 0;
          seq__11179_11225 = G__11242;
          chunk__11180_11226 = G__11243;
          count__11181_11227 = G__11244;
          i__11182_11228 = G__11245;
          continue;
        }
      } else {
      }
    }
    break;
  }
  self__.watching = cljs.core.PersistentHashSet.EMPTY;
  self__.state = null;
  self__.dirty_QMARK_ = true;
  if (cljs.core.truth_(self__.active_QMARK_)) {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.dec);
    } else {
    }
    self__.active_QMARK_ = false;
  } else {
  }
  if (cljs.core.truth_(self__.on_dispose)) {
    return self__.on_dispose.call(null);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  var old_value = self__.state;
  self__.state = new_value;
  cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  return new_value;
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f__$1) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f__$1, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f__$1, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x, y));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f__$1, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f__$1, self__.state, x, y, more));
};
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var oldstate = self__.state;
  var res = reagent.ratom.capture_derefed.call(null, self__.f, this$__$1);
  var derefed = reagent.ratom.captured.call(null, this$__$1);
  if (cljs.core.not_EQ_.call(null, derefed, self__.watching)) {
    reagent.ratom._update_watching.call(null, this$__$1, derefed);
  } else {
  }
  if (cljs.core.truth_(self__.active_QMARK_)) {
  } else {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
    } else {
    }
    self__.active_QMARK_ = true;
  }
  self__.dirty_QMARK_ = false;
  self__.state = res;
  reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldstate, self__.state);
  return res;
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.on_set)) {
    self__.on_set.call(null, oldval, newval);
  } else {
  }
  return reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldval, newval);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, k, wf) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, k, wf);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  self__.watches = cljs.core.dissoc.call(null, self__.watches, k);
  if (cljs.core.empty_QMARK_.call(null, self__.watches)) {
    return reagent.ratom.dispose_BANG_.call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, function() {
    var or__3776__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
    var x__5304__auto___11246 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.auto_run, reagent.ratom._STAR_ratom_context_STAR_], null);
    if (typeof console !== "undefined") {
      console.log([cljs.core.str([cljs.core.str("dbg "), cljs.core.str("reagent.ratom"), cljs.core.str(":"), cljs.core.str(249), cljs.core.str(": "), cljs.core.str("[auto-run *ratom-context*]"), cljs.core.str(": "), cljs.core.str(cljs.core.pr_str.call(null, x__5304__auto___11246))].join(""))].join(""));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(function() {
    var or__3776__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Reaction derefed outside auto-running context"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "auto-run", "auto-run", -696035332, null), new cljs.core.Symbol(null, "*ratom-context*", "*ratom-context*", -1557728360, null))))].join(""));
  }
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  if (cljs.core.truth_(self__.dirty_QMARK_)) {
    return reagent.ratom.run.call(null, this$__$1);
  } else {
    return self__.state;
  }
};
reagent.ratom.Reaction.cljs$lang$type = true;
reagent.ratom.Reaction.cljs$lang$ctorStr = "reagent.ratom/Reaction";
reagent.ratom.Reaction.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write.call(null, writer__4364__auto__, "reagent.ratom/Reaction");
};
reagent.ratom.__GT_Reaction = function __GT_Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  return new reagent.ratom.Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose);
};
reagent.ratom.make_reaction = function() {
  var make_reaction__delegate = function(f, p__11247) {
    var map__11249 = p__11247;
    var map__11249__$1 = cljs.core.seq_QMARK_.call(null, map__11249) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11249) : map__11249;
    var derefed = cljs.core.get.call(null, map__11249__$1, new cljs.core.Keyword(null, "derefed", "derefed", 590684583));
    var on_dispose = cljs.core.get.call(null, map__11249__$1, new cljs.core.Keyword(null, "on-dispose", "on-dispose", 2105306360));
    var on_set = cljs.core.get.call(null, map__11249__$1, new cljs.core.Keyword(null, "on-set", "on-set", -140953470));
    var auto_run = cljs.core.get.call(null, map__11249__$1, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437));
    var runner = cljs.core._EQ_.call(null, auto_run, true) ? reagent.ratom.run : auto_run;
    var active = !(derefed == null);
    var dirty = !active;
    var reaction = new reagent.ratom.Reaction(f, null, dirty, active, null, cljs.core.PersistentArrayMap.EMPTY, runner, on_set, on_dispose);
    if (derefed == null) {
    } else {
      if (cljs.core.truth_(reagent.ratom.debug)) {
        cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
      } else {
      }
      reagent.ratom._update_watching.call(null, reaction, derefed);
    }
    return reaction;
  };
  var make_reaction = function(f, var_args) {
    var p__11247 = null;
    if (arguments.length > 1) {
      var G__11250__i = 0, G__11250__a = new Array(arguments.length - 1);
      while (G__11250__i < G__11250__a.length) {
        G__11250__a[G__11250__i] = arguments[G__11250__i + 1];
        ++G__11250__i;
      }
      p__11247 = new cljs.core.IndexedSeq(G__11250__a, 0);
    }
    return make_reaction__delegate.call(this, f, p__11247);
  };
  make_reaction.cljs$lang$maxFixedArity = 1;
  make_reaction.cljs$lang$applyTo = function(arglist__11251) {
    var f = cljs.core.first(arglist__11251);
    var p__11247 = cljs.core.rest(arglist__11251);
    return make_reaction__delegate(f, p__11247);
  };
  make_reaction.cljs$core$IFn$_invoke$arity$variadic = make_reaction__delegate;
  return make_reaction;
}();
goog.provide("reagent.impl.batching");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("reagent.interop");
goog.require("reagent.debug");
if (typeof reagent.impl.batching.mount_count !== "undefined") {
} else {
  reagent.impl.batching.mount_count = 0;
}
reagent.impl.batching.next_mount_count = function next_mount_count() {
  return reagent.impl.batching.mount_count = reagent.impl.batching.mount_count + 1;
};
reagent.impl.batching.fake_raf = function fake_raf(f) {
  return setTimeout(f, 16);
};
reagent.impl.batching.next_tick = cljs.core.not.call(null, reagent.impl.util.is_client) ? reagent.impl.batching.fake_raf : function() {
  var w = window;
  var or__3776__auto__ = w["requestAnimationFrame"];
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    var or__3776__auto____$1 = w["webkitRequestAnimationFrame"];
    if (cljs.core.truth_(or__3776__auto____$1)) {
      return or__3776__auto____$1;
    } else {
      var or__3776__auto____$2 = w["mozRequestAnimationFrame"];
      if (cljs.core.truth_(or__3776__auto____$2)) {
        return or__3776__auto____$2;
      } else {
        var or__3776__auto____$3 = w["msRequestAnimationFrame"];
        if (cljs.core.truth_(or__3776__auto____$3)) {
          return or__3776__auto____$3;
        } else {
          return reagent.impl.batching.fake_raf;
        }
      }
    }
  }
}();
reagent.impl.batching.compare_mount_order = function compare_mount_order(c1, c2) {
  return c1["cljsMountOrder"] - c2["cljsMountOrder"];
};
reagent.impl.batching.run_queue = function run_queue(a) {
  a.sort(reagent.impl.batching.compare_mount_order);
  var n__4663__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4663__auto__) {
      var c_11088 = a[i];
      if (cljs.core.truth_(c_11088["cljsIsDirty"])) {
        c_11088["forceUpdate"]();
      } else {
      }
      var G__11089 = i + 1;
      i = G__11089;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.run_funs = function run_funs(a) {
  var n__4663__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4663__auto__) {
      a[i].call(null);
      var G__11090 = i + 1;
      i = G__11090;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.RenderQueue = function(queue, scheduled_QMARK_, after_render) {
  this.queue = queue;
  this.scheduled_QMARK_ = scheduled_QMARK_;
  this.after_render = after_render;
};
reagent.impl.batching.RenderQueue.prototype.queue_render = function(c) {
  var self__ = this;
  var this$ = this;
  self__.queue.push(c);
  return this$.schedule();
};
reagent.impl.batching.RenderQueue.prototype.add_after_render = function(f) {
  var self__ = this;
  var _ = this;
  return self__.after_render.push(f);
};
reagent.impl.batching.RenderQueue.prototype.schedule = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.truth_(self__.scheduled_QMARK_)) {
    return null;
  } else {
    self__.scheduled_QMARK_ = true;
    return reagent.impl.batching.next_tick.call(null, function(this$) {
      return function() {
        return this$.run_queue();
      };
    }(this$));
  }
};
reagent.impl.batching.RenderQueue.prototype.run_queue = function() {
  var self__ = this;
  var _ = this;
  var q = self__.queue;
  var aq = self__.after_render;
  self__.queue = [];
  self__.after_render = [];
  self__.scheduled_QMARK_ = false;
  reagent.impl.batching.run_queue.call(null, q);
  return reagent.impl.batching.run_funs.call(null, aq);
};
reagent.impl.batching.RenderQueue.cljs$lang$type = true;
reagent.impl.batching.RenderQueue.cljs$lang$ctorStr = "reagent.impl.batching/RenderQueue";
reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write.call(null, writer__4364__auto__, "reagent.impl.batching/RenderQueue");
};
reagent.impl.batching.__GT_RenderQueue = function __GT_RenderQueue(queue, scheduled_QMARK_, after_render) {
  return new reagent.impl.batching.RenderQueue(queue, scheduled_QMARK_, after_render);
};
reagent.impl.batching.render_queue = new reagent.impl.batching.RenderQueue([], false, []);
reagent.impl.batching.flush = function flush() {
  return reagent.impl.batching.render_queue.run_queue();
};
reagent.impl.batching.queue_render = function queue_render(c) {
  c["cljsIsDirty"] = true;
  return reagent.impl.batching.render_queue.queue_render(c);
};
reagent.impl.batching.mark_rendered = function mark_rendered(c) {
  return c["cljsIsDirty"] = false;
};
reagent.impl.batching.do_after_flush = function do_after_flush(f) {
  return reagent.impl.batching.render_queue.add_after_render(f);
};
reagent.impl.batching.do_later = function do_later(f) {
  reagent.impl.batching.do_after_flush.call(null, f);
  return reagent.impl.batching.render_queue.schedule();
};
reagent.impl.batching.is_reagent_component = function is_reagent_component(c) {
  var G__11092 = c;
  var G__11092__$1 = G__11092 == null ? null : G__11092["props"];
  var G__11092__$2 = G__11092__$1 == null ? null : G__11092__$1["argv"];
  return G__11092__$2;
};
reagent.impl.batching.run_reactively = function run_reactively(c, run) {
  if (cljs.core.truth_(reagent.impl.batching.is_reagent_component.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "is-reagent-component", "is-reagent-component", -1856228005, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  reagent.impl.batching.mark_rendered.call(null, c);
  var rat = c["cljsRatom"];
  if (rat == null) {
    var res = reagent.ratom.capture_derefed.call(null, run, c);
    var derefed = reagent.ratom.captured.call(null, c);
    if (!(derefed == null)) {
      c["cljsRatom"] = reagent.ratom.make_reaction.call(null, run, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437), function(res, derefed, rat) {
        return function() {
          return reagent.impl.batching.queue_render.call(null, c);
        };
      }(res, derefed, rat), new cljs.core.Keyword(null, "derefed", "derefed", 590684583), derefed);
    } else {
    }
    return res;
  } else {
    return reagent.ratom.run.call(null, rat);
  }
};
reagent.impl.batching.dispose = function dispose(c) {
  var G__11094_11095 = c["cljsRatom"];
  var G__11094_11096__$1 = G__11094_11095 == null ? null : reagent.ratom.dispose_BANG_.call(null, G__11094_11095);
  return reagent.impl.batching.mark_rendered.call(null, c);
};
goog.provide("reagent.impl.component");
goog.require("cljs.core");
goog.require("reagent.debug");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.util");
reagent.impl.component.state_atom = function state_atom(this$) {
  var sa = this$["cljsState"];
  if (!(sa == null)) {
    return sa;
  } else {
    return this$["cljsState"] = reagent.ratom.atom.call(null, null);
  }
};
reagent.impl.component.state = function state(this$) {
  return cljs.core.deref.call(null, reagent.impl.component.state_atom.call(null, this$));
};
reagent.impl.component.replace_state = function replace_state(this$, new_state) {
  return cljs.core.reset_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), new_state);
};
reagent.impl.component.set_state = function set_state(this$, new_state) {
  return cljs.core.swap_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), cljs.core.merge, new_state);
};
reagent.impl.component.as_element = function as_element(x) {
  return reagent.impl.template.as_element(x);
};
reagent.impl.component.do_render = function do_render(c) {
  var _STAR_current_component_STAR_11070 = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.component._STAR_current_component_STAR_ = c;
  try {
    var f = c["cljsRender"];
    var _ = cljs.core.ifn_QMARK_.call(null, f) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }();
    var p = c["props"];
    var res = c["componentFunction"] == null ? f.call(null, c) : function() {
      var argv = p["argv"];
      var n = cljs.core.count.call(null, argv);
      var G__11071 = n;
      switch(G__11071) {
        case 1:
          return f.call(null);
          break;
        case 2:
          return f.call(null, cljs.core.nth.call(null, argv, 1));
          break;
        case 3:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2));
          break;
        case 4:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3));
          break;
        case 5:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3), cljs.core.nth.call(null, argv, 4));
          break;
        default:
          return cljs.core.apply.call(null, f, cljs.core.subvec.call(null, argv, 1));
      }
    }();
    if (cljs.core.vector_QMARK_.call(null, res)) {
      return reagent.impl.component.as_element.call(null, res);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, res)) {
        c["cljsRender"] = res;
        return do_render.call(null, c);
      } else {
        return res;
      }
    }
  } finally {
    reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR_11070;
  }
};
reagent.impl.component.static_fns = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "render", "render", -1408033454), function() {
  var c = this;
  if (cljs.core.not.call(null, reagent.impl.component._STAR_non_reactive_STAR_)) {
    return reagent.impl.batching.run_reactively.call(null, c, function(c) {
      return function() {
        return reagent.impl.component.do_render.call(null, c);
      };
    }(c));
  } else {
    return reagent.impl.component.do_render.call(null, c);
  }
}], null);
reagent.impl.component.custom_wrapper = function custom_wrapper(key, f) {
  var G__11074 = key instanceof cljs.core.Keyword ? key.fqn : null;
  switch(G__11074) {
    case "componentWillUnmount":
      return function(G__11074) {
        return function() {
          var c = this;
          reagent.impl.batching.dispose.call(null, c);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__11074);
      break;
    case "componentWillMount":
      return function(G__11074) {
        return function() {
          var c = this;
          c["cljsMountOrder"] = reagent.impl.batching.next_mount_count.call(null);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__11074);
      break;
    case "componentDidUpdate":
      return function(G__11074) {
        return function(oldprops) {
          var c = this;
          return f.call(null, c, oldprops["argv"]);
        };
      }(G__11074);
      break;
    case "componentWillUpdate":
      return function(G__11074) {
        return function(nextprops) {
          var c = this;
          return f.call(null, c, nextprops["argv"]);
        };
      }(G__11074);
      break;
    case "shouldComponentUpdate":
      return function(G__11074) {
        return function(nextprops, nextstate) {
          var or__3776__auto__ = reagent.impl.util._STAR_always_update_STAR_;
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            var c = this;
            var old_argv = c["props"]["argv"];
            var new_argv = nextprops["argv"];
            if (f == null) {
              return old_argv == null || new_argv == null || cljs.core.not_EQ_.call(null, old_argv, new_argv);
            } else {
              return f.call(null, c, old_argv, new_argv);
            }
          }
        };
      }(G__11074);
      break;
    case "componentWillReceiveProps":
      return function(G__11074) {
        return function(props) {
          var c = this;
          return f.call(null, c, props["argv"]);
        };
      }(G__11074);
      break;
    case "getInitialState":
      return function(G__11074) {
        return function() {
          var c = this;
          return reagent.impl.component.set_state.call(null, c, f.call(null, c));
        };
      }(G__11074);
      break;
    case "getDefaultProps":
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("getDefaultProps not supported yet"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));break;
    default:
      return null;
  }
};
reagent.impl.component.default_wrapper = function default_wrapper(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    return function() {
      var G__11076__delegate = function(args) {
        var c = this;
        return cljs.core.apply.call(null, f, c, args);
      };
      var G__11076 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__11077__i = 0, G__11077__a = new Array(arguments.length - 0);
          while (G__11077__i < G__11077__a.length) {
            G__11077__a[G__11077__i] = arguments[G__11077__i + 0];
            ++G__11077__i;
          }
          args = new cljs.core.IndexedSeq(G__11077__a, 0);
        }
        return G__11076__delegate.call(this, args);
      };
      G__11076.cljs$lang$maxFixedArity = 0;
      G__11076.cljs$lang$applyTo = function(arglist__11078) {
        var args = cljs.core.seq(arglist__11078);
        return G__11076__delegate(args);
      };
      G__11076.cljs$core$IFn$_invoke$arity$variadic = G__11076__delegate;
      return G__11076;
    }();
  } else {
    return f;
  }
};
reagent.impl.component.dont_wrap = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), null, new cljs.core.Keyword(null, "render", "render", -1408033454), null, new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104), null], null), null);
reagent.impl.component.dont_bind = function dont_bind(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    var G__11080 = f;
    G__11080["__reactDontBind"] = true;
    return G__11080;
  } else {
    return f;
  }
};
reagent.impl.component.get_wrapper = function get_wrapper(key, f, name) {
  if (cljs.core.truth_(reagent.impl.component.dont_wrap.call(null, key))) {
    return reagent.impl.component.dont_bind.call(null, f);
  } else {
    var wrap = reagent.impl.component.custom_wrapper.call(null, key, f);
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = wrap;
      if (cljs.core.truth_(and__3764__auto__)) {
        return f;
      } else {
        return and__3764__auto__;
      }
    }())) {
      if (cljs.core.ifn_QMARK_.call(null, f)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected function in "), cljs.core.str(name), cljs.core.str(key), cljs.core.str(" but got "), cljs.core.str(f)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
      }
    } else {
    }
    var or__3776__auto__ = wrap;
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return reagent.impl.component.default_wrapper.call(null, f);
    }
  }
};
reagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), null, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), null, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), null], null);
reagent.impl.component.dash_to_camel = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.component.camelify_map_keys = function camelify_map_keys(fun_map) {
  return cljs.core.reduce_kv.call(null, function(m, k, v) {
    return cljs.core.assoc.call(null, m, cljs.core.keyword.call(null, reagent.impl.component.dash_to_camel.call(null, k)), v);
  }, cljs.core.PersistentArrayMap.EMPTY, fun_map);
};
reagent.impl.component.add_obligatory = function add_obligatory(fun_map) {
  return cljs.core.merge.call(null, reagent.impl.component.obligatory, fun_map);
};
reagent.impl.component.add_render = function add_render(fun_map, render_f) {
  return cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), render_f, new cljs.core.Keyword(null, "render", "render", -1408033454), (new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(reagent.impl.component.static_fns));
};
reagent.impl.component.wrap_funs = function wrap_funs(fun_map) {
  var render_fun = function() {
    var or__3776__auto__ = (new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return(new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(fun_map);
    }
  }();
  var _ = cljs.core.ifn_QMARK_.call(null, render_fun) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Render must be a function, not "), cljs.core.str(cljs.core.pr_str.call(null, render_fun))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "render-fun", "render-fun", -1209513086, null))))].join(""));
  }();
  var name = [cljs.core.str(function() {
    var or__3776__auto__ = (new cljs.core.Keyword(null, "displayName", "displayName", -809144601)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      var or__3776__auto____$1 = render_fun["displayName"];
      if (cljs.core.truth_(or__3776__auto____$1)) {
        return or__3776__auto____$1;
      } else {
        var or__3776__auto____$2 = render_fun["name"];
        if (cljs.core.truth_(or__3776__auto____$2)) {
          return or__3776__auto____$2;
        } else {
          return "";
        }
      }
    }
  }())].join("");
  var name_SINGLEQUOTE_ = cljs.core.empty_QMARK_.call(null, name) ? [cljs.core.str(cljs.core.gensym.call(null, "reagent"))].join("") : name;
  var fmap = reagent.impl.component.add_render.call(null, cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "displayName", "displayName", -809144601), name_SINGLEQUOTE_), render_fun);
  return cljs.core.reduce_kv.call(null, function(render_fun, _, name, name_SINGLEQUOTE_, fmap) {
    return function(m, k, v) {
      return cljs.core.assoc.call(null, m, k, reagent.impl.component.get_wrapper.call(null, k, v, name_SINGLEQUOTE_));
    };
  }(render_fun, _, name, name_SINGLEQUOTE_, fmap), cljs.core.PersistentArrayMap.EMPTY, fmap);
};
reagent.impl.component.map_to_js = function map_to_js(m) {
  return cljs.core.reduce_kv.call(null, function(o, k, v) {
    var G__11082 = o;
    G__11082[cljs.core.name.call(null, k)] = v;
    return G__11082;
  }, {}, m);
};
reagent.impl.component.cljsify = function cljsify(body) {
  return reagent.impl.component.map_to_js.call(null, reagent.impl.component.wrap_funs.call(null, reagent.impl.component.add_obligatory.call(null, reagent.impl.component.camelify_map_keys.call(null, body))));
};
reagent.impl.component.create_class = function create_class(body) {
  if (cljs.core.map_QMARK_.call(null, body)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "body", "body", -408674142, null))))].join(""));
  }
  var spec = reagent.impl.component.cljsify.call(null, body);
  var res = React["createClass"](spec);
  var f = function(spec, res) {
    return function() {
      var G__11083__delegate = function(args) {
        return reagent.impl.component.as_element.call(null, cljs.core.apply.call(null, cljs.core.vector, res, args));
      };
      var G__11083 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__11084__i = 0, G__11084__a = new Array(arguments.length - 0);
          while (G__11084__i < G__11084__a.length) {
            G__11084__a[G__11084__i] = arguments[G__11084__i + 0];
            ++G__11084__i;
          }
          args = new cljs.core.IndexedSeq(G__11084__a, 0);
        }
        return G__11083__delegate.call(this, args);
      };
      G__11083.cljs$lang$maxFixedArity = 0;
      G__11083.cljs$lang$applyTo = function(arglist__11085) {
        var args = cljs.core.seq(arglist__11085);
        return G__11083__delegate(args);
      };
      G__11083.cljs$core$IFn$_invoke$arity$variadic = G__11083__delegate;
      return G__11083;
    }();
  }(spec, res);
  reagent.impl.util.cache_react_class.call(null, f, res);
  reagent.impl.util.cache_react_class.call(null, res, res);
  return f;
};
goog.provide("reagent.impl.template");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("clojure.string");
goog.require("reagent.debug");
reagent.impl.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
reagent.impl.template.attr_aliases = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "className", new cljs.core.Keyword(null, "for", "for", -1323786319), "htmlFor", new cljs.core.Keyword(null, "charset", "charset", -1063822193), "charSet"], null);
reagent.impl.template.hiccup_tag_QMARK_ = function hiccup_tag_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol || typeof x === "string";
};
reagent.impl.template.valid_tag_QMARK_ = function valid_tag_QMARK_(x) {
  return reagent.impl.template.hiccup_tag_QMARK_.call(null, x) || cljs.core.ifn_QMARK_.call(null, x);
};
reagent.impl.template.to_js_val = function to_js_val(v) {
  if (typeof v === "string" || typeof v === "number") {
    return v;
  } else {
    if (function() {
      var G__11120 = v;
      if (G__11120) {
        var bit__4450__auto__ = G__11120.cljs$lang$protocol_mask$partition1$ & 4096;
        if (bit__4450__auto__ || G__11120.cljs$core$INamed$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.name.call(null, v);
    } else {
      if (cljs.core.coll_QMARK_.call(null, v)) {
        return cljs.core.clj__GT_js.call(null, v);
      } else {
        if (cljs.core.ifn_QMARK_.call(null, v)) {
          return function() {
            var G__11121__delegate = function(args) {
              return cljs.core.apply.call(null, v, args);
            };
            var G__11121 = function(var_args) {
              var args = null;
              if (arguments.length > 0) {
                var G__11122__i = 0, G__11122__a = new Array(arguments.length - 0);
                while (G__11122__i < G__11122__a.length) {
                  G__11122__a[G__11122__i] = arguments[G__11122__i + 0];
                  ++G__11122__i;
                }
                args = new cljs.core.IndexedSeq(G__11122__a, 0);
              }
              return G__11121__delegate.call(this, args);
            };
            G__11121.cljs$lang$maxFixedArity = 0;
            G__11121.cljs$lang$applyTo = function(arglist__11123) {
              var args = cljs.core.seq(arglist__11123);
              return G__11121__delegate(args);
            };
            G__11121.cljs$core$IFn$_invoke$arity$variadic = G__11121__delegate;
            return G__11121;
          }();
        } else {
          return v;
        }
      }
    }
  }
};
reagent.impl.template.undash_prop_name = function undash_prop_name(n) {
  var or__3776__auto__ = reagent.impl.template.attr_aliases.call(null, n);
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    return reagent.impl.util.dash_to_camel.call(null, n);
  }
};
reagent.impl.template.cached_prop_name = reagent.impl.util.memoize_1.call(null, reagent.impl.template.undash_prop_name);
reagent.impl.template.convert_prop_value = function convert_prop_value(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (typeof x === "number") {
      return x;
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce_kv.call(null, function(o, k, v) {
          var G__11125 = o;
          G__11125[reagent.impl.template.cached_prop_name.call(null, k)] = reagent.impl.template.to_js_val.call(null, v);
          return G__11125;
        }, {}, x);
      } else {
        return reagent.impl.template.to_js_val.call(null, x);
      }
    }
  }
};
reagent.impl.template.set_id_class = function set_id_class(props, p__11126) {
  var vec__11128 = p__11126;
  var id = cljs.core.nth.call(null, vec__11128, 0, null);
  var class$ = cljs.core.nth.call(null, vec__11128, 1, null);
  var pid = props["id"];
  props["id"] = cljs.core.some_QMARK_.call(null, pid) ? pid : id;
  if (cljs.core.some_QMARK_.call(null, class$)) {
    var old = props["className"];
    return props["className"] = cljs.core.some_QMARK_.call(null, old) ? [cljs.core.str(class$), cljs.core.str(" "), cljs.core.str(old)].join("") : class$;
  } else {
    return null;
  }
};
reagent.impl.template.convert_props = function convert_props(props, id_class) {
  if (cljs.core.empty_QMARK_.call(null, props) && id_class == null) {
    return null;
  } else {
    var objprops = cljs.core.reduce_kv.call(null, function(o, k, v) {
      var pname_11129 = reagent.impl.template.cached_prop_name.call(null, k);
      o[pname_11129] = reagent.impl.template.convert_prop_value.call(null, v);
      return o;
    }, {}, props);
    if (cljs.core.some_QMARK_.call(null, id_class)) {
      reagent.impl.template.set_id_class.call(null, objprops, id_class);
    } else {
    }
    return objprops;
  }
};
reagent.impl.template.input_unmount = function input_unmount(this$) {
  return this$["cljsInputValue"] = null;
};
reagent.impl.template.input_set_value = function input_set_value(this$) {
  var temp__4130__auto__ = this$["cljsInputValue"];
  if (temp__4130__auto__ == null) {
    return null;
  } else {
    var value = temp__4130__auto__;
    this$["cljsInputDirty"] = false;
    var node = this$["getDOMNode"]();
    if (cljs.core.not_EQ_.call(null, value, node["value"])) {
      return node["value"] = value;
    } else {
      return null;
    }
  }
};
reagent.impl.template.input_handle_change = function input_handle_change(this$, on_change, e) {
  var res = on_change.call(null, e);
  if (cljs.core.truth_(this$["cljsInputDirty"])) {
  } else {
    this$["cljsInputDirty"] = true;
    reagent.impl.batching.do_later.call(null, function(res) {
      return function() {
        return reagent.impl.template.input_set_value.call(null, this$);
      };
    }(res));
  }
  return res;
};
reagent.impl.template.input_render_setup = function input_render_setup(this$, jsprops) {
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = jsprops["hasOwnProperty"]("onChange");
    if (cljs.core.truth_(and__3764__auto__)) {
      return jsprops["hasOwnProperty"]("value");
    } else {
      return and__3764__auto__;
    }
  }())) {
    var v = jsprops["value"];
    var value = v == null ? "" : v;
    var on_change = jsprops["onChange"];
    this$["cljsInputValue"] = value;
    delete jsprops["value"];
    var G__11132 = jsprops;
    G__11132["defaultValue"] = value;
    G__11132["onChange"] = function(G__11132, v, value, on_change) {
      return function(p1__11130_SHARP_) {
        return reagent.impl.template.input_handle_change.call(null, this$, on_change, p1__11130_SHARP_);
      };
    }(G__11132, v, value, on_change);
    return G__11132;
  } else {
    return this$["cljsInputValue"] = null;
  }
};
reagent.impl.template.input_component_QMARK_ = function input_component_QMARK_(x) {
  return x === "input" || x === "textarea";
};
reagent.impl.template.reagent_input_class = null;
reagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "display-name", "display-name", 694513143), "ReagentInput", new cljs.core.Keyword(null, "component-did-update", "component-did-update", -1468549173), reagent.impl.template.input_set_value, new cljs.core.Keyword(null, "component-will-unmount", "component-will-unmount", -2058314698), reagent.impl.template.input_unmount, new cljs.core.Keyword(null, "component-function", "component-function", 654728922), 
function(argv, comp, jsprops, first_child) {
  var this$ = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.template.input_render_setup.call(null, this$, jsprops);
  return reagent.impl.template.make_element.call(null, argv, comp, jsprops, first_child);
}], null);
reagent.impl.template.reagent_input = function reagent_input(argv, comp, jsprops, first_child) {
  if (reagent.impl.template.reagent_input_class == null) {
    reagent.impl.template.reagent_input_class = reagent.impl.component.create_class.call(null, reagent.impl.template.input_spec);
  } else {
  }
  return reagent.impl.template.reagent_input_class.call(null, argv, comp, jsprops, first_child);
};
reagent.impl.template.parse_tag = function parse_tag(hiccup_tag) {
  var vec__11134 = cljs.core.next.call(null, cljs.core.re_matches.call(null, reagent.impl.template.re_tag, cljs.core.name.call(null, hiccup_tag)));
  var tag = cljs.core.nth.call(null, vec__11134, 0, null);
  var id = cljs.core.nth.call(null, vec__11134, 1, null);
  var class$ = cljs.core.nth.call(null, vec__11134, 2, null);
  var class_SINGLEQUOTE_ = cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null;
  if (cljs.core.truth_(tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Unknown tag: '"), cljs.core.str(hiccup_tag), cljs.core.str("'")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "tag", "tag", 350170304, null)))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag, cljs.core.truth_(function() {
    var or__3776__auto__ = id;
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return class_SINGLEQUOTE_;
    }
  }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, class_SINGLEQUOTE_], null) : null], null);
};
reagent.impl.template.fn_to_class = function fn_to_class(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected a function, not "), cljs.core.str(cljs.core.pr_str.call(null, f))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var spec = cljs.core.meta.call(null, f);
  var withrender = cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "component-function", "component-function", 654728922), f);
  var res = reagent.impl.component.create_class.call(null, withrender);
  var wrapf = reagent.impl.util.cached_react_class.call(null, res);
  reagent.impl.util.cache_react_class.call(null, f, wrapf);
  return wrapf;
};
reagent.impl.template.as_class = function as_class(tag) {
  var temp__4128__auto__ = reagent.impl.util.cached_react_class.call(null, tag);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.fn_to_class.call(null, tag);
  } else {
    var cached_class = temp__4128__auto__;
    return cached_class;
  }
};
reagent.impl.template.get_key = function get_key(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return null;
  }
};
reagent.impl.template.reag_element = function reag_element(tag, v) {
  var c = reagent.impl.template.as_class.call(null, tag);
  var jsprops = {"argv":v};
  var key_11139 = function() {
    var temp__4128__auto__ = function() {
      var G__11137 = cljs.core.meta.call(null, v);
      var G__11137__$1 = G__11137 == null ? null : reagent.impl.template.get_key.call(null, G__11137);
      return G__11137__$1;
    }();
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.get_key.call(null, cljs.core.nth.call(null, v, 1, null));
    } else {
      var k = temp__4128__auto__;
      return k;
    }
  }();
  var G__11138_11140 = key_11139;
  var G__11138_11141__$1 = G__11138_11140 == null ? null : jsprops["key"] = G__11138_11140;
  return React["createElement"](c, jsprops);
};
reagent.impl.template.cached_parse = reagent.impl.util.memoize_1.call(null, reagent.impl.template.parse_tag);
reagent.impl.template.native_element = function native_element(tag, argv) {
  if (reagent.impl.template.hiccup_tag_QMARK_.call(null, tag)) {
    var vec__11145 = reagent.impl.template.cached_parse.call(null, tag);
    var comp = cljs.core.nth.call(null, vec__11145, 0, null);
    var id_class = cljs.core.nth.call(null, vec__11145, 1, null);
    var props = cljs.core.nth.call(null, argv, 1, null);
    var hasprops = props == null || cljs.core.map_QMARK_.call(null, props);
    var jsprops = reagent.impl.template.convert_props.call(null, hasprops ? props : null, id_class);
    var first_child = hasprops ? 2 : 1;
    if (reagent.impl.template.input_component_QMARK_.call(null, comp)) {
      return reagent.impl.template.as_element.call(null, cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input, argv, comp, jsprops, first_child], null), cljs.core.meta.call(null, argv)));
    } else {
      var p = function() {
        var temp__4128__auto__ = function() {
          var G__11146 = cljs.core.meta.call(null, argv);
          var G__11146__$1 = G__11146 == null ? null : reagent.impl.template.get_key.call(null, G__11146);
          return G__11146__$1;
        }();
        if (temp__4128__auto__ == null) {
          return jsprops;
        } else {
          var key = temp__4128__auto__;
          var G__11147 = jsprops == null ? {} : jsprops;
          G__11147["key"] = key;
          return G__11147;
        }
      }();
      return reagent.impl.template.make_element.call(null, argv, comp, p, first_child);
    }
  } else {
    return null;
  }
};
reagent.impl.template.vec_to_elem = function vec_to_elem(v) {
  if (cljs.core.count.call(null, v) > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Hiccup form should not be empty"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))))].join(""));
  }
  var tag = cljs.core.nth.call(null, v, 0);
  if (reagent.impl.template.valid_tag_QMARK_.call(null, tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Hiccup form: "), cljs.core.str(cljs.core.pr_str.call(null, v))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-tag?", "valid-tag?", 1243064160, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))))].join(""));
  }
  var temp__4128__auto__ = reagent.impl.template.native_element.call(null, tag, v);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.reag_element.call(null, tag, v);
  } else {
    var ne = temp__4128__auto__;
    return ne;
  }
};
reagent.impl.template.seq_ctx = {};
reagent.impl.template.warn_on_deref = function warn_on_deref(x) {
  if (cljs.core.truth_(reagent.impl.template.seq_ctx["warned"])) {
    return null;
  } else {
    if (typeof console !== "undefined") {
      console.log("Warning: Reactive deref not supported in seq in ", cljs.core.pr_str.call(null, x));
    } else {
    }
    return reagent.impl.template.seq_ctx["warned"] = true;
  }
};
reagent.impl.template.as_element = function as_element(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (cljs.core.vector_QMARK_.call(null, x)) {
      return reagent.impl.template.vec_to_elem.call(null, x);
    } else {
      if (cljs.core.seq_QMARK_.call(null, x)) {
        if (reagent.ratom._STAR_ratom_context_STAR_ == null) {
          return reagent.impl.template.expand_seq.call(null, x);
        } else {
          var s = reagent.ratom.capture_derefed.call(null, function() {
            return reagent.impl.template.expand_seq.call(null, x);
          }, reagent.impl.template.seq_ctx);
          if (cljs.core.truth_(reagent.ratom.captured.call(null, reagent.impl.template.seq_ctx))) {
            reagent.impl.template.warn_on_deref.call(null, x);
          } else {
          }
          return s;
        }
      } else {
        return x;
      }
    }
  }
};
reagent.impl.template.expand_seq = function expand_seq(s) {
  var a = cljs.core.into_array.call(null, s);
  var n__4663__auto___11148 = a.length;
  var i_11149 = 0;
  while (true) {
    if (i_11149 < n__4663__auto___11148) {
      a[i_11149] = reagent.impl.template.as_element.call(null, a[i_11149]);
      var G__11150 = i_11149 + 1;
      i_11149 = G__11150;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.make_element = function make_element(argv, comp, jsprops, first_child) {
  if (cljs.core.count.call(null, argv) === first_child + 1) {
    return React["createElement"](comp, jsprops, reagent.impl.template.as_element.call(null, cljs.core.nth.call(null, argv, first_child)));
  } else {
    return React["createElement"].apply(null, cljs.core.reduce_kv.call(null, function(a, k, v) {
      if (k >= first_child) {
        a.push(reagent.impl.template.as_element.call(null, v));
      } else {
      }
      return a;
    }, [comp, jsprops], argv));
  }
};
goog.provide("reagent.core");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.template");
goog.require("reagent.impl.batching");
goog.require("reagent.debug");
reagent.core.is_client = reagent.impl.util.is_client;
reagent.core.create_element = function() {
  var create_element = null;
  var create_element__1 = function(type) {
    return create_element.call(null, type, null);
  };
  var create_element__2 = function(type, props) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props);
  };
  var create_element__3 = function(type, props, child) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props, child);
  };
  var create_element__4 = function() {
    var G__11037__delegate = function(type, props, child, children) {
      if (!cljs.core.map_QMARK_.call(null, props)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
      }
      return cljs.core.apply.call(null, React.createElement, type, props, child, children);
    };
    var G__11037 = function(type, props, child, var_args) {
      var children = null;
      if (arguments.length > 3) {
        var G__11038__i = 0, G__11038__a = new Array(arguments.length - 3);
        while (G__11038__i < G__11038__a.length) {
          G__11038__a[G__11038__i] = arguments[G__11038__i + 3];
          ++G__11038__i;
        }
        children = new cljs.core.IndexedSeq(G__11038__a, 0);
      }
      return G__11037__delegate.call(this, type, props, child, children);
    };
    G__11037.cljs$lang$maxFixedArity = 3;
    G__11037.cljs$lang$applyTo = function(arglist__11039) {
      var type = cljs.core.first(arglist__11039);
      arglist__11039 = cljs.core.next(arglist__11039);
      var props = cljs.core.first(arglist__11039);
      arglist__11039 = cljs.core.next(arglist__11039);
      var child = cljs.core.first(arglist__11039);
      var children = cljs.core.rest(arglist__11039);
      return G__11037__delegate(type, props, child, children);
    };
    G__11037.cljs$core$IFn$_invoke$arity$variadic = G__11037__delegate;
    return G__11037;
  }();
  create_element = function(type, props, child, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return create_element__1.call(this, type);
      case 2:
        return create_element__2.call(this, type, props);
      case 3:
        return create_element__3.call(this, type, props, child);
      default:
        var G__11040 = null;
        if (arguments.length > 3) {
          var G__11041__i = 0, G__11041__a = new Array(arguments.length - 3);
          while (G__11041__i < G__11041__a.length) {
            G__11041__a[G__11041__i] = arguments[G__11041__i + 3];
            ++G__11041__i;
          }
          G__11040 = new cljs.core.IndexedSeq(G__11041__a, 0);
        }
        return create_element__4.cljs$core$IFn$_invoke$arity$variadic(type, props, child, G__11040);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_element.cljs$lang$maxFixedArity = 3;
  create_element.cljs$lang$applyTo = create_element__4.cljs$lang$applyTo;
  create_element.cljs$core$IFn$_invoke$arity$1 = create_element__1;
  create_element.cljs$core$IFn$_invoke$arity$2 = create_element__2;
  create_element.cljs$core$IFn$_invoke$arity$3 = create_element__3;
  create_element.cljs$core$IFn$_invoke$arity$variadic = create_element__4.cljs$core$IFn$_invoke$arity$variadic;
  return create_element;
}();
reagent.core.as_element = function as_element(form) {
  return reagent.impl.template.as_element.call(null, form);
};
reagent.core.render = function() {
  var render = null;
  var render__2 = function(comp, container) {
    return render.call(null, comp, container, null);
  };
  var render__3 = function(comp, container, callback) {
    var f = function() {
      return reagent.core.as_element.call(null, cljs.core.fn_QMARK_.call(null, comp) ? comp.call(null) : comp);
    };
    return reagent.impl.util.render_component.call(null, f, container, callback);
  };
  render = function(comp, container, callback) {
    switch(arguments.length) {
      case 2:
        return render__2.call(this, comp, container);
      case 3:
        return render__3.call(this, comp, container, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render.cljs$core$IFn$_invoke$arity$2 = render__2;
  render.cljs$core$IFn$_invoke$arity$3 = render__3;
  return render;
}();
reagent.core.unmount_component_at_node = function unmount_component_at_node(container) {
  return reagent.impl.util.unmount_component_at_node.call(null, container);
};
reagent.core.render_to_string = function render_to_string(component) {
  var _STAR_non_reactive_STAR_11043 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToString"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_11043;
  }
};
reagent.core.as_component = reagent.core.as_element;
reagent.core.render_component = reagent.core.render;
reagent.core.render_component_to_string = reagent.core.render_to_string;
reagent.core.render_to_static_markup = function render_to_static_markup(component) {
  var _STAR_non_reactive_STAR_11045 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToStaticMarkup"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_11045;
  }
};
reagent.core.force_update_all = function force_update_all() {
  return reagent.impl.util.force_update_all.call(null);
};
goog.exportSymbol("reagent.core.force_update_all", reagent.core.force_update_all);
reagent.core.create_class = function create_class(spec) {
  return reagent.impl.component.create_class.call(null, spec);
};
reagent.core.current_component = function current_component() {
  return reagent.impl.component._STAR_current_component_STAR_;
};
reagent.core.state = function state(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.component.state.call(null, this$);
};
reagent.core.replace_state = function replace_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.replace_state.call(null, this$, new_state);
};
reagent.core.set_state = function set_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.set_state.call(null, this$, new_state);
};
reagent.core.props = function props(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_props.call(null, this$);
};
reagent.core.children = function children(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_children.call(null, this$);
};
reagent.core.argv = function argv(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_argv.call(null, this$);
};
reagent.core.dom_node = function dom_node(this$) {
  return this$["getDOMNode"]();
};
reagent.core.merge_props = function merge_props(defaults, props) {
  return reagent.impl.util.merge_props.call(null, defaults, props);
};
reagent.core.flush = function flush() {
  return reagent.impl.batching.flush.call(null);
};
reagent.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return reagent.ratom.atom.call(null, x);
  };
  var atom__2 = function() {
    var G__11046__delegate = function(x, rest) {
      return cljs.core.apply.call(null, reagent.ratom.atom, x, rest);
    };
    var G__11046 = function(x, var_args) {
      var rest = null;
      if (arguments.length > 1) {
        var G__11047__i = 0, G__11047__a = new Array(arguments.length - 1);
        while (G__11047__i < G__11047__a.length) {
          G__11047__a[G__11047__i] = arguments[G__11047__i + 1];
          ++G__11047__i;
        }
        rest = new cljs.core.IndexedSeq(G__11047__a, 0);
      }
      return G__11046__delegate.call(this, x, rest);
    };
    G__11046.cljs$lang$maxFixedArity = 1;
    G__11046.cljs$lang$applyTo = function(arglist__11048) {
      var x = cljs.core.first(arglist__11048);
      var rest = cljs.core.rest(arglist__11048);
      return G__11046__delegate(x, rest);
    };
    G__11046.cljs$core$IFn$_invoke$arity$variadic = G__11046__delegate;
    return G__11046;
  }();
  atom = function(x, var_args) {
    var rest = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__11049 = null;
        if (arguments.length > 1) {
          var G__11050__i = 0, G__11050__a = new Array(arguments.length - 1);
          while (G__11050__i < G__11050__a.length) {
            G__11050__a[G__11050__i] = arguments[G__11050__i + 1];
            ++G__11050__i;
          }
          G__11049 = new cljs.core.IndexedSeq(G__11050__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11049);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.core.wrap = function() {
  var wrap__delegate = function(value, reset_fn, args) {
    if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
    }
    return reagent.impl.util.make_wrapper.call(null, value, reset_fn, args);
  };
  var wrap = function(value, reset_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__11051__i = 0, G__11051__a = new Array(arguments.length - 2);
      while (G__11051__i < G__11051__a.length) {
        G__11051__a[G__11051__i] = arguments[G__11051__i + 2];
        ++G__11051__i;
      }
      args = new cljs.core.IndexedSeq(G__11051__a, 0);
    }
    return wrap__delegate.call(this, value, reset_fn, args);
  };
  wrap.cljs$lang$maxFixedArity = 2;
  wrap.cljs$lang$applyTo = function(arglist__11052) {
    var value = cljs.core.first(arglist__11052);
    arglist__11052 = cljs.core.next(arglist__11052);
    var reset_fn = cljs.core.first(arglist__11052);
    var args = cljs.core.rest(arglist__11052);
    return wrap__delegate(value, reset_fn, args);
  };
  wrap.cljs$core$IFn$_invoke$arity$variadic = wrap__delegate;
  return wrap;
}();
reagent.core.cursor = function() {
  var cursor = null;
  var cursor__1 = function(path) {
    return function(ra) {
      return cursor.call(null, path, ra);
    };
  };
  var cursor__2 = function(path, ra) {
    if (function() {
      var G__11055 = ra;
      if (G__11055) {
        var bit__4457__auto__ = G__11055.cljs$lang$protocol_mask$partition0$ & 32768;
        if (bit__4457__auto__ || G__11055.cljs$core$IDeref$) {
          return true;
        } else {
          if (!G__11055.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__11055);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__11055);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "ra", "ra", 1258496501, null))))].join(""));
    }
    return reagent.ratom.cursor.call(null, path, ra);
  };
  var cursor__4 = function() {
    var G__11057__delegate = function(path, ra, reset_fn, args) {
      if (function() {
        var G__11056 = ra;
        if (G__11056) {
          var bit__4457__auto__ = G__11056.cljs$lang$protocol_mask$partition0$ & 32768;
          if (bit__4457__auto__ || G__11056.cljs$core$IDeref$) {
            return true;
          } else {
            if (!G__11056.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__11056);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__11056);
        }
      }()) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "ra", "ra", 1258496501, null))))].join(""));
      }
      if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
      }
      return reagent.ratom.cursor.call(null, path, ra, reset_fn, args);
    };
    var G__11057 = function(path, ra, reset_fn, var_args) {
      var args = null;
      if (arguments.length > 3) {
        var G__11058__i = 0, G__11058__a = new Array(arguments.length - 3);
        while (G__11058__i < G__11058__a.length) {
          G__11058__a[G__11058__i] = arguments[G__11058__i + 3];
          ++G__11058__i;
        }
        args = new cljs.core.IndexedSeq(G__11058__a, 0);
      }
      return G__11057__delegate.call(this, path, ra, reset_fn, args);
    };
    G__11057.cljs$lang$maxFixedArity = 3;
    G__11057.cljs$lang$applyTo = function(arglist__11059) {
      var path = cljs.core.first(arglist__11059);
      arglist__11059 = cljs.core.next(arglist__11059);
      var ra = cljs.core.first(arglist__11059);
      arglist__11059 = cljs.core.next(arglist__11059);
      var reset_fn = cljs.core.first(arglist__11059);
      var args = cljs.core.rest(arglist__11059);
      return G__11057__delegate(path, ra, reset_fn, args);
    };
    G__11057.cljs$core$IFn$_invoke$arity$variadic = G__11057__delegate;
    return G__11057;
  }();
  cursor = function(path, ra, reset_fn, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return cursor__1.call(this, path);
      case 2:
        return cursor__2.call(this, path, ra);
      default:
        var G__11060 = null;
        if (arguments.length > 3) {
          var G__11061__i = 0, G__11061__a = new Array(arguments.length - 3);
          while (G__11061__i < G__11061__a.length) {
            G__11061__a[G__11061__i] = arguments[G__11061__i + 3];
            ++G__11061__i;
          }
          G__11060 = new cljs.core.IndexedSeq(G__11061__a, 0);
        }
        return cursor__4.cljs$core$IFn$_invoke$arity$variadic(path, ra, reset_fn, G__11060);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cursor.cljs$lang$maxFixedArity = 3;
  cursor.cljs$lang$applyTo = cursor__4.cljs$lang$applyTo;
  cursor.cljs$core$IFn$_invoke$arity$1 = cursor__1;
  cursor.cljs$core$IFn$_invoke$arity$2 = cursor__2;
  cursor.cljs$core$IFn$_invoke$arity$variadic = cursor__4.cljs$core$IFn$_invoke$arity$variadic;
  return cursor;
}();
reagent.core.next_tick = function next_tick(f) {
  return reagent.impl.batching.next_tick.call(null, f);
};
reagent.core.partial = function() {
  var partial__delegate = function(f, args) {
    return new reagent.impl.util.partial_ifn(f, args, null);
  };
  var partial = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__11062__i = 0, G__11062__a = new Array(arguments.length - 1);
      while (G__11062__i < G__11062__a.length) {
        G__11062__a[G__11062__i] = arguments[G__11062__i + 1];
        ++G__11062__i;
      }
      args = new cljs.core.IndexedSeq(G__11062__a, 0);
    }
    return partial__delegate.call(this, f, args);
  };
  partial.cljs$lang$maxFixedArity = 1;
  partial.cljs$lang$applyTo = function(arglist__11063) {
    var f = cljs.core.first(arglist__11063);
    var args = cljs.core.rest(arglist__11063);
    return partial__delegate(f, args);
  };
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__delegate;
  return partial;
}();
goog.provide("info");
goog.require("cljs.core");
goog.require("utils");
goog.require("reagent.core");
if (typeof info.user !== "undefined") {
} else {
  info.user = reagent.core.atom.call(null, null);
}
info.game = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), 0, new cljs.core.Keyword(null, "sender", "sender", 1557303285), 0, new cljs.core.Keyword(null, "receiver", "receiver", 1768630781), 0], null));
if (typeof info.game_users !== "undefined") {
} else {
  info.game_users = reagent.core.atom.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, 12, null)));
}
if (typeof info.interval !== "undefined") {
} else {
  info.interval = reagent.core.atom.call(null, null);
}
info.set_user = function set_user(new_user) {
  return cljs.core.reset_BANG_.call(null, info.user, new_user);
};
info.set_game = function set_game(new_game) {
  return cljs.core.reset_BANG_.call(null, info.game, new_game);
};
info.clear_users = function clear_users() {
  return cljs.core.reset_BANG_.call(null, info.game_users, cljs.core.vec.call(null, cljs.core.repeat.call(null, 12, null)));
};
info.leave_user = function leave_user(id) {
  return cljs.core.swap_BANG_.call(null, info.game_users, function(users) {
    return cljs.core.mapv.call(null, function(p1__6435_SHARP_) {
      if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(p1__6435_SHARP_), id)) {
        return null;
      } else {
        return p1__6435_SHARP_;
      }
    }, users);
  });
};
info.new_user = function new_user(user) {
  var indexes = cljs.core.keep_indexed.call(null, function(p1__6437_SHARP_, p2__6436_SHARP_) {
    if (p2__6436_SHARP_ == null) {
      return p1__6437_SHARP_;
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, info.game_users));
  if (!cljs.core.empty_QMARK_.call(null, indexes)) {
    return cljs.core.swap_BANG_.call(null, info.game_users, cljs.core.assoc, cljs.core.first.call(null, indexes), user);
  } else {
    return null;
  }
};
info.add_users = function add_users(users) {
  info.clear_users.call(null);
  var seq__6442 = cljs.core.seq.call(null, users);
  var chunk__6443 = null;
  var count__6444 = 0;
  var i__6445 = 0;
  while (true) {
    if (i__6445 < count__6444) {
      var user = cljs.core._nth.call(null, chunk__6443, i__6445);
      info.new_user.call(null, user);
      var G__6446 = seq__6442;
      var G__6447 = chunk__6443;
      var G__6448 = count__6444;
      var G__6449 = i__6445 + 1;
      seq__6442 = G__6446;
      chunk__6443 = G__6447;
      count__6444 = G__6448;
      i__6445 = G__6449;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6442);
      if (temp__4126__auto__) {
        var seq__6442__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6442__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first.call(null, seq__6442__$1);
          var G__6450 = cljs.core.chunk_rest.call(null, seq__6442__$1);
          var G__6451 = c__4563__auto__;
          var G__6452 = cljs.core.count.call(null, c__4563__auto__);
          var G__6453 = 0;
          seq__6442 = G__6450;
          chunk__6443 = G__6451;
          count__6444 = G__6452;
          i__6445 = G__6453;
          continue;
        } else {
          var user = cljs.core.first.call(null, seq__6442__$1);
          info.new_user.call(null, user);
          var G__6454 = cljs.core.next.call(null, seq__6442__$1);
          var G__6455 = null;
          var G__6456 = 0;
          var G__6457 = 0;
          seq__6442 = G__6454;
          chunk__6443 = G__6455;
          count__6444 = G__6456;
          i__6445 = G__6457;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
info.get_user_by_id = function get_user_by_id(id) {
  var users = cljs.core.filter.call(null, cljs.core.identity, cljs.core.deref.call(null, info.game_users));
  return cljs.core.first.call(null, cljs.core.filter.call(null, function(users) {
    return function(p1__6458_SHARP_) {
      return cljs.core._EQ_.call(null, id, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(p1__6458_SHARP_));
    };
  }(users), users));
};
info.get_index_by_id = function get_index_by_id(id) {
  return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(p1__6460_SHARP_, p2__6459_SHARP_) {
    if (cljs.core._EQ_.call(null, id, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(p2__6459_SHARP_))) {
      return p1__6460_SHARP_;
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, info.game_users)));
};
info.update_user = function update_user(user, new_user) {
  return cljs.core.reset_BANG_.call(null, info.game_users, cljs.core.replace.call(null, new cljs.core.PersistentArrayMap.fromArray([user, new_user], true, false), cljs.core.deref.call(null, info.game_users)));
};
info.update_game_message = function update_game_message(id, message) {
  return cljs.core.swap_BANG_.call(null, info.game_users, function(users) {
    return cljs.core.mapv.call(null, function(p1__6461_SHARP_) {
      if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(p1__6461_SHARP_), id)) {
        return cljs.core.assoc.call(null, p1__6461_SHARP_, new cljs.core.Keyword(null, "message", "message", -406056002), message);
      } else {
        return p1__6461_SHARP_;
      }
    }, users);
  });
};
info.enter_room = function enter_room(data) {
  info.add_users.call(null, (new cljs.core.Keyword(null, "users", "users", -713552705)).cljs$core$IFn$_invoke$arity$1(data));
  var local_status = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(data), 0) ? new cljs.core.Keyword(null, "wait", "wait", -260664777) : new cljs.core.Keyword(null, "wait-kiss", "wait-kiss", -528466988);
  return info.set_game.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, info.game), new cljs.core.Keyword(null, "status", "status", -1997798413), (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(data), new cljs.core.Keyword(null, "local-status", "local-status", -811516016), local_status, new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170), (new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170)).cljs$core$IFn$_invoke$arity$1(data), 
  new cljs.core.Keyword(null, "receiver_id", "receiver_id", 267271636), (new cljs.core.Keyword(null, "receiver_id", "receiver_id", 267271636)).cljs$core$IFn$_invoke$arity$1(data)));
};
info.stop_game = function stop_game() {
  info.stop_timer.call(null);
  return info.set_game.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, info.game), new cljs.core.Keyword(null, "local-status", "local-status", -811516016), new cljs.core.Keyword(null, "error", "error", -978969032)));
};
info.kiss = function kiss(consent) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.user)), (new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)))) {
    info.set_game.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, info.game), new cljs.core.Keyword(null, "sender_consent", "sender_consent", 793598889), consent));
  } else {
  }
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.user)), (new cljs.core.Keyword(null, "receiver_id", "receiver_id", 267271636)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)))) {
    return info.set_game.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, info.game), new cljs.core.Keyword(null, "receiver_consent", "receiver_consent", 1955043782), consent));
  } else {
    return null;
  }
};
info.new_kiss = function new_kiss(data) {
  var current_time = utils.get_time.call(null);
  var new_game = cljs.core.assoc.call(null, cljs.core.dissoc.call(null, data, new cljs.core.Keyword(null, "c", "c", -1763192079)), new cljs.core.Keyword(null, "time", "time", 1385887882), current_time);
  if (cljs.core._EQ_.call(null, 0, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(data))) {
    return info.set_game.call(null, cljs.core.assoc.call(null, new_game, new cljs.core.Keyword(null, "local-status", "local-status", -811516016), new cljs.core.Keyword(null, "rotation", "rotation", -1728051644), new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170), (new cljs.core.Keyword(null, "new_sender_id", "new_sender_id", -998031563)).cljs$core$IFn$_invoke$arity$1(data), new cljs.core.Keyword(null, "receiver_id", "receiver_id", 267271636), (new cljs.core.Keyword(null, "new_receiver_id", 
    "new_receiver_id", 264498827)).cljs$core$IFn$_invoke$arity$1(data), new cljs.core.Keyword(null, "sender_consent", "sender_consent", 793598889), -1, new cljs.core.Keyword(null, "receiver_consent", "receiver_consent", 1955043782), -1));
  } else {
    return info.set_game.call(null, cljs.core.assoc.call(null, new_game, new cljs.core.Keyword(null, "local-status", "local-status", -811516016), new cljs.core.Keyword(null, "show-kiss", "show-kiss", -2014683812)));
  }
};
info.on_timer = function on_timer() {
  var current_time = utils.get_time.call(null);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)), new cljs.core.Keyword(null, "show-kiss", "show-kiss", -2014683812)) && current_time >= (new cljs.core.Keyword(null, "time", "time", 1385887882)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)) + 5) {
    info.set_game.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, info.game), new cljs.core.Keyword(null, "local-status", "local-status", -811516016), new cljs.core.Keyword(null, "rotation", "rotation", -1728051644), new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170), (new cljs.core.Keyword(null, "new_sender_id", "new_sender_id", -998031563)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)), new cljs.core.Keyword(null, "receiver_id", "receiver_id", 
    267271636), (new cljs.core.Keyword(null, "new_receiver_id", "new_receiver_id", 264498827)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)), new cljs.core.Keyword(null, "sender_consent", "sender_consent", 793598889), -1, new cljs.core.Keyword(null, "receiver_consent", "receiver_consent", 1955043782), -1, new cljs.core.Keyword(null, "time", "time", 1385887882), current_time));
  } else {
  }
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)), new cljs.core.Keyword(null, "rotation", "rotation", -1728051644)) && current_time >= (new cljs.core.Keyword(null, "time", "time", 1385887882)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)) + 5) {
    info.set_game.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, info.game), new cljs.core.Keyword(null, "local-status", "local-status", -811516016), new cljs.core.Keyword(null, "wait-kiss", "wait-kiss", -528466988), new cljs.core.Keyword(null, "time", "time", 1385887882), current_time));
  } else {
  }
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)), new cljs.core.Keyword(null, "wait-kiss", "wait-kiss", -528466988)) && current_time >= (new cljs.core.Keyword(null, "time", "time", 1385887882)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)) + 9) {
    return info.set_game.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, info.game), new cljs.core.Keyword(null, "local-status", "local-status", -811516016), new cljs.core.Keyword(null, "wait-result", "wait-result", 765011524), new cljs.core.Keyword(null, "time", "time", 1385887882), current_time));
  } else {
    return null;
  }
};
info.start_timer = function start_timer() {
  return cljs.core.reset_BANG_.call(null, info.interval, setInterval(info.on_timer, 1E3));
};
info.stop_timer = function stop_timer() {
  return clearInterval(cljs.core.deref.call(null, info.interval));
};
goog.provide("process");
goog.require("cljs.core");
goog.require("info");
goog.require("utils");
process.pong = function pong(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.auth = function auth(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.band_users = function band_users(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.last_guests = function last_guests(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.last_messages = function last_messages(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.last_remittances = function last_remittances(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.last_harem_changes = function last_harem_changes(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.last_marks = function last_marks(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.last_gifts = function last_gifts(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.error = function error(data) {
  return utils.log.call(null, [cljs.core.str("error: "), cljs.core.str((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(data))].join(""));
};
process.enter_room = function enter_room(data) {
  return info.enter_room.call(null, data);
};
process.room_new_user = function room_new_user(data) {
  return info.new_user.call(null, (new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(data));
};
process.room_leave_user = function room_leave_user(data) {
  return info.leave_user.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(data));
};
process.new_kiss = function new_kiss(data) {
  return info.new_kiss.call(null, data);
};
process.change_room = function change_room(data) {
  return new cljs.core.Symbol(null, "ok", "ok", -1686650533, null);
};
process.receive_game_message = function receive_game_message(data) {
  return info.update_game_message.call(null, (new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170)).cljs$core$IFn$_invoke$arity$1(data), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(data));
};
process.commands = cljs.core.PersistentHashMap.fromArrays(["receive_game_message", "change_room", "enter_room", "new_kiss", "last_remittances", "last_guests", "auth", "error", "pong", "last_gifts", "last_harem_changes", "band_users", "last_messages", "room_new_user", "last_marks", "room_leave_user"], [process.receive_game_message, process.change_room, process.enter_room, process.new_kiss, process.last_remittances, process.last_guests, process.auth, process.error, process.pong, process.last_gifts, 
process.last_harem_changes, process.band_users, process.last_messages, process.room_new_user, process.last_marks, process.room_leave_user]);
process.process = function process__$2(data) {
  var command = cljs.core.get.call(null, process.commands, (new cljs.core.Keyword(null, "c", "c", -1763192079)).cljs$core$IFn$_invoke$arity$1(data));
  if (cljs.core.truth_(command)) {
    return command.call(null, data);
  } else {
    return utils.log.call(null, [cljs.core.str("Unknown command"), cljs.core.str((new cljs.core.Keyword(null, "c", "c", -1763192079)).cljs$core$IFn$_invoke$arity$1(data))].join(""));
  }
};
goog.provide("connection");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("info");
goog.require("utils");
goog.require("process");
connection.address = "ws://217.23.139.28:9494";
if (typeof connection.websocket !== "undefined") {
} else {
  connection.websocket = reagent.core.atom.call(null, null);
}
if (typeof connection.interval !== "undefined") {
} else {
  connection.interval = reagent.core.atom.call(null, null);
}
connection.send_str = function send_str(data) {
  return cljs.core.deref.call(null, connection.websocket).send(data);
};
connection.send_map = function send_map(data) {
  var st = window.JSON.stringify(cljs.core.clj__GT_js.call(null, data));
  cljs.core.deref.call(null, connection.websocket).send([cljs.core.str(st), cljs.core.str("\x00")].join(""));
  return st;
};
connection.auth = function auth(user) {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "c", "c", -1763192079), "auth", new cljs.core.Keyword(null, "external_id", "external_id", -402537164), (new cljs.core.Keyword(null, "external_id", "external_id", -402537164)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "auth_key", "auth_key", -3847789), (new cljs.core.Keyword(null, "auth_key", "auth_key", -3847789)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, 
  "sn_id", "sn_id", 890113588), 1], null));
};
connection.update_info = function update_info(user) {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "c", "c", -1763192079), "update_info", new cljs.core.Keyword(null, "sex", "sex", -2056008571), (new cljs.core.Keyword(null, "sex", "sex", -2056008571)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "photo", "photo", -52852781), (new cljs.core.Keyword(null, "photo", "photo", -52852781)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "first_name", "first_name", 
  -1744629757), (new cljs.core.Keyword(null, "first_name", "first_name", -1744629757)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "last_name", "last_name", 44937527), (new cljs.core.Keyword(null, "last_name", "last_name", 44937527)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "age", "age", -604307804), (new cljs.core.Keyword(null, "age", "age", -604307804)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "city", "city", -393302614), (new cljs.core.Keyword(null, 
  "city", "city", -393302614)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "city_name", "city_name", 722637582), (new cljs.core.Keyword(null, "city_name", "city_name", 722637582)).cljs$core$IFn$_invoke$arity$1(user)], null));
};
connection.ping = function ping() {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "c", "c", -1763192079), "ping"], null));
};
connection.get_user_info = function get_user_info(id) {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", -1763192079), "get_user_info", new cljs.core.Keyword(null, "user_id", "user_id", 993497112), id], null));
};
connection.enter_room = function enter_room() {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "c", "c", -1763192079), "enter_room"], null));
};
connection.exit_room = function exit_room() {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "c", "c", -1763192079), "exit_room"], null));
};
connection.change_room = function change_room() {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "c", "c", -1763192079), "change_room"], null));
};
connection.kiss = function kiss(consent) {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", -1763192079), "kiss", new cljs.core.Keyword(null, "consent", "consent", 553073070), consent], null));
};
connection.send_game_message = function send_game_message(message) {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", -1763192079), "send_game_message", new cljs.core.Keyword(null, "message", "message", -406056002), message], null));
};
connection.get_users_for_mark = function get_users_for_mark() {
  return connection.send_map.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "c", "c", -1763192079), "get_users_for_mark"], null));
};
connection.on_message = function on_message(e) {
  var data = cljs.core.js__GT_clj.call(null, window.JSON.parse(e.data), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  return process.process.call(null, data);
};
connection.on_connect = function on_connect(e) {
  utils.log.call(null, "Client connect");
  if (cljs.core.deref.call(null, connection.interval) == null) {
  } else {
    clearInterval(cljs.core.deref.call(null, connection.interval));
  }
  cljs.core.reset_BANG_.call(null, connection.interval, setInterval(connection.ping, 45E3));
  connection.auth.call(null, cljs.core.deref.call(null, info.user));
  connection.update_info.call(null, cljs.core.deref.call(null, info.user));
  return connection.enter_room.call(null);
};
connection.on_disconnect = function on_disconnect(e) {
  info.stop_game.call(null);
  clearInterval(cljs.core.deref.call(null, connection.interval));
  return utils.log.call(null, "Client disconnect");
};
connection.on_error = function on_error(e) {
  info.stop_game.call(null);
  clearInterval(cljs.core.deref.call(null, connection.interval));
  return utils.log.call(null, [cljs.core.str("Client error"), cljs.core.str(e)].join(""));
};
connection.init_websocket = function init_websocket() {
  cljs.core.reset_BANG_.call(null, connection.websocket, new WebSocket(connection.address));
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__6487_SHARP_) {
    return cljs.core.deref.call(null, connection.websocket)[cljs.core.first.call(null, p1__6487_SHARP_)] = cljs.core.second.call(null, p1__6487_SHARP_);
  }, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onopen", connection.on_connect], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onclose", connection.on_disconnect], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["onerror", connection.on_error], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, ["onmessage", connection.on_message], null)], null)));
};
goog.provide("test");
goog.require("cljs.core");
goog.require("utils");
test.user_local = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "first_name", "first_name", -1744629757), new cljs.core.Keyword(null, "age", "age", -604307804), new cljs.core.Keyword(null, "sex", "sex", -2056008571), new cljs.core.Keyword(null, "city", "city", -393302614), new cljs.core.Keyword(null, "city_name", "city_name", 722637582), new cljs.core.Keyword(null, "auth_key", "auth_key", -3847789), new cljs.core.Keyword(null, "photo", "photo", -52852781), new cljs.core.Keyword(null, 
"external_id", "external_id", -402537164), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "last_name", "last_name", 44937527), new cljs.core.Keyword(null, "bdate", "bdate", 14816093)], ["\u0418\u0433\u043e\u0440\u044c", 1989, 2, 73, "\u041a\u0440\u0430\u0441\u043d\u043e\u044f\u0440\u0441\u043a", "26016f2dff9361f6587cbb7c54c5a117", "https://pp.vk.me/c1577/u1039055/a_f2fd5376.jpg", 1039055, 1039055, "\u041b\u0435\u0432\u0434\u0430\u043d\u0441\u043a\u0438\u0439", "01.01.1989"]);
test.user = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "name", "name", 1843675177), "John", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs315926.vk.me/v315926369/56f4/6j9VFPV-W3I.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), "Hello"], null);
test.users = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "name", "name", 1843675177), "John", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs315926.vk.me/v315926369/56f4/6j9VFPV-W3I.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), "\u041f\u0440\u0438\u0432\u0435\u0442, \u043a\u0430\u043a \u0434\u0435\u043b\u0430? \u042f \u043a\u043b\u0430\u0441\u0441\u043d\u044b\u0439!"], 
null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "name", "name", 1843675177), "Nicky", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs9925.vk.me/u121802689/a_1d4aa029.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), "\u041f\u043e\u043c\u043e\u043b\u0447\u0438 ;) \u0422\u044b \u0432\u0441\u0435 \u0443\u0436\u0435 \u0434\u043e\u0441\u0442\u0430\u043b!! \u0425\u0430\u0445\u0430\u0445!"], 
null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 3, new cljs.core.Keyword(null, "name", "name", 1843675177), "Engu", new cljs.core.Keyword(null, "photo", "photo", -52852781), "https://pp.vk.me/c320130/v320130987/6a36/zRJ7ysYChVk.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), "asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfas"], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 
4, new cljs.core.Keyword(null, "name", "name", 1843675177), "Erwa", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs5914.vk.me/u108581826/a_e9220377.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), ""], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 5, new cljs.core.Keyword(null, "name", "name", 1843675177), "LittleNicky", new cljs.core.Keyword(null, "photo", "photo", -52852781), "https://encrypted-tbn1.gstatic.com/images?q\x3dtbn:ANd9GcRuBc9bxBoUUbYtvwT_nGuB6DmvovFW4YFbxdVyhBk6sjlWH_q4", 
new cljs.core.Keyword(null, "message", "message", -406056002), ""], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 6, new cljs.core.Keyword(null, "name", "name", 1843675177), "Andrew", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs416117.vk.me/v416117839/41c0/mlQGI5mxwIU.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), "\u0412 \u0420\u0424, \u0443\u0440\u0430, \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u044b \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0438\u0441\u043a\u043e\u043f\u0430\u0435\u043c\u044b\u0435!"], 
null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 7, new cljs.core.Keyword(null, "name", "name", 1843675177), "Newh", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs416918.vk.me/v416918600/1772/2kVAaoMEeMk.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), ""], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 8, new cljs.core.Keyword(null, "name", "name", 
1843675177), "Alise", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs9224.vk.me/u57176780/a_286df639.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), ""], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 9, new cljs.core.Keyword(null, "name", "name", 1843675177), "Mini", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs207.vk.me/u43515624/a_d18263fb.jpg", new cljs.core.Keyword(null, 
"message", "message", -406056002), ""], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 10, new cljs.core.Keyword(null, "name", "name", 1843675177), "Ficky", new cljs.core.Keyword(null, "photo", "photo", -52852781), "http://cs417030.vk.me/v417030365/5520/FcSre_MHICc.jpg", new cljs.core.Keyword(null, "message", "message", -406056002), ""], null)], null);
test.tst = function tst(e) {
  var data = cljs.core.js__GT_clj.call(null, window.JSON.parse(e), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  return data;
};
test.tst.call(null, '{"a":"hello","users":[1,2,3]}');
test.user_positions = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-280, 80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-140, 130], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 145], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [140, 130], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [280, 80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-280, -80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-140, -130], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -145], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [140, -130], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [280, -80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 60], null)], null);
test.fp = function fp(index, p__6744) {
  var vec__6746 = p__6744;
  var x = cljs.core.nth.call(null, vec__6746, 0, null);
  var y = cljs.core.nth.call(null, vec__6746, 1, null);
  var rad = 180 * Math.atan2(x, -y) / Math.PI;
  var r = Math.round(720 + rad);
  var unit = "deg";
  return[cljs.core.str("\n"), cljs.core.str("@-moz-keyframes r"), cljs.core.str(index), cljs.core.str("{100% {transform: rotate("), cljs.core.str(r), cljs.core.str(unit), cljs.core.str(");}}\n"), cljs.core.str("@-webkit-keyframes r"), cljs.core.str(index), cljs.core.str("{100% {transform: rotate("), cljs.core.str(r), cljs.core.str(unit), cljs.core.str(");}}\n"), cljs.core.str("@-o-keyframes r"), cljs.core.str(index), cljs.core.str("{100% {transform: rotate("), cljs.core.str(r), cljs.core.str(unit), 
  cljs.core.str(");}}\n"), cljs.core.str("@-ms-keyframes r"), cljs.core.str(index), cljs.core.str("{100% {transform: rotate("), cljs.core.str(rad), cljs.core.str(unit), cljs.core.str(");}}\n"), cljs.core.str("@keyframes r"), cljs.core.str(index), cljs.core.str("{100% {transform: rotate("), cljs.core.str(r), cljs.core.str(unit), cljs.core.str(");}}\n")].join("");
};
Math.atan2(10, 10);
Math.PI;
cljs.core.PersistentArrayMap.EMPTY;
cljs.core.keep_indexed.call(null, test.fp, test.user_positions);
goog.provide("main");
goog.require("cljs.core");
goog.require("connection");
goog.require("test");
goog.require("info");
goog.require("reagent.core");
main.user_positions = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-280, 80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-140, 130], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 145], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [140, 130], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [280, 80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-280, -80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-140, -130], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -145], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [140, -130], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [280, -80], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 60], null)], null);
main.is_user_select = function is_user_select(game, user) {
  var or__3776__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170)).cljs$core$IFn$_invoke$arity$1(game), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(user));
  if (or__3776__auto__) {
    return or__3776__auto__;
  } else {
    var and__3764__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "receiver_id", "receiver_id", 267271636)).cljs$core$IFn$_invoke$arity$1(game), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(user));
    if (and__3764__auto__) {
      var G__7125 = (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(game) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(game).fqn : null;
      switch(G__7125) {
        case "wait-result":
          return true;
          break;
        case "wait-kiss":
          return true;
          break;
        case "show-kiss":
          return true;
          break;
        default:
          return false;
      }
    } else {
      return and__3764__auto__;
    }
  }
};
main.add_smiles = function add_smiles(msg) {
  return msg;
};
main.display_user = function display_user(game, user, p__7127) {
  var vec__7129 = p__7127;
  var x = cljs.core.nth.call(null, vec__7129, 0, null);
  var y = cljs.core.nth.call(null, vec__7129, 1, null);
  if (cljs.core.truth_(user)) {
    var w = 760 / 2 - 80 / 2;
    var h = 435 / 2 - 120 / 2 - -40;
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "user_div", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(w, h, vec__7129, x, y) {
      return function() {
        return window.open([cljs.core.str("http://vk.com/id"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(user))].join(""), "_blank");
      };
    }(w, h, vec__7129, x, y), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "left", "left", -399115937), [cljs.core.str(w + x), cljs.core.str("px")].join(""), new cljs.core.Keyword(null, "top", "top", -1856271961), [cljs.core.str(h + y), cljs.core.str("px")].join("")], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), 
    new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "user_name"], null), (new cljs.core.Keyword(null, "first_name", "first_name", -1744629757)).cljs$core$IFn$_invoke$arity$1(user)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_(main.is_user_select.call(null, 
    game, user)) ? "user_img_div user_select" : "user_img_div"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "user_img", new cljs.core.Keyword(null, "src", "src", -1651076051), (new cljs.core.Keyword(null, "photo", "photo", -52852781)).cljs$core$IFn$_invoke$arity$1(user)], null)], null)], null), 
    cljs.core.truth_(cljs.core.not_empty.call(null, (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(user))) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "user_phrase"], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(user)], 
    null) : null], null);
  } else {
    return null;
  }
};
main.display_bottle = function display_bottle(game) {
  var user_index = info.get_index_by_id.call(null, (new cljs.core.Keyword(null, "receiver_id", "receiver_id", 267271636)).cljs$core$IFn$_invoke$arity$1(game));
  var animation = [cljs.core.str("r"), cljs.core.str(user_index), cljs.core.str(" 5s ease-out forwards")].join("");
  var rot_style = cljs.core.not_EQ_.call(null, (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(game), new cljs.core.Keyword(null, "show-kiss", "show-kiss", -2014683812)) ? new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "-moz-animation", "-moz-animation", 922344036), animation, new cljs.core.Keyword(null, "-o-animation", "-o-animation", 194639525), animation, new cljs.core.Keyword(null, "-webkit-animation", "-webkit-animation", 
  561031553), animation, new cljs.core.Keyword(null, "animation", "animation", -1248293244), animation], null) : cljs.core.PersistentArrayMap.EMPTY;
  var vis_style = function() {
    var G__7131 = (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(game) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(game).fqn : null;
    switch(G__7131) {
      case "show-kiss":
        return "hidden";
        break;
      case "wait-result":
        return "visible";
        break;
      case "wait-kiss":
        if (cljs.core.truth_(main.need_display_kiss_button.call(null, game))) {
          return "hidden";
        } else {
          return "visible";
        }
        break;
      case "wait":
        return "visible";
        break;
      case "rotation":
        return "visible";
        break;
      default:
        return "visible";
    }
  }();
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "bottle", new cljs.core.Keyword(null, "src", "src", -1651076051), "resources/bottle.png", new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, rot_style, new cljs.core.Keyword(null, "visibility", "visibility", 1338380893), 
  vis_style)], null)], null);
};
main.display_info = function display_info() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "game_info"], null), function() {
    var G__7134 = (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)).fqn : null;
    switch(G__7134) {
      case "wait-result":
        return "\u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432";
        break;
      case "show-kiss":
        return "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b";
        break;
      case "rotation":
        return "\u0411\u0443\u0442\u044b\u043b\u043e\u0447\u043a\u0430 \u043a\u0440\u0443\u0442\u0438\u0442\u0441\u044f";
        break;
      case "wait-kiss":
        return "\u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f";
        break;
      case "wait":
        return "\u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u0432";
        break;
      default:
        return "";
    }
  }()], null);
};
main.display_result = function display_result(game) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "game_result"], null), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "receiver_consent", "receiver_consent", 1955043782)).cljs$core$IFn$_invoke$arity$1(game), 1) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "sender_consent", "sender_consent", 
  793598889)).cljs$core$IFn$_invoke$arity$1(game), 1) ? "\u041f\u043e\u0446\u0435\u043b\u043e\u0432\u0430\u043b\u0438\u0441\u044c!" : "\u041d\u0435 \u043f\u043e\u0446\u0435\u043b\u043e\u0432\u0430\u043b\u0438\u0441\u044c"], null);
};
main.need_display_kiss_button = function need_display_kiss_button(game) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(game), new cljs.core.Keyword(null, "wait-kiss", "wait-kiss", -528466988)) && (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "sender_id", "sender_id", 1234516170)).cljs$core$IFn$_invoke$arity$1(game), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.user))) && cljs.core._EQ_.call(null, 
  (new cljs.core.Keyword(null, "sender_consent", "sender_consent", 793598889)).cljs$core$IFn$_invoke$arity$1(game), -1) || cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "receiver_id", "receiver_id", 267271636)).cljs$core$IFn$_invoke$arity$1(game), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.user))) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "receiver_consent", "receiver_consent", 1955043782)).cljs$core$IFn$_invoke$arity$1(game), 
  -1));
};
main.display_kiss_buttons = function display_kiss_buttons(game) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "kiss_buttons"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "\u041f\u043e\u0446\u0435\u043b\u043e\u0432\u0430\u0442\u044c?"], null), new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "kiss_button yes_kiss_button", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function() {
    connection.kiss.call(null, 1);
    return info.kiss.call(null, 1);
  }], null), "\u0414\u0430"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "kiss_button no_kiss_button", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function() {
    connection.kiss.call(null, 0);
    return info.kiss.call(null, 0);
  }], null), "\u041d\u0435\u0442"], null)], null);
};
main.table = function table(game, users) {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "table"], null), cljs.core.map.call(null, function(p1__7136_SHARP_, p2__7137_SHARP_) {
    return main.display_user.call(null, game, p1__7136_SHARP_, p2__7137_SHARP_);
  }, users, main.user_positions), main.display_bottle.call(null, game), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(game), new cljs.core.Keyword(null, "show-kiss", "show-kiss", -2014683812)) ? main.display_result.call(null, game) : null, main.need_display_kiss_button.call(null, game) ? main.display_kiss_buttons.call(null, game) : null], null);
};
main.input_text = function input_text() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "class", "class", -2030961996), "text_input", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", 
  new cljs.core.Keyword(null, "max-length", "max-length", -254826109), "70", new cljs.core.Keyword(null, "on-key-down", "on-key-down", -1374733765), function(p1__7138_SHARP_) {
    if (cljs.core._EQ_.call(null, p1__7138_SHARP_.which, 13)) {
      connection.send_game_message.call(null, p1__7138_SHARP_.target.value);
      return p1__7138_SHARP_.target.value = "";
    } else {
      return null;
    }
  }], null)], null);
};
main.menu = function menu() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "menu"], null)], null);
};
main.display_error = function display_error() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "error"], null), "\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043e\u0440\u0432\u0430\u043d\u043e"], null);
};
main.game = function game() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), main.menu.call(null), main.table.call(null, cljs.core.deref.call(null, info.game), cljs.core.deref.call(null, info.game_users)), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "local-status", "local-status", -811516016)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, info.game)), new cljs.core.Keyword(null, "error", "error", -978969032)) ? 
  main.display_error.call(null) : null, main.input_text.call(null)], null);
};
var and__3764__auto___7139 = cljs.core.deref.call(null, connection.websocket);
if (cljs.core.truth_(and__3764__auto___7139)) {
  cljs.core.deref.call(null, connection.websocket).readyState > 1;
} else {
}
main.mount_html = function mount_html() {
  return reagent.core.render_component.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [main.game], null), document.body);
};
main.run = function run(js_user) {
  var user = cljs.core.js__GT_clj.call(null, js_user, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  main.mount_html.call(null);
  info.set_user.call(null, user);
  info.start_timer.call(null);
  return connection.init_websocket.call(null);
};
goog.exportSymbol("main.run", main.run);
main.run_local = function run_local() {
  main.mount_html.call(null);
  info.set_user.call(null, test.user_local);
  info.start_timer.call(null);
  return connection.init_websocket.call(null);
};
